{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap df876abeb46a4e1a62fd","webpack:///./src/cottontail.js","webpack:///./src/core/node.js","webpack:///./src/core/ray.js","webpack:///./src/core/renderer.js","webpack:///./src/core/material.js","webpack:///./src/core/program.js","webpack:///./src/core/texture.js","webpack:///./src/geometry/primitive-stream.js","webpack:///./src/core/primitive.js","webpack:///./src/geometry/box-builder.js","webpack:///./src/materials/pbr.js","webpack:///./src/scenes/scene.js","webpack:///./src/nodes/bounds-renderer.js","webpack:///./src/nodes/input-renderer.js","webpack:///./src/nodes/skybox.js","webpack:///./src/nodes/stats-viewer.js","webpack:///./src/nodes/seven-segment-text.js","webpack:///./src/loaders/gltf2.js","webpack:///./src/scenes/cube-sea.js","webpack:///./src/scenes/gltf2.js"],"names":["window","XRWebGLLayer","prototype","getViewport","view","Node","Renderer","createWebGLContext","PrimitiveStream","BoxBuilder","PbrMaterial","WebXRView","Scene","CubeSeaScene","GLTF2Scene","DEFAULT_TRANSLATION","Float32Array","DEFAULT_ROTATION","DEFAULT_SCALE","tmp_ray_matrix","mat4","create","tmp_ray_origin","vec3","name","children","parent","visible","selectable","_matrix","_dirty_trs","_translation","_rotation","_scale","_dirty_world_matrix","_world_matrix","_active_frame_id","_render_primitives","clone_node","copy","quat","primitive","addRenderPrimitive","child","addNode","clone","frame_id","markActive","value","removeNode","push","i","indexOf","splice","setMatrixDirty","fromRotationTranslationScale","child_promises","waitForComplete","Promise","all","then","_instances","index","length","ray_matrix","ray","_min","invert","world_matrix","multiply","intersection","intersectsAABB","_max","transformMat4","_hitTestSelectableNode","ray_origin","set","node","distance","result","child_result","hitTest","_updateLocalMatrix","mul","normal_mat","mat3","Ray","matrix","origin","_dir","fromMat4","transformMat3","dir","min","max","r","bounds","tmin","sign","inv_dir","tmax","tymin","tymax","tzmin","tzmax","t","Math","intersection_point","scale","add","normalize","fromValues","ATTRIB","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","ATTRIB_MASK","DEF_LIGHT_DIR","DEF_LIGHT_COLOR","PRECISION_REGEX","RegExp","VERTEX_SHADER_SINGLE_ENTRY","VERTEX_SHADER_MULTI_ENTRY","FRAGMENT_SHADER_ENTRY","isPowerOfTwo","n","glAttribs","alpha","webglCanvas","document","createElement","contextTypes","webgl2","context","contextType","getContext","webglType","console","error","RenderView","projection_matrix","view_matrix","viewport","eye","_eye","_eye_index","RenderBuffer","target","usage","buffer","_target","_usage","_length","_buffer","_promise","resolve","RenderPrimitiveAttribute","primitive_attribute","_attrib_index","_component_count","component_count","_component_type","component_type","_stride","stride","_byte_offset","byte_offset","_normalized","normalized","RenderPrimitiveAttributeBuffer","_attributes","RenderPrimitive","_mode","mode","_element_count","element_count","_vao","_complete","_material","_attribute_buffers","_attribute_mask","attributes","attribute","render_attribute","found_buffer","attribute_buffer","_index_buffer","_index_byte_offset","_index_type","index_buffer","index_byte_offset","index_type","material","program","reject","completion_promises","_uniform_dictionary","inverse_matrix","setCap","gl","gl_enum","cap","prev_state","state","change","enable","disable","RenderMaterialSampler","renderer","material_sampler","_uniform_name","_texture","_getRenderTexture","_index","RenderMaterialUniform","material_uniform","_uniform","_value","Array","RenderMaterial","_program","_state","_samplers","_uniforms","uniform","render_uniform","_complete_promise","_first_bind","_render_order","render_order","DEFAULT","BLEND","TRANSPARENT","OPAQUE","sampler","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","uniform1fv","uniform2fv","uniform3fv","uniform4fv","promises","other_state","CAPS_RANGE","BLEND_FUNC_RANGE","DEPTH_TEST","DEPTH_FUNC_RANGE","CULL_FACE","STENCIL_TEST","COLOR_MASK","DEPTH_MASK","STENCIL_MASK","DEPTH_FUNC_SHIFT","WebGLRenderingContext","NEVER","BLEND_SRC_RANGE","BLEND_SRC_SHIFT","BLEND_DST_RANGE","BLEND_DST_SHIFT","_gl","_frame_id","_program_cache","_texture_cache","_camera_positions","_vao_ext","getExtension","frag_high_precision","getShaderPrecisionFormat","FRAGMENT_SHADER","HIGH_FLOAT","_default_frag_precision","precision","_depth_mask_needs_reset","_color_mask_needs_reset","data","STATIC_DRAW","gl_buffer","createBuffer","render_buffer","bindBuffer","bufferData","byteLength","offset","bufferSubData","updateRenderBuffer","render_primitive","_getMaterialProgram","render_material","setRenderMaterial","createVertexArrayOES","bindVertexArrayOES","_bindPrimitive","mesh_node","createRenderPrimitive","views","root_node","vp","x","y","width","height","camera_position","render_primitives","_drawRenderPrimitiveSet","depthMask","colorMask","attrib_mask","use","LIGHT_DIRECTION","LIGHT_COLOR","uniformMatrix4fv","PROJECTION_MATRIX","VIEW_MATRIX","CAMERA_POSITION","uniform1i","EYE_INDEX","eye_index","_bindMaterialState","bind","instance","MODEL_MATRIX","drawElements","drawArrays","texture","key","texture_key","Error","texture_handle","createTexture","texImage2D","format","_type","_data","_setSamplerParameters","UNSIGNED_BYTE","_img","power_of_two","mipmap","generateMipmap","min_filter","LINEAR_MIPMAP_LINEAR","LINEAR","wrap_s","REPEAT","CLAMP_TO_EDGE","wrap_t","texParameteri","TEXTURE_MAG_FILTER","mag_filter","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","defines","define","material_name","vertex_source","fragment_source","getProgramDefines","_getProgramKey","multiview","full_vertex_source","precision_match","match","frag_precision_header","full_fragment_source","onNextUse","attrib","enableVertexAttribArray","disableVertexAttribArray","ARRAY_BUFFER","vertexAttribPointer","ELEMENT_ARRAY_BUFFER","prev_material","_capsDiff","color_mask_change","mask","depth_mask_change","stencil_mask_change","stencilMask","_blendDiff","blendFunc","blend_func_src","blend_func_dst","_depthFuncDiff","depthFunc","depth_func","stateToBlendFunc","GL","CAP","MAT_STATE","RENDER_ORDER","SKY","ADDITIVE","shift","SRC_COLOR","MaterialState","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","LESS","MaterialSampler","uniform_name","MaterialUniform","default_value","Material","Program","vert_src","frag_src","attrib_map","createProgram","_first_use","_next_use_callbacks","defines_string","_vert_shader","createShader","VERTEX_SHADER","attachShader","shaderSource","compileShader","_frag_shader","attrib_name","bindAttribLocation","linkProgram","callback","getProgramParameter","LINK_STATUS","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgramInfoLog","deleteProgram","attrib_count","ACTIVE_ATTRIBUTES","attrib_info","getActiveAttrib","getAttribLocation","uniform_count","ACTIVE_UNIFORMS","uniform_info","getActiveUniform","replace","getUniformLocation","deleteShader","useProgram","TextureSampler","Texture","RGBA","ImageTexture","img","src","complete","naturalWidth","addEventListener","UrlTexture","url","Image","BlobTexture","blob","URL","createObjectURL","next_data_texture_index","DataTexture","type","_width","_height","_format","_key","ColorTexture","g","b","a","color_data","Uint8Array","temp_vec3","options","_vertices","_indices","_geometry_started","_vertex_offset","_vertex_index","_high_index","_flip_winding","_invert_normals","_transform","_normal_transform","z","u","v","nx","ny","nz","idx_a","idx_b","idx_c","vertex_buffer","createRenderBuffer","Uint16Array","attribs","FLOAT","setIndexBuffer","setBounds","GeometryBuilderBase","primitive_stream","_stream","finishPrimitive","clear","PrimitiveAttribute","Primitive","stream","w","h","d","wh","hh","dh","cx","cy","cz","startGeometry","idx","next_vertex_index","pushTriangle","pushVertex","endGeometry","center","size","hs","pushBox","VERTEX_SOURCE","EPIC_PBR_FUNCTIONS","FRAGMENT_SOURCE","base_color","defineSampler","metallic_roughness","normal","occlusion","emissive","base_color_factor","defineUniform","metallic_roughness_factor","occlusion_strength","emissive_factor","program_defines","pose","layer","projectionMatrix","getViewMatrix","_timestamp","_frame_delta","_stats_enabled","_stats_standing","_stats","_stage_bounds","_bounds_renderer","_renderer","_input_renderer","_reset_input_end_frame","_skybox","_gltf2_loader","clearColor","setRenderer","translation","fromEuler","rotation","stage_bounds","onLoadScene","image_url","texture_loader","frame","frame_of_ref","session","getInputSources","input_sources","input_source","input_pose","getInputPose","gripMatrix","addController","pointerMatrix","pointerOrigin","addLaserPointer","hit_result","addCursor","cursor_pos","projection_mat","view_mat","drawViewArray","xr_frame","baseLayer","bindFramebuffer","FRAMEBUFFER","framebuffer","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","onDrawViews","prev_timestamp","performance","now","begin","reset","end","timestamp","drawViews","BoundsMaterial","blend","ONE","depth_test","BoundsRenderer","clearRenderPrimitives","verts","indices","point_count","geometry","point","LASER_TEXTURE_DATA","LASER_LENGTH","LASER_DIAMETER","LASER_FADE_END","LASER_FADE_POINT","LASER_DEFAULT_COLOR","CURSOR_RADIUS","CURSOR_SHADOW_RADIUS","CURSOR_SHADOW_INNER_LUMINANCE","CURSOR_SHADOW_OUTER_LUMINANCE","CURSOR_SHADOW_INNER_OPACITY","CURSOR_SHADOW_OUTER_OPACITY","CURSOR_OPACITY","CURSOR_SEGMENTS","CURSOR_DEFAULT_COLOR","CURSOR_DEFAULT_HIDDEN_COLOR","DEFAULT_RESET_OPTIONS","controllers","lasers","cursors","LaserMaterial","cull_face","depth_mask","laser","laser_color","CURSOR_VERTEX_SHADER","CURSOR_FRAGMENT_SHADER","CursorMaterial","cursor_color","CursorHiddenMaterial","GEQUAL","InputRenderer","_max_input_elements","_controllers","_controller_node","_controller_node_handedness","_lasers","_cursors","_active_controllers","_active_lasers","_active_cursors","controller_node","handedness","grip_matrix","controller","pointer_matrix","_createLaserMesh","_createCursorMesh","cursor","lr","ll","laser_verts","laser_indices","laser_vertex_buffer","laser_index_buffer","laser_index_count","laser_attribs","laser_primitive","laser_material","laser_render_primitive","cr","cursor_verts","cursor_indices","seg_rad","PI","rad","cos","sin","index_offset","cursor_vertex_buffer","cursor_index_buffer","cursor_index_count","cursor_attribs","cursor_primitive","cursor_material","cursor_hidden_material","cursor_render_primitive","cursor_hidden_render_primitive","SkyboxMaterial","LEQUAL","image","tex_coord_scale_offset","Skybox","_image_url","_display_mode","display_mode","vertices","lat_segments","lon_segments","theta","sin_theta","cos_theta","idx_offset_a","idx_offset_b","j","phi","SEGMENTS","MAX_FPS","StatsMaterial","segmentToX","fpsToY","fpsToRGB","Date","StatsViewer","_performance_monitoring","_start_time","_prev_frame_time","_prev_graph_update_time","_frames","_fps_average","_fps_min","_fps_step","_last_segment","_fps_vertex_buffer","_fps_render_primitive","_fps_node","_seven_segment_node","fps_verts","fps_indices","addBGSquare","left","bottom","right","top","DYNAMIC_DRAW","fps_index_buffer","fps_attribs","fps_primitive","time","frame_fps","interval_time","round","_updateGraph","enable_performance_monitoring","log","value_low","value_high","color","y0","y1","updateVerts","text","TEXT_KERNING","SevenSegmentMaterial","SevenSegmentText","_text","_char_nodes","segmentIndices","thickness","defineSegment","id","characters","defineCharacter","c","segments","character","count","segment","apply","vertex_attribs","_char_primitives","char","char_def","char_primitive","GLB_MAGIC","CHUNK_TYPE","JSON","BIN","isAbsoluteUri","uri","absRegEx","location","protocol","isDataUri","dataRegEx","resolveUri","baseUrl","getComponentCount","GLTF2Loader","fetch","response","lastIndexOf","substring","endsWith","json","loadFromJson","arrayBuffer","loadFromBinary","headerView","DataView","magic","getUint32","version","chunks","chunkOffset","chunkHeaderView","chunkLength","chunkType","slice","decoder","TextDecoder","jsonString","decode","parse","binaryChunk","asset","minVersion","buffers","GLTF2Resource","bufferViews","bufferView","GLTF2BufferView","images","textures","source","glTexture","minFilter","magFilter","wrapS","wrapT","getTexture","textureInfo","materials","glMaterial","pbr","pbrMetallicRoughness","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","alphaMode","doubleSided","accessors","meshes","mesh","glMesh","GLTF2Mesh","primitives","accessor","glAttribute","renderBuffer","componentType","byteStride","byteOffset","glPrimitive","indexType","indexByteOffset","scene_node","scene","scenes","nodes","nodeId","processNodes","glNode","_viewPromise","_renderBuffer","dataView","_dataPromise","base64String","binaryArray","from","atob","charCodeAt","Blob","mimeType","CubeSeaMaterial","_grid_size","grid_size","box_builder","half_grid","pos","pushCube","cube_sea_primitive","hero_primitive","cube_sea_node","createMesh","hero_node","fromRotation","gltf_node","gltf2Loader","loadFromUrl"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AClBA;;AACA;;AAEA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AAEA;AACA;AAjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA,KAAK,kBAAkBA,MAAnB,IAA8B,EAAE,iBAAiBC,aAAaC,SAAhC,CAAlC,EAA8E;AAC5ED,gBAAaC,SAAb,CAAuBC,WAAvB,GAAqC,UAASC,IAAT,EAAe;AAClD,YAAOA,KAAKD,WAAL,CAAiB,IAAjB,CAAP;AACD,IAFD;AAGD;;SAGCE,I;SACAC,Q;SACAC,kB;SAEAC,e;SACAC,U;SAEAC,W;SAEAC,S;SACAC,K;SACAC,Y;SACAC,U;;;;;;;;;;;;;sjBCrDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAEA,KAAMC,sBAAsB,IAAIC,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAjB,CAA5B;AACA,KAAMC,mBAAmB,IAAID,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAjB,CAAzB;AACA,KAAME,gBAAgB,IAAIF,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAjB,CAAtB;;AAEA,KAAIG,iBAAiBC,KAAKC,MAAL,EAArB;AACA,KAAIC,iBAAiBC,KAAKF,MAAL,EAArB;;KAEahB,I,WAAAA,I;AACX,mBAAc;AAAA;;AACZ,UAAKmB,IAAL,GAAY,IAAZ,CADY,CACM;AAClB,UAAKC,QAAL,GAAgB,EAAhB;AACA,UAAKC,MAAL,GAAc,IAAd;AACA,UAAKC,OAAL,GAAe,IAAf;AACA,UAAKC,UAAL,GAAkB,KAAlB;;AAEA,UAAKC,OAAL,GAAe,IAAf;;AAEA,UAAKC,UAAL,GAAkB,KAAlB;AACA,UAAKC,YAAL,GAAoB,IAApB;AACA,UAAKC,SAAL,GAAiB,IAAjB;AACA,UAAKC,MAAL,GAAc,IAAd;;AAEA,UAAKC,mBAAL,GAA2B,KAA3B;AACA,UAAKC,aAAL,GAAqB,IAArB;;AAEA,UAAKC,gBAAL,GAAwB,CAAC,CAAzB;AACA,UAAKC,kBAAL,GAA0B,IAA1B;AACD;;AAED;AACA;AACA;;;;;6BACQ;AACN,WAAIC,aAAa,IAAIjC,IAAJ,EAAjB;AACAiC,kBAAWd,IAAX,GAAkB,KAAKA,IAAvB;AACAc,kBAAWX,OAAX,GAAqB,KAAKA,OAA1B;;AAEAW,kBAAWR,UAAX,GAAwB,KAAKA,UAA7B;;AAEA,WAAI,KAAKC,YAAT,EAAuB;AACrBO,oBAAWP,YAAX,GAA0BR,KAAKF,MAAL,EAA1B;AACAE,cAAKgB,IAAL,CAAUD,WAAWP,YAArB,EAAmC,KAAKA,YAAxC;AACD;;AAED,WAAI,KAAKC,SAAT,EAAoB;AAClBM,oBAAWN,SAAX,GAAuBQ,KAAKnB,MAAL,EAAvB;AACAmB,cAAKD,IAAL,CAAUD,WAAWN,SAArB,EAAgC,KAAKA,SAArC;AACD;;AAED,WAAI,KAAKC,MAAT,EAAiB;AACfK,oBAAWL,MAAX,GAAoBV,KAAKF,MAAL,EAApB;AACAE,cAAKgB,IAAL,CAAUD,WAAWL,MAArB,EAA6B,KAAKA,MAAlC;AACD;;AAED;AACA,WAAI,CAACK,WAAWR,UAAZ,IAA0B,KAAKD,OAAnC,EAA4C;AAC1CS,oBAAWT,OAAX,GAAqBT,KAAKC,MAAL,EAArB;AACAD,cAAKmB,IAAL,CAAUD,WAAWT,OAArB,EAA8B,KAAKA,OAAnC;AACD;;AAEDS,kBAAWJ,mBAAX,GAAiC,KAAKA,mBAAtC;AACA,WAAI,CAACI,WAAWJ,mBAAZ,IAAmC,KAAKC,aAA5C,EAA2D;AACzDG,oBAAWH,aAAX,GAA2Bf,KAAKC,MAAL,EAA3B;AACAD,cAAKmB,IAAL,CAAUD,WAAWH,aAArB,EAAoC,KAAKA,aAAzC;AACD;;AAED,WAAI,KAAKE,kBAAT,EAA6B;AAAA;AAAA;AAAA;;AAAA;AAC3B,gCAAsB,KAAKA,kBAA3B,8HAA+C;AAAA,iBAAtCI,SAAsC;;AAC7CH,wBAAWI,kBAAX,CAA8BD,SAA9B;AACD;AAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI5B;;AAtCK;AAAA;AAAA;;AAAA;AAwCN,+BAAkB,KAAKhB,QAAvB,mIAAiC;AAAA,eAAxBkB,KAAwB;;AAC/BL,sBAAWM,OAAX,CAAmBD,MAAME,KAAN,EAAnB;AACD;AA1CK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4CN,cAAOP,UAAP;AACD;;;gCAEUQ,Q,EAAU;AACnB,WAAI,KAAKnB,OAAL,IAAgB,KAAKU,kBAAzB,EAA6C;AAC3C,cAAKD,gBAAL,GAAwBU,QAAxB;AAD2C;AAAA;AAAA;;AAAA;AAE3C,iCAAsB,KAAKT,kBAA3B,mIAA+C;AAAA,iBAAtCI,SAAsC;;AAC7CA,uBAAUM,UAAV,CAAqBD,QAArB;AACD;AAJ0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK5C;;AANkB;AAAA;AAAA;;AAAA;AAQnB,+BAAkB,KAAKrB,QAAvB,mIAAiC;AAAA,eAAxBkB,KAAwB;;AAC/B,eAAIA,MAAMhB,OAAV,EAAmB;AACjBgB,mBAAMI,UAAN,CAAiBD,QAAjB;AACD;AACF;AAZkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAapB;;;6BAEOE,K,EAAO;AACb,WAAI,CAACA,KAAD,IAAUA,MAAMtB,MAAN,IAAgB,IAA9B,EAAoC;AAClC;AACD;;AAED,WAAIsB,MAAMtB,MAAV,EAAkB;AAChBsB,eAAMtB,MAAN,CAAauB,UAAb,CAAwBD,KAAxB;AACD;AACDA,aAAMtB,MAAN,GAAe,IAAf;;AAEA,YAAKD,QAAL,CAAcyB,IAAd,CAAmBF,KAAnB;AACD;;;gCAEUA,K,EAAO;AAChB,WAAIG,IAAI,KAAK1B,QAAL,CAAc2B,OAAd,CAAsBJ,KAAtB,CAAR;AACA,WAAIG,IAAI,CAAC,CAAT,EAAY;AACV,cAAK1B,QAAL,CAAc4B,MAAd,CAAqBF,CAArB,EAAwB,CAAxB;AACAH,eAAMtB,MAAN,GAAe,IAAf;AACD;AACF;;;sCAEgB;AACf,WAAI,CAAC,KAAKQ,mBAAV,EAA+B;AAC7B,cAAKA,mBAAL,GAA2B,IAA3B;AAD6B;AAAA;AAAA;;AAAA;AAE7B,iCAAkB,KAAKT,QAAvB,mIAAiC;AAAA,iBAAxBkB,KAAwB;;AAC/BA,mBAAMW,cAAN;AACD;AAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK9B;AACF;;;0CAEoB;AACnB,WAAI,CAAC,KAAKzB,OAAV,EAAmB;AACjB,cAAKA,OAAL,GAAeT,KAAKC,MAAL,EAAf;AACD;;AAED,WAAI,KAAKS,UAAT,EAAqB;AACnB,cAAKA,UAAL,GAAkB,KAAlB;AACAV,cAAKmC,4BAAL,CACE,KAAK1B,OADP,EAEE,KAAKG,SAAL,IAAkBf,gBAFpB,EAGE,KAAKc,YAAL,IAAqBhB,mBAHvB,EAIE,KAAKkB,MAAL,IAAef,aAJjB;AAKD;;AAED,cAAO,KAAKW,OAAZ;AACD;;;uCAyFiB;AAAA;;AAChB,WAAI2B,iBAAiB,EAArB;AADgB;AAAA;AAAA;;AAAA;AAEhB,+BAAkB,KAAK/B,QAAvB,mIAAiC;AAAA,eAAxBkB,KAAwB;;AAC/Ba,0BAAeN,IAAf,CAAoBP,MAAMc,eAAN,EAApB;AACD;AAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKhB,WAAI,KAAKpB,kBAAT,EAA6B;AAAA;AAAA;AAAA;;AAAA;AAC3B,iCAAsB,KAAKA,kBAA3B,mIAA+C;AAAA,iBAAtCI,SAAsC;;AAC7Ce,4BAAeN,IAAf,CAAoBT,UAAUgB,eAAV,EAApB;AACD;AAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAI5B;AACD,cAAOC,QAAQC,GAAR,CAAYH,cAAZ,EAA4BI,IAA5B,CAAiC;AAAA;AAAA,QAAjC,CAAP;AACD;;;wCAMkBnB,S,EAAW;AAC5B,WAAI,CAAC,KAAKJ,kBAAV,EACE,KAAKA,kBAAL,GAA0B,CAACI,SAAD,CAA1B,CADF,KAGE,KAAKJ,kBAAL,CAAwBa,IAAxB,CAA6BT,SAA7B;AACFA,iBAAUoB,UAAV,CAAqBX,IAArB,CAA0B,IAA1B;AACD;;;2CAEqBT,S,EAAW;AAC/B,WAAI,CAAC,KAAKJ,kBAAV,EACE;;AAEF,WAAIyB,QAAQ,KAAKzB,kBAAL,CAAwBwB,UAAxB,CAAmCT,OAAnC,CAA2CX,SAA3C,CAAZ;AACA,WAAIqB,QAAQ,CAAC,CAAb,EAAgB;AACd,cAAKzB,kBAAL,CAAwBwB,UAAxB,CAAmCR,MAAnC,CAA0CS,KAA1C,EAAiD,CAAjD;;AAEAA,iBAAQrB,UAAUoB,UAAV,CAAqBT,OAArB,CAA6B,IAA7B,CAAR;AACA,aAAIU,QAAQ,CAAC,CAAb,EAAgB;AACdrB,qBAAUoB,UAAV,CAAqBR,MAArB,CAA4BS,KAA5B,EAAmC,CAAnC;AACD;;AAED,aAAI,CAAC,KAAKzB,kBAAL,CAAwB0B,MAA7B,EACE,KAAK1B,kBAAL,GAA0B,IAA1B;AACH;AACF;;;6CAEuB;AACtB,WAAI,KAAKA,kBAAT,EAA6B;AAAA;AAAA;AAAA;;AAAA;AAC3B,iCAAsB,KAAKA,kBAA3B,mIAA+C;AAAA,iBAAtCI,SAAsC;;AAC7C,iBAAIqB,QAAQrB,UAAUoB,UAAV,CAAqBT,OAArB,CAA6B,IAA7B,CAAZ;AACA,iBAAIU,QAAQ,CAAC,CAAb,EAAgB;AACdrB,yBAAUoB,UAAV,CAAqBR,MAArB,CAA4BS,KAA5B,EAAmC,CAAnC;AACD;AACF;AAN0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO3B,cAAKzB,kBAAL,GAA0B,IAA1B;AACD;AACF;;;4CAEsB2B,U,EAAY;AACjC,WAAI,KAAK3B,kBAAT,EAA6B;AAC3B,aAAI4B,MAAM,IAAV;AAD2B;AAAA;AAAA;;AAAA;AAE3B,iCAAsB,KAAK5B,kBAA3B,mIAA+C;AAAA,iBAAtCI,SAAsC;;AAC7C,iBAAIA,UAAUyB,IAAd,EAAoB;AAClB,mBAAI,CAACD,GAAL,EAAU;AACR7C,sBAAK+C,MAAL,CAAYhD,cAAZ,EAA4B,KAAKiD,YAAjC;AACAhD,sBAAKiD,QAAL,CAAclD,cAAd,EAA8BA,cAA9B,EAA8C6C,UAA9C;AACAC,uBAAM,aAAQ9C,cAAR,CAAN;AACD;AACD,mBAAImD,eAAeL,IAAIM,cAAJ,CAAmB9B,UAAUyB,IAA7B,EAAmCzB,UAAU+B,IAA7C,CAAnB;AACA,mBAAIF,YAAJ,EAAkB;AAChB/C,sBAAKkD,aAAL,CAAmBH,YAAnB,EAAiCA,YAAjC,EAA+C,KAAKF,YAApD;AACA,wBAAOE,YAAP;AACD;AACF;AACF;AAf0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB5B;AAjBgC;AAAA;AAAA;;AAAA;AAkBjC,gCAAkB,KAAK7C,QAAvB,wIAAiC;AAAA,eAAxBkB,KAAwB;;AAC/B,eAAI2B,gBAAe3B,MAAM+B,sBAAN,CAA6BV,UAA7B,CAAnB;AACA,eAAIM,aAAJ,EAAkB;AAChB,oBAAOA,aAAP;AACD;AACF;AAvBgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwBjC,cAAO,IAAP;AACD;;;6BAEON,U,EAA+B;AAAA,WAAnBW,UAAmB,uEAAN,IAAM;;AACrC,WAAI,CAACA,UAAL,EAAiB;AACfA,sBAAarD,cAAb;AACAC,cAAKqD,GAAL,CAASD,UAAT,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B;AACApD,cAAKkD,aAAL,CAAmBE,UAAnB,EAA+BA,UAA/B,EAA2CX,UAA3C;AACD;;AAED,WAAI,KAAKpC,UAAT,EAAqB;AACnB,aAAI0C,eAAe,KAAKI,sBAAL,CAA4BV,UAA5B,CAAnB;AACA,aAAIM,YAAJ,EAAkB;AAChB,kBAAO;AACLO,mBAAM,IADD;AAELP,2BAAcA,YAFT;AAGLQ,uBAAUvD,KAAKuD,QAAL,CAAcH,UAAd,EAA0BL,YAA1B;AAHL,YAAP;AAKD;AACD,gBAAO,IAAP;AACD;;AAED,WAAIS,SAAS,IAAb;AAnBqC;AAAA;AAAA;;AAAA;AAoBrC,gCAAkB,KAAKtD,QAAvB,wIAAiC;AAAA,eAAxBkB,KAAwB;;AAC/B,eAAIqC,eAAerC,MAAMsC,OAAN,CAAcjB,UAAd,EAA0BW,UAA1B,CAAnB;AACA,eAAIK,YAAJ,EAAkB;AAChB,iBAAI,CAACD,MAAD,IAAWA,OAAOD,QAAP,GAAkBE,aAAaF,QAA9C,EAAwD;AACtDC,wBAASC,YAAT;AACD;AACF;AACF;AA3BoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4BrC,cAAOD,MAAP;AACD;;;uBAtMU/B,K,EAAO;AAChB,YAAKnB,OAAL,GAAemB,KAAf;AACA,YAAKM,cAAL;AACA,YAAKxB,UAAL,GAAkB,KAAlB;AACA,YAAKC,YAAL,GAAoB,IAApB;AACA,YAAKC,SAAL,GAAiB,IAAjB;AACA,YAAKC,MAAL,GAAc,IAAd;AACD,M;yBAEY;AACX,YAAKqB,cAAL;;AAEA,cAAO,KAAK4B,kBAAL,EAAP;AACD;;;yBAEkB;AACjB,WAAI,CAAC,KAAK/C,aAAV,EAAyB;AACvB,cAAKD,mBAAL,GAA2B,IAA3B;AACA,cAAKC,aAAL,GAAqBf,KAAKC,MAAL,EAArB;AACD;;AAED,WAAI,KAAKa,mBAAL,IAA4B,KAAKJ,UAArC,EAAiD;AAC/C,aAAI,KAAKJ,MAAT,EAAiB;AACf;AACA;AACAN,gBAAK+D,GAAL,CAAS,KAAKhD,aAAd,EAA6B,KAAKT,MAAL,CAAY0C,YAAzC,EAAuD,KAAKc,kBAAL,EAAvD;AACD,UAJD,MAIO;AACL9D,gBAAKmB,IAAL,CAAU,KAAKJ,aAAf,EAA8B,KAAK+C,kBAAL,EAA9B;AACD;AACD,cAAKhD,mBAAL,GAA2B,KAA3B;AACD;;AAED,cAAO,KAAKC,aAAZ;AACD;;AAED;;;;uBACgBa,K,EAAO;AACrB,WAAIA,SAAS,IAAb,EAAmB;AACjB,cAAKlB,UAAL,GAAkB,IAAlB;AACA,cAAKwB,cAAL;AACD;AACD,YAAKvB,YAAL,GAAoBiB,KAApB;AACD,M;yBAEiB;AAChB,YAAKlB,UAAL,GAAkB,IAAlB;AACA,YAAKwB,cAAL;AACA,WAAI,CAAC,KAAKvB,YAAV,EAAwB;AACtB,cAAKA,YAAL,GAAoBR,KAAKsB,KAAL,CAAW9B,mBAAX,CAApB;AACD;AACD,cAAO,KAAKgB,YAAZ;AACD;;;uBAEYiB,K,EAAO;AAClB,WAAIA,SAAS,IAAb,EAAmB;AACjB,cAAKlB,UAAL,GAAkB,IAAlB;AACA,cAAKwB,cAAL;AACD;AACD,YAAKtB,SAAL,GAAiBgB,KAAjB;AACD,M;yBAEc;AACb,YAAKlB,UAAL,GAAkB,IAAlB;AACA,YAAKwB,cAAL;AACA,WAAI,CAAC,KAAKtB,SAAV,EAAqB;AACnB,cAAKA,SAAL,GAAiBQ,KAAKK,KAAL,CAAW5B,gBAAX,CAAjB;AACD;AACD,cAAO,KAAKe,SAAZ;AACD;;;uBAESgB,K,EAAO;AACf,WAAIA,SAAS,IAAb,EAAmB;AACjB,cAAKlB,UAAL,GAAkB,IAAlB;AACA,cAAKwB,cAAL;AACD;AACD,YAAKrB,MAAL,GAAce,KAAd;AACD,M;yBAEW;AACV,YAAKlB,UAAL,GAAkB,IAAlB;AACA,YAAKwB,cAAL;AACA,WAAI,CAAC,KAAKrB,MAAV,EAAkB;AAChB,cAAKA,MAAL,GAAcV,KAAKsB,KAAL,CAAW3B,aAAX,CAAd;AACD;AACD,cAAO,KAAKe,MAAZ;AACD;;;yBAesB;AACrB,cAAO,KAAKI,kBAAZ;AACD;;;;;;;;;;;;;;;;;;;;ACzQH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAI+C,aAAaC,KAAKhE,MAAL,EAAjB;;KAEaiE,G,WAAAA,G;AACX,kBAA2B;AAAA,SAAfC,MAAe,uEAAN,IAAM;;AAAA;;AACzB,UAAKC,MAAL,GAAcjE,KAAKF,MAAL,EAAd;;AAEA,UAAKoE,IAAL,GAAYlE,KAAKF,MAAL,EAAZ;AACA,UAAKoE,IAAL,CAAU,CAAV,IAAe,CAAC,GAAhB;;AAEA,SAAIF,MAAJ,EAAY;AACVhE,YAAKkD,aAAL,CAAmB,KAAKe,MAAxB,EAAgC,KAAKA,MAArC,EAA6CD,MAA7C;AACAF,YAAKK,QAAL,CAAcN,UAAd,EAA0BG,MAA1B;AACAhE,YAAKoE,aAAL,CAAmB,KAAKF,IAAxB,EAA8B,KAAKA,IAAnC,EAAyCL,UAAzC;AACD;;AAED;AACA,UAAKQ,GAAL,GAAW,KAAKH,IAAhB;AACD;;;;;;AAsBD;AACA;oCACeI,G,EAAKC,G,EAAK;AACvB,WAAIC,IAAI,IAAR;;AAEA,WAAIC,SAAS,CAACH,GAAD,EAAMC,GAAN,CAAb;;AAEA,WAAIG,OAAO,CAACD,OAAOD,EAAEG,IAAF,CAAO,CAAP,CAAP,EAAkB,CAAlB,IAAuBH,EAAEP,MAAF,CAAS,CAAT,CAAxB,IAAuCO,EAAEI,OAAF,CAAU,CAAV,CAAlD;AACA,WAAIC,OAAO,CAACJ,OAAO,IAAED,EAAEG,IAAF,CAAO,CAAP,CAAT,EAAoB,CAApB,IAAyBH,EAAEP,MAAF,CAAS,CAAT,CAA1B,IAAyCO,EAAEI,OAAF,CAAU,CAAV,CAApD;AACA,WAAIE,QAAQ,CAACL,OAAOD,EAAEG,IAAF,CAAO,CAAP,CAAP,EAAkB,CAAlB,IAAuBH,EAAEP,MAAF,CAAS,CAAT,CAAxB,IAAuCO,EAAEI,OAAF,CAAU,CAAV,CAAnD;AACA,WAAIG,QAAQ,CAACN,OAAO,IAAED,EAAEG,IAAF,CAAO,CAAP,CAAT,EAAoB,CAApB,IAAyBH,EAAEP,MAAF,CAAS,CAAT,CAA1B,IAAyCO,EAAEI,OAAF,CAAU,CAAV,CAArD;;AAEA,WAAKF,OAAOK,KAAR,IAAmBD,QAAQD,IAA/B,EACI,OAAO,IAAP;AACJ,WAAIC,QAAQJ,IAAZ,EACIA,OAAOI,KAAP;AACJ,WAAIC,QAAQF,IAAZ,EACIA,OAAOE,KAAP;;AAEJ,WAAIC,QAAQ,CAACP,OAAOD,EAAEG,IAAF,CAAO,CAAP,CAAP,EAAkB,CAAlB,IAAuBH,EAAEP,MAAF,CAAS,CAAT,CAAxB,IAAuCO,EAAEI,OAAF,CAAU,CAAV,CAAnD;AACA,WAAIK,QAAQ,CAACR,OAAO,IAAED,EAAEG,IAAF,CAAO,CAAP,CAAT,EAAoB,CAApB,IAAyBH,EAAEP,MAAF,CAAS,CAAT,CAA1B,IAAyCO,EAAEI,OAAF,CAAU,CAAV,CAArD;;AAEA,WAAKF,OAAOO,KAAR,IAAmBD,QAAQH,IAA/B,EACI,OAAO,IAAP;AACJ,WAAIG,QAAQN,IAAZ,EACIA,OAAOM,KAAP;AACJ,WAAIC,QAAQJ,IAAZ,EACIA,OAAOI,KAAP;;AAEJ,WAAIC,IAAI,CAAC,CAAT;AACA,WAAIR,OAAO,CAAP,IAAYG,OAAO,CAAvB,EAA0B;AACxBK,aAAIC,KAAKb,GAAL,CAASI,IAAT,EAAeG,IAAf,CAAJ;AACD,QAFD,MAEO,IAAIH,OAAO,CAAX,EAAc;AACnBQ,aAAIR,IAAJ;AACD,QAFM,MAEA,IAAIG,OAAO,CAAX,EAAc;AACnBK,aAAIL,IAAJ;AACD,QAFM,MAEA;AACL;AACA,gBAAO,IAAP;AACD;;AAED;AACA,WAAIO,qBAAqBpF,KAAKsB,KAAL,CAAW,KAAK4C,IAAhB,CAAzB;AACAlE,YAAKqF,KAAL,CAAWD,kBAAX,EAA+BA,kBAA/B,EAAmDF,CAAnD;AACAlF,YAAKsF,GAAL,CAASF,kBAAT,EAA6BA,kBAA7B,EAAiD,KAAKnB,MAAtD;AACA,cAAOmB,kBAAP;AACD;;;yBAlES;AACR,cAAO,KAAKlB,IAAZ;AACD,M;uBAEOzC,K,EAAO;AACb,YAAKyC,IAAL,GAAYlE,KAAKgB,IAAL,CAAU,KAAKkD,IAAf,EAAqBzC,KAArB,CAAZ;AACAzB,YAAKuF,SAAL,CAAe,KAAKrB,IAApB,EAA0B,KAAKA,IAA/B;;AAEA,YAAKU,OAAL,GAAe5E,KAAKwF,UAAL,CACb,MAAM,KAAKtB,IAAL,CAAU,CAAV,CADO,EAEb,MAAM,KAAKA,IAAL,CAAU,CAAV,CAFO,EAGb,MAAM,KAAKA,IAAL,CAAU,CAAV,CAHO,CAAf;;AAKA,YAAKS,IAAL,GAAY,CACT,KAAKC,OAAL,CAAa,CAAb,IAAkB,CAAnB,GAAwB,CAAxB,GAA4B,CADlB,EAET,KAAKA,OAAL,CAAa,CAAb,IAAkB,CAAnB,GAAwB,CAAxB,GAA4B,CAFlB,EAGT,KAAKA,OAAL,CAAa,CAAb,IAAkB,CAAnB,GAAwB,CAAxB,GAA4B,CAHlB,CAAZ;AAKD;;;;;;;;;;;;;;;;;sjBCzDH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;SAwDgB5F,kB,GAAAA,kB;;AAtDhB;;AACA;;AACA;;AACA;;;;AAEO,KAAMyG,0BAAS;AACpBC,aAAU,CADU;AAEpBC,WAAQ,CAFY;AAGpBC,YAAS,CAHW;AAIpBC,eAAY,CAJQ;AAKpBC,eAAY,CALQ;AAMpBC,YAAS;AANW,EAAf;;AASA,KAAMC,oCAAc;AACzBN,aAAY,MADa;AAEzBC,WAAY,MAFa;AAGzBC,YAAY,MAHa;AAIzBC,eAAY,MAJa;AAKzBC,eAAY,MALa;AAMzBC,YAAY;AANa,EAApB;;AASP,KAAME,gBAAgB,IAAIxG,YAAJ,CAAiB,CAAC,CAAC,GAAF,EAAO,CAAC,GAAR,EAAa,CAAC,GAAd,CAAjB,CAAtB;AACA,KAAMyG,kBAAkB,IAAIzG,YAAJ,CAAiB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAjB,CAAxB;;AAEA,KAAM0G,kBAAkB,IAAIC,MAAJ,CAAW,uCAAX,CAAxB;;AAEA,KAAMC,6LAAN;;AAQA,KAAMC,4IAAN;;AAOA,KAAMC,iFAAN;;AAMA,UAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,UAAO,CAACA,IAAKA,IAAI,CAAV,MAAkB,CAAzB;AACD;;AAED;AACO,UAASzH,kBAAT,CAA4B0H,SAA5B,EAAuC;AAC5CA,eAAYA,aAAa,EAAEC,OAAO,KAAT,EAAzB;;AAEA,OAAIC,cAAcC,SAASC,aAAT,CAAuB,QAAvB,CAAlB;AACA,OAAIC,eAAeL,UAAUM,MAAV,GAAmB,CAAC,QAAD,CAAnB,GAAgC,CAAC,OAAD,EAAU,oBAAV,CAAnD;AACA,OAAIC,UAAU,IAAd;;AAL4C;AAAA;AAAA;;AAAA;AAO5C,0BAAwBF,YAAxB,8HAAsC;AAAA,WAA7BG,WAA6B;;AACpCD,iBAAUL,YAAYO,UAAZ,CAAuBD,WAAvB,EAAoCR,SAApC,CAAV;AACA,WAAIO,OAAJ,EACE;AACH;AAX2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAa5C,OAAI,CAACA,OAAL,EAAc;AACZ,SAAIG,YAAaV,UAAUM,MAAV,GAAmB,SAAnB,GAA+B,OAAhD;AACAK,aAAQC,KAAR,CAAc,mCAAmCF,SAAnC,GAA+C,GAA7D;AACA,YAAO,IAAP;AACD;;AAED,UAAOH,OAAP;AACD;;KAEYM,U,WAAAA,U;AACX,uBAAYC,iBAAZ,EAA+BC,WAA/B,EAA2E;AAAA,SAA/BC,QAA+B,uEAApB,IAAoB;AAAA,SAAdC,GAAc,uEAAR,MAAQ;;AAAA;;AACzE,UAAKH,iBAAL,GAAyBA,iBAAzB;AACA,UAAKC,WAAL,GAAmBA,WAAnB;AACA,UAAKC,QAAL,GAAgBA,QAAhB;AACA;AACA,UAAKE,IAAL,GAAYD,GAAZ;AACA,UAAKE,UAAL,GAAmBF,OAAO,MAAP,GAAgB,CAAhB,GAAoB,CAAvC;AACD;;;;yBAES;AACR,cAAO,KAAKC,IAAZ;AACD,M;uBAEOnG,K,EAAO;AACb,YAAKmG,IAAL,GAAYnG,KAAZ;AACA,YAAKoG,UAAL,GAAmBpG,SAAS,MAAT,GAAkB,CAAlB,GAAsB,CAAzC;AACD;;;yBAEe;AACd,cAAO,KAAKoG,UAAZ;AACD;;;;;;KAGGC,Y;AACJ,yBAAYC,MAAZ,EAAoBC,KAApB,EAA2BC,MAA3B,EAA+C;AAAA;;AAAA,SAAZzF,MAAY,uEAAH,CAAG;;AAAA;;AAC7C,UAAK0F,OAAL,GAAeH,MAAf;AACA,UAAKI,MAAL,GAAcH,KAAd;AACA,UAAKI,OAAL,GAAe5F,MAAf;AACA,SAAIyF,kBAAkB9F,OAAtB,EAA+B;AAC7B,YAAKkG,OAAL,GAAe,IAAf;AACA,YAAKC,QAAL,GAAgBL,OAAO5F,IAAP,CAAY,UAAC4F,MAAD,EAAY;AACtC,eAAKI,OAAL,GAAeJ,MAAf;AACA;AACD,QAHe,CAAhB;AAID,MAND,MAMO;AACL,YAAKI,OAAL,GAAeJ,MAAf;AACA,YAAKK,QAAL,GAAgBnG,QAAQoG,OAAR,CAAgB,IAAhB,CAAhB;AACD;AACF;;;;uCAEiB;AAChB,cAAO,KAAKD,QAAZ;AACD;;;;;;KAGGE,wB,GACJ,kCAAYC,mBAAZ,EAAiC;AAAA;;AAC/B,QAAKC,aAAL,GAAqBjD,OAAOgD,oBAAoBxI,IAA3B,CAArB;AACA,QAAK0I,gBAAL,GAAwBF,oBAAoBG,eAA5C;AACA,QAAKC,eAAL,GAAuBJ,oBAAoBK,cAA3C;AACA,QAAKC,OAAL,GAAeN,oBAAoBO,MAAnC;AACA,QAAKC,YAAL,GAAoBR,oBAAoBS,WAAxC;AACA,QAAKC,WAAL,GAAmBV,oBAAoBW,UAAvC;AACD,E;;KAGGC,8B,GACJ,wCAAYpB,MAAZ,EAAoB;AAAA;;AAClB,QAAKI,OAAL,GAAeJ,MAAf;AACA,QAAKqB,WAAL,GAAmB,EAAnB;AACD,E;;KAGGC,e;AACJ,4BAAYrI,SAAZ,EAAuB;AAAA;;AACrB,UAAKsI,KAAL,GAAatI,UAAUuI,IAAvB;AACA,UAAKC,cAAL,GAAsBxI,UAAUyI,aAAhC;AACA,UAAKrH,UAAL,GAAkB,EAAlB;AACA,UAAKsH,IAAL,GAAY,IAAZ;;AAEA,UAAKC,SAAL,GAAiB,KAAjB;;AAEA,UAAKC,SAAL,GAAiB,IAAjB;;AAEA,UAAKC,kBAAL,GAA0B,EAA1B;AACA,UAAKC,eAAL,GAAuB,CAAvB;;AAXqB;AAAA;AAAA;;AAAA;AAarB,6BAAsB9I,UAAU+I,UAAhC,mIAA4C;AAAA,aAAnCC,SAAmC;;AAC1C,cAAKF,eAAL,IAAwBhE,YAAYkE,UAAUjK,IAAtB,CAAxB;AACA,aAAIkK,mBAAmB,IAAI3B,wBAAJ,CAA6B0B,SAA7B,CAAvB;AACA,aAAIE,eAAe,KAAnB;AAH0C;AAAA;AAAA;;AAAA;AAI1C,iCAA6B,KAAKL,kBAAlC,mIAAsD;AAAA,iBAA7CM,gBAA6C;;AACpD,iBAAIA,iBAAiBhC,OAAjB,IAA4B6B,UAAUjC,MAA1C,EAAkD;AAChDoC,gCAAiBf,WAAjB,CAA6B3H,IAA7B,CAAkCwI,gBAAlC;AACAC,8BAAe,IAAf;AACA;AACD;AACF;AAVyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAW1C,aAAI,CAACA,YAAL,EAAmB;AACjB,eAAIC,oBAAmB,IAAIhB,8BAAJ,CAAmCa,UAAUjC,MAA7C,CAAvB;AACAoC,6BAAiBf,WAAjB,CAA6B3H,IAA7B,CAAkCwI,gBAAlC;AACA,gBAAKJ,kBAAL,CAAwBpI,IAAxB,CAA6B0I,iBAA7B;AACD;AACF;AA7BoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA+BrB,UAAKC,aAAL,GAAqB,IAArB;AACA,UAAKC,kBAAL,GAA0B,CAA1B;AACA,UAAKC,WAAL,GAAmB,CAAnB;;AAEA,SAAItJ,UAAUuJ,YAAd,EAA4B;AAC1B,YAAKF,kBAAL,GAA0BrJ,UAAUwJ,iBAApC;AACA,YAAKF,WAAL,GAAmBtJ,UAAUyJ,UAA7B;AACA,YAAKL,aAAL,GAAqBpJ,UAAUuJ,YAA/B;AACD;;AAED,SAAIvJ,UAAUyB,IAAd,EAAoB;AAClB,YAAKA,IAAL,GAAY3C,KAAKsB,KAAL,CAAWJ,UAAUyB,IAArB,CAAZ;AACA,YAAKM,IAAL,GAAYjD,KAAKsB,KAAL,CAAWJ,UAAU+B,IAArB,CAAZ;AACD,MAHD,MAGO;AACL,YAAKN,IAAL,GAAY,IAAZ;AACA,YAAKM,IAAL,GAAY,IAAZ;AACD;AACF;;;;uCAEiB2H,Q,EAAU;AAC1B,YAAKd,SAAL,GAAiBc,QAAjB;AACA,YAAKtC,QAAL,GAAgB,IAAhB;AACA,YAAKuB,SAAL,GAAiB,KAAjB;;AAEA,WAAI,KAAKC,SAAL,IAAkB,IAAtB,EAA4B;AAC1B,cAAK5H,eAAL,GAD0B,CACF;AACzB;AACF;;;gCAEUX,Q,EAAU;AACnB,WAAI,KAAKsI,SAAT,EAAoB;AAClB,cAAKhJ,gBAAL,GAAwBU,QAAxB;;AAEA,aAAI,KAAKqJ,QAAT,EAAmB;AACjB,gBAAKA,QAAL,CAAcpJ,UAAd,CAAyBD,QAAzB;AACD;;AAED,aAAI,KAAKsJ,OAAT,EAAkB;AAChB,gBAAKA,OAAL,CAAarJ,UAAb,CAAwBD,QAAxB;AACD;AACF;AACF;;;uCAMiB;AAAA;;AAChB,WAAI,CAAC,KAAK+G,QAAV,EAAoB;AAClB,aAAI,CAAC,KAAKwB,SAAV,EAAqB;AACnB,kBAAO3H,QAAQ2I,MAAR,CAAe,0CAAf,CAAP;AACD;;AAED,aAAIC,sBAAsB,EAA1B;AACAA,6BAAoBpJ,IAApB,CAAyB,KAAKmI,SAAL,CAAe5H,eAAf,EAAzB;;AANkB;AAAA;AAAA;;AAAA;AAQlB,iCAA6B,KAAK6H,kBAAlC,mIAAsD;AAAA,iBAA7CM,gBAA6C;;AACpD,iBAAI,CAACA,iBAAiBhC,OAAjB,CAAyBA,OAA9B,EAAuC;AACrC0C,mCAAoBpJ,IAApB,CAAyB0I,iBAAiBhC,OAAjB,CAAyBC,QAAlD;AACD;AACF;AAZiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAclB,aAAI,KAAKgC,aAAL,IAAsB,CAAC,KAAKA,aAAL,CAAmBjC,OAA9C,EAAuD;AACrD0C,+BAAoBpJ,IAApB,CAAyB,KAAK2I,aAAL,CAAmBhC,QAA5C;AACD;;AAED,cAAKA,QAAL,GAAgBnG,QAAQC,GAAR,CAAY2I,mBAAZ,EAAiC1I,IAAjC,CAAsC,YAAM;AAC1D,kBAAKwH,SAAL,GAAiB,IAAjB;AACA;AACD,UAHe,CAAhB;AAID;AACD,cAAO,KAAKvB,QAAZ;AACD;;;yBA7Bc;AACb,cAAO,KAAKwB,SAAL,CAAekB,mBAAtB;AACD;;;;;;AA8BH,KAAMC,iBAAiBpL,KAAKC,MAAL,EAAvB;;AAEA,UAASoL,MAAT,CAAgBC,EAAhB,EAAoBC,OAApB,EAA6BC,GAA7B,EAAkCC,UAAlC,EAA8CC,KAA9C,EAAqD;AACnD,OAAIC,SAAS,CAACD,QAAQF,GAAT,KAAiBC,aAAaD,GAA9B,CAAb;AACA,OAAI,CAACG,MAAL,EACE;;AAEF,OAAIA,SAAS,CAAb,EAAgB;AACdL,QAAGM,MAAH,CAAUL,OAAV;AACD,IAFD,MAEO;AACLD,QAAGO,OAAH,CAAWN,OAAX;AACD;AACF;;KAEKO,qB,GACJ,+BAAYC,QAAZ,EAAsBC,gBAAtB,EAAwCtJ,KAAxC,EAA+C;AAAA;;AAC7C,QAAKuJ,aAAL,GAAqBD,iBAAiBC,aAAtC;AACA,QAAKC,QAAL,GAAgBH,SAASI,iBAAT,CAA2BH,iBAAiBE,QAA5C,CAAhB;AACA,QAAKE,MAAL,GAAc1J,KAAd;AACD,E;;KAGG2J,qB;AACJ,kCAAYC,gBAAZ,EAA8B;AAAA;;AAC5B,UAAKL,aAAL,GAAqBK,iBAAiBL,aAAtC;AACA,UAAKM,QAAL,GAAgB,IAAhB;AACA,UAAKhE,OAAL,GAAe+D,iBAAiB/D,OAAhC;AACA,SAAI+D,iBAAiBE,MAAjB,YAAmCC,KAAvC,EAA8C;AAC5C,YAAKD,MAAL,GAAc,IAAI5M,YAAJ,CAAiB0M,iBAAiBE,MAAlC,CAAd;AACD,MAFD,MAEO;AACL,YAAKA,MAAL,GAAc,IAAI5M,YAAJ,CAAiB,CAAC0M,iBAAiBE,MAAlB,CAAjB,CAAd;AACD;AACF;;;;uBAES5K,K,EAAO;AACf,WAAI,KAAK4K,MAAL,CAAY7J,MAAZ,IAAsB,CAA1B,EAA6B;AAC3B,cAAK6J,MAAL,CAAY,CAAZ,IAAiB5K,KAAjB;AACD,QAFD,MAEO;AACL,cAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI,KAAKyK,MAAL,CAAY7J,MAAhC,EAAwC,EAAEZ,CAA1C,EAA6C;AAC3C,gBAAKyK,MAAL,CAAYzK,CAAZ,IAAiBH,MAAMG,CAAN,CAAjB;AACD;AACF;AACF;;;;;;KAGG2K,c;AACJ,2BAAYX,QAAZ,EAAsBhB,QAAtB,EAAgCC,OAAhC,EAAyC;AAAA;;AACvC,UAAK2B,QAAL,GAAgB3B,OAAhB;AACA,UAAK4B,MAAL,GAAc7B,SAASW,KAAT,CAAekB,MAA7B;;AAEA,UAAKC,SAAL,GAAiB,EAAjB;AACA,UAAK,IAAI9K,IAAI,CAAb,EAAgBA,IAAIgJ,SAAS8B,SAAT,CAAmBlK,MAAvC,EAA+C,EAAEZ,CAAjD,EAAoD;AAClD,YAAK8K,SAAL,CAAe/K,IAAf,CAAoB,IAAIgK,qBAAJ,CAA0BC,QAA1B,EAAoChB,SAAS8B,SAAT,CAAmB9K,CAAnB,CAApC,EAA2DA,CAA3D,CAApB;AACD;;AAED,UAAKoJ,mBAAL,GAA2B,EAA3B;AACA,UAAK2B,SAAL,GAAiB,EAAjB;AAVuC;AAAA;AAAA;;AAAA;AAWvC,6BAAoB/B,SAAS+B,SAA7B,mIAAwC;AAAA,aAA/BC,OAA+B;;AACtC,aAAIC,iBAAiB,IAAIX,qBAAJ,CAA0BU,OAA1B,CAArB;AACA,cAAKD,SAAL,CAAehL,IAAf,CAAoBkL,cAApB;AACA,cAAK7B,mBAAL,CAAyB6B,eAAef,aAAxC,IAAyDe,cAAzD;AACD;AAfsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBvC,UAAKC,iBAAL,GAAyB,IAAzB;AACA,UAAKC,WAAL,GAAmB,IAAnB;;AAEA,UAAKC,aAAL,GAAqBpC,SAASqC,YAA9B;AACA,SAAI,KAAKD,aAAL,IAAsB,uBAAaE,OAAvC,EAAgD;AAC9C,WAAI,KAAKT,MAAL,GAAc,cAAIU,KAAtB,EAA6B;AAC3B,cAAKH,aAAL,GAAqB,uBAAaI,WAAlC;AACD,QAFD,MAEO;AACL,cAAKJ,aAAL,GAAqB,uBAAaK,MAAlC;AACD;AACF;AACF;;;;0BAEIlC,E,EAAI;AACP;AACA;AACA,WAAI,KAAK4B,WAAT,EAAsB;AACpB,cAAK,IAAInL,IAAI,CAAb,EAAgBA,IAAI,KAAK8K,SAAL,CAAelK,MAAnC,GAA4C;AAC1C,eAAI8K,UAAU,KAAKZ,SAAL,CAAe9K,CAAf,CAAd;AACA,eAAI,CAAC,KAAK4K,QAAL,CAAcI,OAAd,CAAsBU,QAAQxB,aAA9B,CAAL,EAAmD;AACjD,kBAAKY,SAAL,CAAe5K,MAAf,CAAsBF,CAAtB,EAAyB,CAAzB;AACA;AACD;AACD,aAAEA,CAAF;AACD;;AAED,cAAK,IAAIA,KAAI,CAAb,EAAgBA,KAAI,KAAK+K,SAAL,CAAenK,MAAnC,GAA4C;AAC1C,eAAIoK,UAAU,KAAKD,SAAL,CAAe/K,EAAf,CAAd;AACAgL,mBAAQR,QAAR,GAAmB,KAAKI,QAAL,CAAcI,OAAd,CAAsBA,QAAQd,aAA9B,CAAnB;AACA,eAAI,CAACc,QAAQR,QAAb,EAAuB;AACrB,kBAAKO,SAAL,CAAe7K,MAAf,CAAsBF,EAAtB,EAAyB,CAAzB;AACA;AACD;AACD,aAAEA,EAAF;AACD;AACD,cAAKmL,WAAL,GAAmB,KAAnB;AACD;;AAvBM;AAAA;AAAA;;AAAA;AAyBP,+BAAoB,KAAKL,SAAzB,mIAAoC;AAAA,eAA3BY,QAA2B;;AAClCnC,cAAGoC,aAAH,CAAiBpC,GAAGqC,QAAH,GAAcF,SAAQrB,MAAvC;AACA,eAAIqB,SAAQvB,QAAZ,EAAsB;AACpB;AACAZ,gBAAGsC,WAAH,CAAetC,GAAGuC,UAAlB,EAA8BJ,SAAQvB,QAAtC;AACD,YAHD,MAGO;AACLZ,gBAAGsC,WAAH,CAAetC,GAAGuC,UAAlB,EAA8B,IAA9B;AACD;AACF;AAjCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAmCP,+BAAoB,KAAKf,SAAzB,mIAAoC;AAAA,eAA3BC,QAA2B;;AAClC,mBAAOA,SAAQxE,OAAf;AACE,kBAAK,CAAL;AAAQ+C,kBAAGwC,UAAH,CAAcf,SAAQR,QAAtB,EAAgCQ,SAAQP,MAAxC,EAAiD;AACzD,kBAAK,CAAL;AAAQlB,kBAAGyC,UAAH,CAAchB,SAAQR,QAAtB,EAAgCQ,SAAQP,MAAxC,EAAiD;AACzD,kBAAK,CAAL;AAAQlB,kBAAG0C,UAAH,CAAcjB,SAAQR,QAAtB,EAAgCQ,SAAQP,MAAxC,EAAiD;AACzD,kBAAK,CAAL;AAAQlB,kBAAG2C,UAAH,CAAclB,SAAQR,QAAtB,EAAgCQ,SAAQP,MAAxC,EAAiD;AAJ3D;AAMD;AA1CM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CR;;;uCAEiB;AAAA;;AAChB,WAAI,CAAC,KAAKS,iBAAV,EAA6B;AAC3B,aAAI,KAAKJ,SAAL,CAAelK,MAAf,IAAyB,CAA7B,EAAgC;AAC9B,gBAAKsK,iBAAL,GAAyB3K,QAAQoG,OAAR,CAAgB,IAAhB,CAAzB;AACD,UAFD,MAEO;AACL,eAAIwF,WAAW,EAAf;AADK;AAAA;AAAA;;AAAA;AAEL,mCAAoB,KAAKrB,SAAzB,mIAAoC;AAAA,mBAA3BY,OAA2B;;AAClC,mBAAIA,QAAQvB,QAAR,IAAoB,CAACuB,QAAQvB,QAAR,CAAiBlC,SAA1C,EAAqD;AACnDkE,0BAASpM,IAAT,CAAc2L,QAAQvB,QAAR,CAAiBzD,QAA/B;AACD;AACF;AANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOL,gBAAKwE,iBAAL,GAAyB3K,QAAQC,GAAR,CAAY2L,QAAZ,EAAsB1L,IAAtB,CAA2B;AAAA;AAAA,YAA3B,CAAzB;AACD;AACF;AACD,cAAO,KAAKyK,iBAAZ;AACD;;AAED;;;;;;AAYA;+BACUkB,W,EAAa;AACrB,cAAQA,cAAc,oBAAUC,UAAzB,GAAwC,KAAKxB,MAAL,GAAc,oBAAUwB,UAAvE;AACD;;;gCAEUD,W,EAAa;AACtB,WAAI,EAAE,KAAKvB,MAAL,GAAc,cAAIU,KAApB,CAAJ,EACE,OAAO,CAAP;AACF,cAAQa,cAAc,oBAAUE,gBAAzB,GAA8C,KAAKzB,MAAL,GAAc,oBAAUyB,gBAA7E;AACD;;;oCAEcF,W,EAAa;AAC1B,WAAI,EAAE,KAAKvB,MAAL,GAAc,cAAI0B,UAApB,CAAJ,EACE,OAAO,CAAP;AACF,cAAQH,cAAc,oBAAUI,gBAAzB,GAA8C,KAAK3B,MAAL,GAAc,oBAAU2B,gBAA7E;AACD;;;yBA1Be;AAAE,cAAO,CAAC,EAAE,KAAK3B,MAAL,GAAc,cAAI4B,SAApB,CAAR;AAAyC;;;yBAC/C;AAAE,cAAO,CAAC,EAAE,KAAK5B,MAAL,GAAc,cAAIU,KAApB,CAAR;AAAqC;;;yBAClC;AAAE,cAAO,CAAC,EAAE,KAAKV,MAAL,GAAc,cAAI0B,UAApB,CAAR;AAA0C;;;yBAC1C;AAAE,cAAO,CAAC,EAAE,KAAK1B,MAAL,GAAc,cAAI6B,YAApB,CAAR;AAA4C;;;yBAChD;AAAE,cAAO,CAAC,EAAE,KAAK7B,MAAL,GAAc,cAAI8B,UAApB,CAAR;AAA0C;;;yBAC5C;AAAE,cAAO,CAAC,EAAE,KAAK9B,MAAL,GAAc,cAAI+B,UAApB,CAAR;AAA0C;;;yBAC1C;AAAE,cAAO,CAAC,EAAE,KAAK/B,MAAL,GAAc,cAAIgC,YAApB,CAAR;AAA4C;;;yBAChD;AAAE,cAAO,CAAC,CAAC,KAAKhC,MAAL,GAAc,oBAAU2B,gBAAzB,KAA8C,oBAAUM,gBAAzD,IAA6EC,sBAAsBC,KAA1G;AAAkH;;;yBAChH;AAAE,cAAO,gCAAiB,KAAKnC,MAAtB,EAA8B,oBAAUoC,eAAxC,EAAyD,oBAAUC,eAAnE,CAAP;AAA6F;;;yBAC/F;AAAE,cAAO,gCAAiB,KAAKrC,MAAtB,EAA8B,oBAAUsC,eAAxC,EAAyD,oBAAUC,eAAnE,CAAP;AAA6F;;;;;;KAoBzGjQ,Q,WAAAA,Q;AACX,qBAAYoM,EAAZ,EAAgB;AAAA;;AACd,UAAK8D,GAAL,GAAW9D,MAAMnM,oBAAjB;AACA,UAAKkQ,SAAL,GAAiB,CAAC,CAAlB;AACA,UAAKC,cAAL,GAAsB,EAAtB;AACA,UAAKC,cAAL,GAAsB,EAAtB;AACA,UAAKtO,kBAAL,GAA0BwL,MAAM,uBAAaY,OAAnB,CAA1B;AACA,UAAKmC,iBAAL,GAAyB,EAAzB;;AAEA,UAAKC,QAAL,GAAgBnE,GAAGoE,YAAH,CAAgB,yBAAhB,CAAhB;;AAEA,SAAIC,sBAAsBrE,GAAGsE,wBAAH,CAA4BtE,GAAGuE,eAA/B,EAAgDvE,GAAGwE,UAAnD,CAA1B;AACA,UAAKC,uBAAL,GAA+BJ,oBAAoBK,SAApB,GAAgC,CAAhC,GAAoC,OAApC,GAA8C,SAA7E;;AAEA,UAAKC,uBAAL,GAA+B,KAA/B;AACA,UAAKC,uBAAL,GAA+B,KAA/B;AACD;;;;wCAMkBhI,M,EAAQiI,I,EAAiD;AAAA,WAA3ChI,KAA2C,uEAAnC2G,sBAAsBsB,WAAa;;AAC1E,WAAI9E,KAAK,KAAK8D,GAAd;AACA,WAAIiB,YAAY/E,GAAGgF,YAAH,EAAhB;;AAEA,WAAIH,gBAAgB7N,OAApB,EAA6B;AAC3B,aAAIiO,gBAAgB,IAAItI,YAAJ,CAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCgI,KAAK3N,IAAL,CAAU,UAAC2N,IAAD,EAAU;AACtE7E,cAAGkF,UAAH,CAActI,MAAd,EAAsBmI,SAAtB;AACA/E,cAAGmF,UAAH,CAAcvI,MAAd,EAAsBiI,IAAtB,EAA4BhI,KAA5B;AACAoI,yBAAchI,OAAd,GAAwB4H,KAAKO,UAA7B;AACA,kBAAOL,SAAP;AACD,UALmD,CAAhC,CAApB;AAMA,gBAAOE,aAAP;AACD,QARD,MAQO;AACLjF,YAAGkF,UAAH,CAActI,MAAd,EAAsBmI,SAAtB;AACA/E,YAAGmF,UAAH,CAAcvI,MAAd,EAAsBiI,IAAtB,EAA4BhI,KAA5B;AACA,gBAAO,IAAIF,YAAJ,CAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCkI,SAAhC,EAA2CF,KAAKO,UAAhD,CAAP;AACD;AACF;;;wCAEkBtI,M,EAAQ+H,I,EAAkB;AAAA;;AAAA,WAAZQ,MAAY,uEAAH,CAAG;;AAC3C,WAAIvI,OAAOI,OAAX,EAAoB;AAClB,aAAI8C,KAAK,KAAK8D,GAAd;AACA9D,YAAGkF,UAAH,CAAcpI,OAAOC,OAArB,EAA8BD,OAAOI,OAArC;AACA,aAAImI,UAAU,CAAV,IAAevI,OAAOG,OAAP,IAAkB4H,KAAKO,UAA1C,EAAsD;AACpDpF,cAAGmF,UAAH,CAAcrI,OAAOC,OAArB,EAA8B8H,IAA9B,EAAoC/H,OAAOE,MAA3C;AACD,UAFD,MAEO;AACLgD,cAAGsF,aAAH,CAAiBxI,OAAOC,OAAxB,EAAiCsI,MAAjC,EAAyCR,IAAzC;AACD;AACF,QARD,MAQO;AACL/H,gBAAO/F,eAAP,GAAyBG,IAAzB,CAA8B,UAAC4F,MAAD,EAAY;AACxC,kBAAKyI,kBAAL,CAAwBzI,MAAxB,EAAgC+H,IAAhC,EAAsCQ,MAAtC;AACD,UAFD;AAGD;AACF;;;2CAEqBtP,S,EAAW0J,Q,EAAU;AAAA;;AACzC,WAAI+F,mBAAmB,IAAIpH,eAAJ,CAAoBrI,SAApB,CAAvB;;AAEA,WAAI2J,UAAU,KAAK+F,mBAAL,CAAyBhG,QAAzB,EAAmC+F,gBAAnC,CAAd;AACA,WAAIE,kBAAkB,IAAItE,cAAJ,CAAmB,IAAnB,EAAyB3B,QAAzB,EAAmCC,OAAnC,CAAtB;AACA8F,wBAAiBG,iBAAjB,CAAmCD,eAAnC;;AAEA,WAAI,KAAKvB,QAAT,EAAmB;AACjBqB,0BAAiBzO,eAAjB,GAAmCG,IAAnC,CAAwC,YAAM;AAC5CsO,4BAAiB/G,IAAjB,GAAwB,OAAK0F,QAAL,CAAcyB,oBAAd,EAAxB;AACA,kBAAKzB,QAAL,CAAc0B,kBAAd,CAAiCL,iBAAiB/G,IAAlD;AACA,kBAAKqH,cAAL,CAAoBN,gBAApB;AACA,kBAAKrB,QAAL,CAAc0B,kBAAd,CAAiC,IAAjC;AACA;AACA;AACA;AACD,UARD;AASD;;AAED,WAAI,CAAC,KAAKlQ,kBAAL,CAAwB+P,gBAAgB7D,aAAxC,CAAL,EAA6D;AAC3D,cAAKlM,kBAAL,CAAwB+P,gBAAgB7D,aAAxC,IAAyD,EAAzD;AACD;;AAED,YAAKlM,kBAAL,CAAwB+P,gBAAgB7D,aAAxC,EAAuDrL,IAAvD,CAA4DgP,gBAA5D;;AAEA,cAAOA,gBAAP;AACD;;;gCAEUzP,S,EAAW0J,Q,EAAU;AAC9B,WAAIsG,YAAY,gBAAhB;AACAA,iBAAU/P,kBAAV,CAA6B,KAAKgQ,qBAAL,CAA2BjQ,SAA3B,EAAsC0J,QAAtC,CAA7B;AACA,cAAOsG,SAAP;AACD;;;+BAESE,K,EAAOC,S,EAAW;AAC1B,WAAI,CAACA,SAAL,EAAgB;AACd;AACD;;AAED,WAAIlG,KAAK,KAAK8D,GAAd;AACA,YAAKC,SAAL;;AAEAmC,iBAAU7P,UAAV,CAAqB,KAAK0N,SAA1B;;AAEA;AACA;AACA,WAAIkC,MAAM5O,MAAN,IAAgB,CAAhB,IAAqB4O,MAAM,CAAN,EAAS1J,QAAlC,EAA4C;AAC1C,aAAI4J,KAAKF,MAAM,CAAN,EAAS1J,QAAlB;AACA,cAAKuH,GAAL,CAASvH,QAAT,CAAkB4J,GAAGC,CAArB,EAAwBD,GAAGE,CAA3B,EAA8BF,GAAGG,KAAjC,EAAwCH,GAAGI,MAA3C;AACD;;AAED;AACA,YAAK,IAAI9P,IAAI,CAAb,EAAgBA,IAAIwP,MAAM5O,MAA1B,EAAkC,EAAEZ,CAApC,EAAuC;AACrC/B,cAAK+C,MAAL,CAAYqI,cAAZ,EAA4BmG,MAAMxP,CAAN,EAAS6F,WAArC;;AAEA,aAAI,KAAK4H,iBAAL,CAAuB7M,MAAvB,IAAiCZ,CAArC,EAAwC;AACtC,gBAAKyN,iBAAL,CAAuB1N,IAAvB,CAA4B3B,KAAKF,MAAL,EAA5B;AACD;AACD,aAAI6R,kBAAkB,KAAKtC,iBAAL,CAAuBzN,CAAvB,CAAtB;AACA5B,cAAKqD,GAAL,CAASsO,eAAT,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC;AACA3R,cAAKkD,aAAL,CAAmByO,eAAnB,EAAoCA,eAApC,EAAqD1G,cAArD;AACD;;AAED;AA7B0B;AAAA;AAAA;;AAAA;AA8B1B,+BAA8B,KAAKnK,kBAAnC,mIAAuD;AAAA,eAA9C8Q,iBAA8C;;AACrD,eAAIA,qBAAqBA,kBAAkBpP,MAA3C,EAAmD;AACjD,kBAAKqP,uBAAL,CAA6BT,KAA7B,EAAoCQ,iBAApC;AACD;AACF;AAlCyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoC1B,WAAI,KAAKtC,QAAT,EAAmB;AACjB,cAAKA,QAAL,CAAc0B,kBAAd,CAAiC,IAAjC;AACD;;AAED,WAAI,KAAKlB,uBAAT,EAAkC;AAChC3E,YAAG2G,SAAH,CAAa,IAAb;AACD;AACD,WAAI,KAAK/B,uBAAT,EAAkC;AAChC5E,YAAG4G,SAAH,CAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B;AACD;AAEF;;;6CAEuBX,K,EAAOQ,iB,EAAmB;AAChD,WAAIzG,KAAK,KAAK8D,GAAd;AACA,WAAIpE,UAAU,IAAd;AACA,WAAID,WAAW,IAAf;AACA,WAAIoH,cAAc,CAAlB;;AAEA;AANgD;AAAA;AAAA;;AAAA;AAOhD,gCAAsBJ,iBAAtB,wIAAyC;AAAA,eAAhC1Q,SAAgC;;AACvC;AACA,eAAIA,UAAUL,gBAAV,IAA8B,KAAKqO,SAAvC,EAAkD;AAChD;AACD;;AAED;AACA;AACA;AACA,eAAIrE,WAAW3J,UAAU4I,SAAV,CAAoB0C,QAAnC,EAA6C;AAC3C3B,uBAAU3J,UAAU4I,SAAV,CAAoB0C,QAA9B;AACA3B,qBAAQoH,GAAR;;AAEA,iBAAIpH,QAAQ+B,OAAR,CAAgBsF,eAApB,EACE/G,GAAG0C,UAAH,CAAchD,QAAQ+B,OAAR,CAAgBsF,eAA9B,EAA+CjM,aAA/C;;AAEF,iBAAI4E,QAAQ+B,OAAR,CAAgBuF,WAApB,EACEhH,GAAG0C,UAAH,CAAchD,QAAQ+B,OAAR,CAAgBuF,WAA9B,EAA2CjM,eAA3C;;AAEF,iBAAIkL,MAAM5O,MAAN,IAAgB,CAApB,EAAuB;AACrB2I,kBAAGiH,gBAAH,CAAoBvH,QAAQ+B,OAAR,CAAgByF,iBAApC,EAAuD,KAAvD,EAA8DjB,MAAM,CAAN,EAAS5J,iBAAvE;AACA2D,kBAAGiH,gBAAH,CAAoBvH,QAAQ+B,OAAR,CAAgB0F,WAApC,EAAiD,KAAjD,EAAwDlB,MAAM,CAAN,EAAS3J,WAAjE;AACA0D,kBAAG0C,UAAH,CAAchD,QAAQ+B,OAAR,CAAgB2F,eAA9B,EAA+C,KAAKlD,iBAAL,CAAuB,CAAvB,CAA/C;AACAlE,kBAAGqH,SAAH,CAAa3H,QAAQ+B,OAAR,CAAgB6F,SAA7B,EAAwCrB,MAAM,CAAN,EAASsB,SAAjD;AACD;AACF;;AAED,eAAI9H,YAAY1J,UAAU4I,SAA1B,EAAqC;AACnC,kBAAK6I,kBAAL,CAAwBzR,UAAU4I,SAAlC,EAA6Cc,QAA7C;AACA1J,uBAAU4I,SAAV,CAAoB8I,IAApB,CAAyBzH,EAAzB,EAA6BN,OAA7B,EAAsCD,QAAtC;AACAA,wBAAW1J,UAAU4I,SAArB;AACD;;AAED,eAAI5I,UAAU0I,IAAd,EAAoB;AAClB,kBAAK0F,QAAL,CAAc0B,kBAAd,CAAiC9P,UAAU0I,IAA3C;AACD,YAFD,MAEO;AACL,kBAAKqH,cAAL,CAAoB/P,SAApB,EAA+B8Q,WAA/B;AACAA,2BAAc9Q,UAAU8I,eAAxB;AACD;;AAED,gBAAK,IAAIpI,IAAI,CAAb,EAAgBA,IAAIwP,MAAM5O,MAA1B,EAAkC,EAAEZ,CAApC,EAAuC;AACrC,iBAAI/C,OAAOuS,MAAMxP,CAAN,CAAX;AACA,iBAAIwP,MAAM5O,MAAN,GAAe,CAAnB,EAAsB;AACpB,mBAAI3D,KAAK6I,QAAT,EAAmB;AACjB,qBAAI4J,KAAKzS,KAAK6I,QAAd;AACAyD,oBAAGzD,QAAH,CAAY4J,GAAGC,CAAf,EAAkBD,GAAGE,CAArB,EAAwBF,GAAGG,KAA3B,EAAkCH,GAAGI,MAArC;AACD;AACDvG,kBAAGiH,gBAAH,CAAoBvH,QAAQ+B,OAAR,CAAgByF,iBAApC,EAAuD,KAAvD,EAA8DxT,KAAK2I,iBAAnE;AACA2D,kBAAGiH,gBAAH,CAAoBvH,QAAQ+B,OAAR,CAAgB0F,WAApC,EAAiD,KAAjD,EAAwDzT,KAAK4I,WAA7D;AACA0D,kBAAG0C,UAAH,CAAchD,QAAQ+B,OAAR,CAAgB2F,eAA9B,EAA+C,KAAKlD,iBAAL,CAAuBzN,CAAvB,CAA/C;AACAuJ,kBAAGqH,SAAH,CAAa3H,QAAQ+B,OAAR,CAAgB6F,SAA7B,EAAwC5T,KAAK6T,SAA7C;AACD;;AAXoC;AAAA;AAAA;;AAAA;AAarC,sCAAqBxR,UAAUoB,UAA/B,wIAA2C;AAAA,qBAAlCuQ,QAAkC;;AACzC,qBAAIA,SAAShS,gBAAT,IAA6B,KAAKqO,SAAtC,EAAiD;AAC/C;AACD;;AAED/D,oBAAGiH,gBAAH,CAAoBvH,QAAQ+B,OAAR,CAAgBkG,YAApC,EAAkD,KAAlD,EAAyDD,SAAShQ,YAAlE;;AAEA,qBAAI3B,UAAUoJ,aAAd,EAA6B;AAC3Ba,sBAAG4H,YAAH,CAAgB7R,UAAUsI,KAA1B,EAAiCtI,UAAUwI,cAA3C,EACIxI,UAAUsJ,WADd,EAC2BtJ,UAAUqJ,kBADrC;AAED,kBAHD,MAGO;AACLY,sBAAG6H,UAAH,CAAc9R,UAAUsI,KAAxB,EAA+B,CAA/B,EAAkCtI,UAAUwI,cAA5C;AACD;AACF;AA1BoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BtC;AACF;AA3E+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4EjD;;;uCAEiBuJ,O,EAAS;AAAA;;AACzB,WAAI,CAACA,OAAL,EAAc;AACZ,gBAAO,IAAP;AACD;;AAED,WAAIC,MAAMD,QAAQE,WAAlB;AACA,WAAI,CAACD,GAAL,EAAU;AACR,eAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,WAAIF,OAAO,KAAK9D,cAAhB,EAAgC;AAC9B,gBAAO,KAAKA,cAAL,CAAoB8D,GAApB,CAAP;AACD,QAFD,MAEO;AACL,aAAI/H,KAAK,KAAK8D,GAAd;AACA,aAAIoE,iBAAiBlI,GAAGmI,aAAH,EAArB;AACA,cAAKlE,cAAL,CAAoB8D,GAApB,IAA2BG,cAA3B;;AAEA,aAAIJ,uCAAJ,EAAoC;AAClC9H,cAAGsC,WAAH,CAAetC,GAAGuC,UAAlB,EAA8B2F,cAA9B;AACAlI,cAAGoI,UAAH,CAAcpI,GAAGuC,UAAjB,EAA6B,CAA7B,EAAgCuF,QAAQO,MAAxC,EAAgDP,QAAQxB,KAAxD,EAA+DwB,QAAQvB,MAAvE,EAA+E,CAA/E,EAAkFuB,QAAQO,MAA1F,EAAkGP,QAAQQ,KAA1G,EAAiHR,QAAQS,KAAzH;AACA,gBAAKC,qBAAL,CAA2BV,OAA3B;AAED,UALD,MAKO;AACLA,mBAAQ/Q,eAAR,GAA0BG,IAA1B,CAA+B,YAAM;AACnC8I,gBAAGsC,WAAH,CAAetC,GAAGuC,UAAlB,EAA8B2F,cAA9B;AACAlI,gBAAGoI,UAAH,CAAcpI,GAAGuC,UAAjB,EAA6B,CAA7B,EAAgCuF,QAAQO,MAAxC,EAAgDP,QAAQO,MAAxD,EAAgErI,GAAGyI,aAAnE,EAAkFX,QAAQY,IAA1F;AACA,oBAAKF,qBAAL,CAA2BV,OAA3B;AACD,YAJD;AAKD;;AAED,gBAAOI,cAAP;AACD;AACF;;;2CAEqBJ,O,EAAS;AAC7B,WAAI9H,KAAK,KAAK8D,GAAd;;AAEA,WAAI3B,UAAU2F,QAAQ3F,OAAtB;AACA,WAAIwG,eAAetN,aAAayM,QAAQxB,KAArB,KAA+BjL,aAAayM,QAAQvB,MAArB,CAAlD;AACA,WAAIqC,SAASD,gBAAgBb,QAAQc,MAArC;AACA,WAAIA,MAAJ,EAAY;AACV5I,YAAG6I,cAAH,CAAkB7I,GAAGuC,UAArB;AACD;;AAED,WAAIuG,aAAa3G,QAAQ2G,UAAR,KAAuBF,SAAS5I,GAAG+I,oBAAZ,GAAmC/I,GAAGgJ,MAA7D,CAAjB;AACA,WAAIC,SAAS9G,QAAQ8G,MAAR,KAAmBN,eAAe3I,GAAGkJ,MAAlB,GAA2BlJ,GAAGmJ,aAAjD,CAAb;AACA,WAAIC,SAASjH,QAAQiH,MAAR,KAAmBT,eAAe3I,GAAGkJ,MAAlB,GAA2BlJ,GAAGmJ,aAAjD,CAAb;;AAEAnJ,UAAGqJ,aAAH,CAAiBrJ,GAAGuC,UAApB,EAAgCvC,GAAGsJ,kBAAnC,EAAuDnH,QAAQoH,UAAR,IAAsBvJ,GAAGgJ,MAAhF;AACAhJ,UAAGqJ,aAAH,CAAiBrJ,GAAGuC,UAApB,EAAgCvC,GAAGwJ,kBAAnC,EAAuDV,UAAvD;AACA9I,UAAGqJ,aAAH,CAAiBrJ,GAAGuC,UAApB,EAAgCvC,GAAGyJ,cAAnC,EAAmDR,MAAnD;AACAjJ,UAAGqJ,aAAH,CAAiBrJ,GAAGuC,UAApB,EAAgCvC,GAAG0J,cAAnC,EAAmDN,MAAnD;AACD;;;oCAEctU,I,EAAM6U,O,EAAS;AAC5B,WAAI5B,MAASjT,IAAT,MAAJ;;AAEA,YAAK,IAAI8U,MAAT,IAAmBD,OAAnB,EAA4B;AAC1B5B,gBAAU6B,MAAV,SAAoBD,QAAQC,MAAR,CAApB;AACD;;AAED,cAAO7B,GAAP;AACD;;;yCAEmBtI,Q,EAAU+F,gB,EAAkB;AAAA;;AAC9C,WAAIqE,gBAAgBpK,SAASoK,aAA7B;AACA,WAAIC,gBAAgBrK,SAASqK,aAA7B;AACA,WAAIC,kBAAkBtK,SAASsK,eAA/B;;AAEA;AACA,WAAIF,iBAAiB,IAArB,EAA2B;AACzB,eAAM,IAAI5B,KAAJ,CAAU,+BAAV,CAAN;AACD;AACD,WAAI6B,iBAAiB,IAArB,EAA2B;AACzB,eAAM,IAAI7B,KAAJ,gBAAuB4B,aAAvB,qCAAN;AACD;AACD,WAAIE,mBAAmB,IAAvB,EAA6B;AAC3B,eAAM,IAAI9B,KAAJ,gBAAuB4B,aAAvB,uCAAN;AACD;;AAED,WAAIF,UAAUlK,SAASuK,iBAAT,CAA2BxE,gBAA3B,CAAd;AACA,WAAIuC,MAAM,KAAKkC,cAAL,CAAoBJ,aAApB,EAAmCF,OAAnC,CAAV;;AAEA,WAAI5B,OAAO,KAAK/D,cAAhB,EAAgC;AAC9B,gBAAO,KAAKA,cAAL,CAAoB+D,GAApB,CAAP;AACD,QAFD,MAEO;AACL,aAAImC,YAAY,KAAhB,CADK,CACkB;AACvB,aAAIC,qBAAqBL,aAAzB;AACAK,+BAAsBD,YAAY/O,yBAAZ,GACYD,0BADlC;;AAGA,aAAIkP,kBAAkBL,gBAAgBM,KAAhB,CAAsBrP,eAAtB,CAAtB;AACA,aAAIsP,wBAAwBF,kBAAkB,EAAlB,kBAAoC,KAAK3F,uBAAzC,cAA5B;;AAEA,aAAI8F,uBAAuBD,wBAAwBP,eAAnD;AACAQ,iCAAwBnP,qBAAxB;;AAEA,aAAIsE,UAAU,qBAAY,KAAKoE,GAAjB,EAAsBqG,kBAAtB,EAA0CI,oBAA1C,EAAgEjQ,MAAhE,EAAwEqP,OAAxE,CAAd;AACA,cAAK3F,cAAL,CAAoB+D,GAApB,IAA2BrI,OAA3B;;AAEAA,iBAAQ8K,SAAR,CAAkB,UAAC9K,OAAD,EAAa;AAC7B;AACA;AACA,gBAAK,IAAIjJ,IAAI,CAAb,EAAgBA,IAAIgJ,SAAS8B,SAAT,CAAmBlK,MAAvC,EAA+C,EAAEZ,CAAjD,EAAoD;AAClD,iBAAI0L,UAAU1C,SAAS8B,SAAT,CAAmB9K,CAAnB,CAAd;AACA,iBAAIgL,UAAU/B,QAAQ+B,OAAR,CAAgBU,QAAQxB,aAAxB,CAAd;AACA,iBAAIc,OAAJ,EACE,OAAKqC,GAAL,CAASuD,SAAT,CAAmB5F,OAAnB,EAA4BhL,CAA5B;AACH;AACF,UATD;;AAWA,gBAAOiJ,OAAP;AACD;AACF;;;oCAEc3J,S,EAAW8Q,W,EAAa;AACrC,WAAI7G,KAAK,KAAK8D,GAAd;;AAEA;AACA,WAAI+C,eAAe9Q,UAAU8I,eAA7B,EAA8C;AAC5C,cAAK,IAAI4L,MAAT,IAAmBnQ,MAAnB,EAA2B;AACzB,eAAIvE,UAAU8I,eAAV,GAA4BhE,YAAY4P,MAAZ,CAAhC,EAAqD;AACnDzK,gBAAG0K,uBAAH,CAA2BpQ,OAAOmQ,MAAP,CAA3B;AACD,YAFD,MAEO;AACLzK,gBAAG2K,wBAAH,CAA4BrQ,OAAOmQ,MAAP,CAA5B;AACD;AACF;AACF;;AAED;AAdqC;AAAA;AAAA;;AAAA;AAerC,gCAA6B1U,UAAU6I,kBAAvC,wIAA2D;AAAA,eAAlDM,gBAAkD;;AACzDc,cAAGkF,UAAH,CAAclF,GAAG4K,YAAjB,EAA+B1L,iBAAiBhC,OAAjB,CAAyBA,OAAxD;AADyD;AAAA;AAAA;;AAAA;AAEzD,oCAAmBgC,iBAAiBf,WAApC,wIAAiD;AAAA,mBAAxCsM,OAAwC;;AAC/CzK,kBAAG6K,mBAAH,CACIJ,QAAOlN,aADX,EAC0BkN,QAAOjN,gBADjC,EACmDiN,QAAO/M,eAD1D,EAEI+M,QAAOzM,WAFX,EAEwByM,QAAO7M,OAF/B,EAEwC6M,QAAO3M,YAF/C;AAGD;AANwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO1D;AAtBoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwBrC,WAAI/H,UAAUoJ,aAAd,EAA6B;AAC3Ba,YAAGkF,UAAH,CAAclF,GAAG8K,oBAAjB,EAAuC/U,UAAUoJ,aAAV,CAAwBjC,OAA/D;AACD,QAFD,MAEO;AACL8C,YAAGkF,UAAH,CAAclF,GAAG8K,oBAAjB,EAAuC,IAAvC;AACD;AACF;;;wCAEkBrL,Q,EAAgC;AAAA,WAAtBsL,aAAsB,uEAAN,IAAM;;AACjD,WAAI/K,KAAK,KAAK8D,GAAd;;AAEA,WAAI1D,QAAQX,SAAS6B,MAArB;AACA,WAAInB,aAAa4K,gBAAgBA,cAAczJ,MAA9B,GAAuC,CAAClB,KAAzD;;AAEA;AACA,WAAIA,SAASD,UAAb,EACI;;AAEJ;AACA,WAAIV,SAASuL,SAAT,CAAmB7K,UAAnB,CAAJ,EAAoC;AAClCJ,gBAAOC,EAAP,EAAWA,GAAGkD,SAAd,EAAyB,cAAIA,SAA7B,EAAwC/C,UAAxC,EAAoDC,KAApD;AACAL,gBAAOC,EAAP,EAAWA,GAAGgC,KAAd,EAAqB,cAAIA,KAAzB,EAAgC7B,UAAhC,EAA4CC,KAA5C;AACAL,gBAAOC,EAAP,EAAWA,GAAGgD,UAAd,EAA0B,cAAIA,UAA9B,EAA0C7C,UAA1C,EAAsDC,KAAtD;AACAL,gBAAOC,EAAP,EAAWA,GAAGmD,YAAd,EAA4B,cAAIA,YAAhC,EAA8ChD,UAA9C,EAA0DC,KAA1D;;AAEA,aAAI6K,oBAAoB,CAAC7K,QAAQ,cAAIgD,UAAb,KAA4BjD,aAAa,cAAIiD,UAA7C,CAAxB;AACA,aAAI6H,iBAAJ,EAAuB;AACrB,eAAIC,OAAOD,oBAAoB,CAA/B;AACA,gBAAKrG,uBAAL,GAA+B,CAACsG,IAAhC;AACAlL,cAAG4G,SAAH,CAAasE,IAAb,EAAmBA,IAAnB,EAAyBA,IAAzB,EAA+BA,IAA/B;AACD;;AAED,aAAIC,oBAAoB,CAAC/K,QAAQ,cAAIiD,UAAb,KAA4BlD,aAAa,cAAIkD,UAA7C,CAAxB;AACA,aAAI8H,iBAAJ,EAAuB;AACrB,gBAAKxG,uBAAL,GAA+B,EAAEwG,oBAAoB,CAAtB,CAA/B;AACAnL,cAAG2G,SAAH,CAAawE,oBAAoB,CAAjC;AACD;;AAED,aAAIC,sBAAsB,CAAChL,QAAQ,cAAIkD,YAAb,KAA8BnD,aAAa,cAAImD,YAA/C,CAA1B;AACA,aAAI8H,mBAAJ,EAAyB;AACvBpL,cAAGqL,WAAH,CAAeD,sBAAsB,CAArC;AACD;AACF;;AAED;AACA,WAAI3L,SAAS6L,UAAT,CAAoBnL,UAApB,CAAJ,EAAqC;AACnCH,YAAGuL,SAAH,CAAa9L,SAAS+L,cAAtB,EAAsC/L,SAASgM,cAA/C;AACD;;AAED;AACA,WAAIhM,SAASiM,cAAT,CAAwBvL,UAAxB,CAAJ,EAAyC;AACvCH,YAAG2L,SAAH,CAAalM,SAASmM,UAAtB;AACD;AACF;;;yBAvYQ;AACP,cAAO,KAAK9H,GAAZ;AACD;;;;;;;;;;;;;;;;;;SCzYa+H,gB,GAAAA,gB;;;;AA9DhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAMC,KAAKtI,qBAAX,C,CAAkC;;AAE3B,KAAMuI,oBAAM;AACjB;AACA7I,cAAc,KAFG;AAGjBlB,UAAc,KAHG;AAIjBgB,eAAc,KAJG;AAKjBG,iBAAc,KALG;AAMjBC,eAAc,KANG;AAOjBC,eAAc,KAPG;AAQjBC,iBAAc;AARG,EAAZ;;AAWA,KAAM0I,gCAAY;AACvBlJ,eAAiB,UADM;AAEvBa,oBAAkB,CAFK;AAGvBD,oBAAkB,UAHK;AAIvBG,oBAAkB,EAJK;AAKvBD,oBAAkB,UALK;AAMvBb,qBAAkB,UANK;AAOvBQ,qBAAkB,EAPK;AAQvBN,qBAAkB;AARK,EAAlB;;AAWA,KAAMgJ,sCAAe;AAC1B;AACA/J,WAAa,CAFa;;AAI1B;AACAgK,QAAa,CALa;;AAO1B;AACAjK,gBAAa,CARa;;AAU1B;AACA;AACAkK,aAAa,CAZa;;AAc1B;AACApK,YAAa;AAfa,EAArB;;AAkBA,UAAS8J,gBAAT,CAA0BzL,KAA1B,EAAiC8K,IAAjC,EAAuCkB,KAAvC,EAA8C;AACnD,OAAI9V,QAAQ,CAAC8J,QAAQ8K,IAAT,KAAkBkB,KAA9B;AACA,WAAQ9V,KAAR;AACE,UAAK,CAAL;AACA,UAAK,CAAL;AACE,cAAOA,KAAP;AACF;AACE,cAAQA,QAAQ,CAAT,GAAcwV,GAAGO,SAAxB;AALJ;AAOD;;KAEYC,a,WAAAA,a;AACX,4BAAc;AAAA;;AACZ,UAAKhL,MAAL,GAAcyK,IAAI7I,SAAJ,GACA6I,IAAI/I,UADJ,GAEA+I,IAAI3I,UAFJ,GAGA2I,IAAI1I,UAHlB;;AAKA;AACA,UAAKmI,cAAL,GAAsBM,GAAGS,SAAzB;AACA,UAAKd,cAAL,GAAsBK,GAAGU,mBAAzB;;AAEA,UAAKZ,UAAL,GAAkBE,GAAGW,IAArB;AACD;;;;yBAEe;AAAE,cAAO,CAAC,EAAE,KAAKnL,MAAL,GAAcyK,IAAI7I,SAApB,CAAR;AAAyC,M;uBAC7C5M,K,EAAO;AACnB,WAAIA,KAAJ,EAAW;AACT,cAAKgL,MAAL,IAAeyK,IAAI7I,SAAnB;AACD,QAFD,MAEO;AACL,cAAK5B,MAAL,IAAe,CAACyK,IAAI7I,SAApB;AACD;AACF;;;yBAEW;AAAE,cAAO,CAAC,EAAE,KAAK5B,MAAL,GAAcyK,IAAI/J,KAApB,CAAR;AAAqC,M;uBACzC1L,K,EAAO;AACf,WAAIA,KAAJ,EAAW;AACT,cAAKgL,MAAL,IAAeyK,IAAI/J,KAAnB;AACD,QAFD,MAEO;AACL,cAAKV,MAAL,IAAe,CAACyK,IAAI/J,KAApB;AACD;AACF;;;yBAEgB;AAAE,cAAO,CAAC,EAAE,KAAKV,MAAL,GAAcyK,IAAI/I,UAApB,CAAR;AAA0C,M;uBAC9C1M,K,EAAO;AACpB,WAAIA,KAAJ,EAAW;AACT,cAAKgL,MAAL,IAAeyK,IAAI/I,UAAnB;AACD,QAFD,MAEO;AACL,cAAK1B,MAAL,IAAe,CAACyK,IAAI/I,UAApB;AACD;AACF;;;yBAEkB;AAAE,cAAO,CAAC,EAAE,KAAK1B,MAAL,GAAcyK,IAAI5I,YAApB,CAAR;AAA4C,M;uBAChD7M,K,EAAO;AACtB,WAAIA,KAAJ,EAAW;AACT,cAAKgL,MAAL,IAAeyK,IAAI5I,YAAnB;AACD,QAFD,MAEO;AACL,cAAK7B,MAAL,IAAe,CAACyK,IAAI5I,YAApB;AACD;AACF;;;yBAEgB;AAAE,cAAO,CAAC,EAAE,KAAK7B,MAAL,GAAcyK,IAAI3I,UAApB,CAAR;AAA0C,M;uBAC9C9M,K,EAAO;AACpB,WAAIA,KAAJ,EAAW;AACT,cAAKgL,MAAL,IAAeyK,IAAI3I,UAAnB;AACD,QAFD,MAEO;AACL,cAAK9B,MAAL,IAAe,CAACyK,IAAI3I,UAApB;AACD;AACF;;;yBAEgB;AAAE,cAAO,CAAC,EAAE,KAAK9B,MAAL,GAAcyK,IAAI1I,UAApB,CAAR;AAA0C,M;uBAC9C/M,K,EAAO;AACpB,WAAIA,KAAJ,EAAW;AACT,cAAKgL,MAAL,IAAeyK,IAAI1I,UAAnB;AACD,QAFD,MAEO;AACL,cAAK/B,MAAL,IAAe,CAACyK,IAAI1I,UAApB;AACD;AACF;;;yBAEgB;AACf,cAAO,CAAC,CAAC,KAAK/B,MAAL,GAAc0K,UAAU/I,gBAAzB,KAA8C+I,UAAUzI,gBAAzD,IAA6EC,sBAAsBC,KAA1G;AACD,M;uBACcnN,K,EAAO;AACpBA,eAAQA,QAAQkN,sBAAsBC,KAAtC;AACA,YAAKnC,MAAL,IAAe,CAAC0K,UAAU/I,gBAA1B;AACA,YAAK3B,MAAL,IAAgBhL,SAAS0V,UAAUzI,gBAAnC;AACD;;;yBAEkB;AAAE,cAAO,CAAC,EAAE,KAAKjC,MAAL,GAAcyK,IAAIzI,YAApB,CAAR;AAA4C,M;uBAChDhN,K,EAAO;AACtB,WAAIA,KAAJ,EAAW;AACT,cAAKgL,MAAL,IAAeyK,IAAIzI,YAAnB;AACD,QAFD,MAEO;AACL,cAAKhC,MAAL,IAAe,CAACyK,IAAIzI,YAApB;AACD;AACF;;;yBAEoB;AACnB,cAAOuI,iBAAiB,KAAKvK,MAAtB,EAA8B0K,UAAUtI,eAAxC,EAAyDsI,UAAUrI,eAAnE,CAAP;AACD,M;uBACkBrN,K,EAAO;AACxB,eAAOA,KAAP;AACE,cAAK,CAAL;AACA,cAAK,CAAL;AACE;AACF;AACEA,mBAASA,QAAQkN,sBAAsB6I,SAA/B,GAA4C,CAApD;AALJ;AAOA,YAAK/K,MAAL,IAAe,CAAC0K,UAAUtI,eAA1B;AACA,YAAKpC,MAAL,IAAgBhL,SAAS0V,UAAUrI,eAAnC;AACD;;;yBAEoB;AACnB,cAAOkI,iBAAiB,KAAKvK,MAAtB,EAA8B0K,UAAUpI,eAAxC,EAAyDoI,UAAUnI,eAAnE,CAAP;AACD,M;uBACkBvN,K,EAAO;AACxB,eAAOA,KAAP;AACE,cAAK,CAAL;AACA,cAAK,CAAL;AACE;AACF;AACEA,mBAASA,QAAQkN,sBAAsB6I,SAA/B,GAA4C,CAApD;AALJ;AAOA,YAAK/K,MAAL,IAAe,CAAC0K,UAAUpI,eAA1B;AACA,YAAKtC,MAAL,IAAgBhL,SAAS0V,UAAUnI,eAAnC;AACD;;;;;;KAGG6I,e;AACJ,4BAAYC,YAAZ,EAA0B;AAAA;;AACxB,UAAKhM,aAAL,GAAqBgM,YAArB;AACA,UAAK/L,QAAL,GAAgB,IAAhB;AACD;;;;yBAEa;AACZ,cAAO,KAAKA,QAAZ;AACD,M;uBAEWtK,K,EAAO;AACjB,YAAKsK,QAAL,GAAgBtK,KAAhB;AACD;;;;;;KAGGsW,e;AACJ,4BAAYD,YAAZ,EAA0BE,aAA1B,EAAyCxV,MAAzC,EAAiD;AAAA;;AAC/C,UAAKsJ,aAAL,GAAqBgM,YAArB;AACA,UAAKzL,MAAL,GAAc2L,aAAd;AACA,UAAK5P,OAAL,GAAe5F,MAAf;AACA,SAAI,CAAC,KAAK4F,OAAV,EAAmB;AACjB,WAAI4P,yBAAyB1L,KAA7B,EAAoC;AAClC,cAAKlE,OAAL,GAAe4P,cAAcxV,MAA7B;AACD,QAFD,MAEO;AACL,cAAK4F,OAAL,GAAe,CAAf;AACD;AACF;AACF;;;;yBAEW;AACV,cAAO,KAAKiE,MAAZ;AACD,M;uBAES5K,K,EAAO;AACf,YAAK4K,MAAL,GAAc5K,KAAd;AACD;;;;;;KAGUwW,Q,WAAAA,Q;AACX,uBAAc;AAAA;;AACZ,UAAK1M,KAAL,GAAa,IAAIkM,aAAJ,EAAb;AACA,UAAKxK,YAAL,GAAoBmK,aAAalK,OAAjC;AACA,UAAKR,SAAL,GAAiB,EAAjB;AACA,UAAKC,SAAL,GAAiB,EAAjB;AACD;;;;mCAEamL,Y,EAAc;AAC1B,WAAIxK,UAAU,IAAIuK,eAAJ,CAAoBC,YAApB,CAAd;AACA,YAAKpL,SAAL,CAAe/K,IAAf,CAAoB2L,OAApB;AACA,cAAOA,OAAP;AACD;;;mCAEawK,Y,EAA4C;AAAA,WAA9BE,aAA8B,uEAAhB,IAAgB;AAAA,WAAVxV,MAAU,uEAAH,CAAG;;AACxD,WAAIoK,UAAU,IAAImL,eAAJ,CAAoBD,YAApB,EAAkCE,aAAlC,EAAiDxV,MAAjD,CAAd;AACA,YAAKmK,SAAL,CAAehL,IAAf,CAAoBiL,OAApB;AACA,cAAOA,OAAP;AACD;;;uCAciB+D,gB,EAAkB;AAClC,cAAO,EAAP;AACD;;;yBAdmB;AAClB,cAAO,IAAP;AACD;;;yBAEmB;AAClB,cAAO,IAAP;AACD;;;yBAEqB;AACpB,cAAO,IAAP;AACD;;;;;;;;;;;;;;;;;;;;AClQH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;KAEauH,O,WAAAA,O;AACX,oBAAY/M,EAAZ,EAAgBgN,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,EAAgDvD,OAAhD,EAAyD;AAAA;;AACvD,UAAK7F,GAAL,GAAW9D,EAAX;AACA,UAAKN,OAAL,GAAeM,GAAGmN,aAAH,EAAf;AACA,UAAK1C,MAAL,GAAc,IAAd;AACA,UAAKhJ,OAAL,GAAe,IAAf;AACA,UAAKkI,OAAL,GAAe,EAAf;;AAEA,UAAKyD,UAAL,GAAkB,IAAlB;AACA,UAAKC,mBAAL,GAA2B,EAA3B;;AAEA,SAAIC,iBAAiB,EAArB;AACA,SAAI3D,OAAJ,EAAa;AACX,YAAK,IAAIC,MAAT,IAAmBD,OAAnB,EAA4B;AAC1B,cAAKA,OAAL,CAAaC,MAAb,IAAuBD,QAAQC,MAAR,CAAvB;AACA0D,wCAA6B1D,MAA7B,SAAuCD,QAAQC,MAAR,CAAvC;AACD;AACF;;AAED,UAAK2D,YAAL,GAAoBvN,GAAGwN,YAAH,CAAgBxN,GAAGyN,aAAnB,CAApB;AACAzN,QAAG0N,YAAH,CAAgB,KAAKhO,OAArB,EAA8B,KAAK6N,YAAnC;AACAvN,QAAG2N,YAAH,CAAgB,KAAKJ,YAArB,EAAmCD,iBAAiBN,QAApD;AACAhN,QAAG4N,aAAH,CAAiB,KAAKL,YAAtB;;AAEA,UAAKM,YAAL,GAAoB7N,GAAGwN,YAAH,CAAgBxN,GAAGuE,eAAnB,CAApB;AACAvE,QAAG0N,YAAH,CAAgB,KAAKhO,OAArB,EAA8B,KAAKmO,YAAnC;AACA7N,QAAG2N,YAAH,CAAgB,KAAKE,YAArB,EAAmCP,iBAAiBL,QAApD;AACAjN,QAAG4N,aAAH,CAAiB,KAAKC,YAAtB;;AAEA,SAAIX,UAAJ,EAAgB;AACd,YAAKzC,MAAL,GAAc,EAAd;AACA,YAAK,IAAIqD,WAAT,IAAwBZ,UAAxB,EAAoC;AAClClN,YAAG+N,kBAAH,CAAsB,KAAKrO,OAA3B,EAAoCwN,WAAWY,WAAX,CAApC,EAA6DA,WAA7D;AACA,cAAKrD,MAAL,CAAYqD,WAAZ,IAA2BZ,WAAWY,WAAX,CAA3B;AACD;AACF;;AAED9N,QAAGgO,WAAH,CAAe,KAAKtO,OAApB;AACD;;;;+BAESuO,Q,EAAU;AAClB,YAAKZ,mBAAL,CAAyB7W,IAAzB,CAA8ByX,QAA9B;AACD;;;2BAEK;AACJ,WAAIjO,KAAK,KAAK8D,GAAd;;AAEA;AACA;AACA,WAAI,KAAKsJ,UAAT,EAAqB;AACnB,cAAKA,UAAL,GAAkB,KAAlB;AACA,aAAI,CAACpN,GAAGkO,mBAAH,CAAuB,KAAKxO,OAA5B,EAAqCM,GAAGmO,WAAxC,CAAL,EAA2D;AACzD,eAAI,CAACnO,GAAGoO,kBAAH,CAAsB,KAAKb,YAA3B,EAAyCvN,GAAGqO,cAA5C,CAAL,EAAkE;AAChEnS,qBAAQC,KAAR,CAAc,kCAAkC6D,GAAGsO,gBAAH,CAAoB,KAAKf,YAAzB,CAAhD;AACD,YAFD,MAEO,IAAI,CAACvN,GAAGoO,kBAAH,CAAsB,KAAKP,YAA3B,EAAyC7N,GAAGqO,cAA5C,CAAL,EAAkE;AACvEnS,qBAAQC,KAAR,CAAc,oCAAoC6D,GAAGsO,gBAAH,CAAoB,KAAKT,YAAzB,CAAlD;AACD,YAFM,MAEA;AACL3R,qBAAQC,KAAR,CAAc,yBAAyB6D,GAAGuO,iBAAH,CAAqB,KAAK7O,OAA1B,CAAvC;AACD;AACDM,cAAGwO,aAAH,CAAiB,KAAK9O,OAAtB;AACA,gBAAKA,OAAL,GAAe,IAAf;AACD,UAVD,MAUO;AACL,eAAI,CAAC,KAAK+K,MAAV,EAAkB;AAChB,kBAAKA,MAAL,GAAc,EAAd;AACA,iBAAIgE,eAAezO,GAAGkO,mBAAH,CAAuB,KAAKxO,OAA5B,EAAqCM,GAAG0O,iBAAxC,CAAnB;AACA,kBAAK,IAAIjY,IAAI,CAAb,EAAgBA,IAAIgY,YAApB,EAAkChY,GAAlC,EAAuC;AACrC,mBAAIkY,cAAc3O,GAAG4O,eAAH,CAAmB,KAAKlP,OAAxB,EAAiCjJ,CAAjC,CAAlB;AACA,oBAAKgU,MAAL,CAAYkE,YAAY7Z,IAAxB,IAAgCkL,GAAG6O,iBAAH,CAAqB,KAAKnP,OAA1B,EAAmCiP,YAAY7Z,IAA/C,CAAhC;AACD;AACF;;AAED,gBAAK2M,OAAL,GAAe,EAAf;AACA,eAAIqN,gBAAgB9O,GAAGkO,mBAAH,CAAuB,KAAKxO,OAA5B,EAAqCM,GAAG+O,eAAxC,CAApB;AACA,eAAIpC,eAAe,EAAnB;AACA,gBAAK,IAAIlW,KAAI,CAAb,EAAgBA,KAAIqY,aAApB,EAAmCrY,IAAnC,EAAwC;AACtC,iBAAIuY,eAAehP,GAAGiP,gBAAH,CAAoB,KAAKvP,OAAzB,EAAkCjJ,EAAlC,CAAnB;AACAkW,4BAAeqC,aAAala,IAAb,CAAkBoa,OAAlB,CAA0B,KAA1B,EAAiC,EAAjC,CAAf;AACA,kBAAKzN,OAAL,CAAakL,YAAb,IAA6B3M,GAAGmP,kBAAH,CAAsB,KAAKzP,OAA3B,EAAoCiN,YAApC,CAA7B;AACD;AACF;AACD3M,YAAGoP,YAAH,CAAgB,KAAK7B,YAArB;AACAvN,YAAGoP,YAAH,CAAgB,KAAKvB,YAArB;AACD;;AAED7N,UAAGqP,UAAH,CAAc,KAAK3P,OAAnB;;AAEA,WAAI,KAAK2N,mBAAL,CAAyBhW,MAA7B,EAAqC;AAAA;AAAA;AAAA;;AAAA;AACnC,gCAAqB,KAAKgW,mBAA1B,8HAA+C;AAAA,iBAAtCY,QAAsC;;AAC7CA,sBAAS,IAAT;AACD;AAHkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAInC,cAAKZ,mBAAL,GAA2B,EAA3B;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;AChHH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAMvB,KAAKtI,qBAAX,C,CAAkC;;KAErB8L,c,WAAAA,c,GACX,0BAAc;AAAA;;AACZ,QAAKxG,UAAL,GAAkB,IAAlB;AACA,QAAKS,UAAL,GAAkB,IAAlB;AACA,QAAKN,MAAL,GAAc,IAAd;AACA,QAAKG,MAAL,GAAc,IAAd;AACD,E;;KAGUmG,O,WAAAA,O;AACX,sBAAc;AAAA;;AACZ,UAAKpN,OAAL,GAAe,IAAImN,cAAJ,EAAf;AACA,UAAK1G,MAAL,GAAc,IAAd;AACA;AACD;;;;yBAEY;AACX,cAAOkD,GAAG0D,IAAV;AACD;;;yBAEW;AACV,cAAO,CAAP;AACD;;;yBAEY;AACX,cAAO,CAAP;AACD;;;yBAEiB;AAChB,cAAO,IAAP;AACD;;;;;;KAGUC,Y,WAAAA,Y;;;AACX,yBAAYC,GAAZ,EAAiB;AAAA;;AAAA;;AAGf,WAAKhH,IAAL,GAAYgH,GAAZ;;AAEA,SAAIA,IAAIC,GAAJ,IAAWD,IAAIE,QAAnB,EAA6B;AAC3B,WAAIF,IAAIG,YAAR,EAAsB;AACpB,eAAK1S,QAAL,GAAgBnG,QAAQoG,OAAR,OAAhB;AACD,QAFD,MAEO;AACL,eAAKD,QAAL,GAAgBnG,QAAQ2I,MAAR,CAAe,oCAAf,CAAhB;AACD;AACF,MAND,MAMO;AACL,aAAKxC,QAAL,GAAgB,IAAInG,OAAJ,CAAY,UAACoG,OAAD,EAAUuC,MAAV,EAAqB;AAC/C+P,aAAII,gBAAJ,CAAqB,MAArB,EAA6B;AAAA,kBAAM1S,cAAN;AAAA,UAA7B;AACAsS,aAAII,gBAAJ,CAAqB,OAArB,EAA8BnQ,MAA9B;AACD,QAHe,CAAhB;AAID;AAhBc;AAiBhB;;;;uCAeiB;AAChB,cAAO,KAAKxC,QAAZ;AACD;;;yBAfY;AACX;AACA,cAAO2O,GAAG0D,IAAV;AACD;;;yBAEW;AACV,cAAO,KAAK9G,IAAL,CAAUpC,KAAjB;AACD;;;yBAEY;AACX,cAAO,KAAKoC,IAAL,CAAUnC,MAAjB;AACD;;;yBAMiB;AAChB,cAAO,KAAKmC,IAAL,CAAUiH,GAAjB;AACD;;;;GAvC+BJ,O;;KA0CrBQ,U,WAAAA,U;;;AACX,uBAAYC,GAAZ,EAAiB;AAAA;;AACf,SAAIN,MAAM,IAAIO,KAAJ,EAAV;;AADe,0HAETP,GAFS;;AAGfA,SAAIC,GAAJ,GAAUK,GAAV;AAHe;AAIhB;;;GAL6BP,Y;;KAQnBS,W,WAAAA,W;;;AACX,wBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAIT,MAAM,IAAIO,KAAJ,EAAV;;AADgB,4HAEVP,GAFU;;AAGhBA,SAAIC,GAAJ,GAAUrc,OAAO8c,GAAP,CAAWC,eAAX,CAA2BF,IAA3B,CAAV;AAHgB;AAIjB;;;GAL8BV,Y;;AAQjC,KAAIa,0BAA0B,CAA9B;;KAEaC,W,WAAAA,W;;;AACX,wBAAY1L,IAAZ,EAAkByB,KAAlB,EAAyBC,MAAzB,EAA4E;AAAA,SAA3C8B,MAA2C,uEAAlCyD,GAAG0D,IAA+B;AAAA,SAAzBgB,IAAyB,uEAAlB1E,GAAGrD,aAAe;;AAAA;;AAAA;;AAG1E,YAAKF,KAAL,GAAa1D,IAAb;AACA,YAAK4L,MAAL,GAAcnK,KAAd;AACA,YAAKoK,OAAL,GAAenK,MAAf;AACA,YAAKoK,OAAL,GAAetI,MAAf;AACA,YAAKC,KAAL,GAAakI,IAAb;AACA,YAAKI,IAAL,aAAoBN,uBAApB;AACAA;AAT0E;AAU3E;;;;yBAEY;AACX,cAAO,KAAKK,OAAZ;AACD;;;yBAEW;AACV,cAAO,KAAKF,MAAZ;AACD;;;yBAEY;AACX,cAAO,KAAKC,OAAZ;AACD;;;yBAEiB;AAChB,cAAO,KAAKE,IAAZ;AACD;;;;GA3B8BrB,O;;KA8BpBsB,Y,WAAAA,Y;;;AACX,yBAAYxX,CAAZ,EAAeyX,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EAAwB;AAAA;;AACtB,SAAIC,aAAa,IAAIC,UAAJ,CAAe,CAAC7X,IAAE,KAAH,EAAUyX,IAAE,KAAZ,EAAmBC,IAAE,KAArB,EAA4BC,IAAE,KAA9B,CAAf,CAAjB;;AADsB,8HAEhBC,UAFgB,EAEJ,CAFI,EAED,CAFC;;AAItB,YAAKrI,MAAL,GAAc,KAAd;AACA,YAAKgI,IAAL,cAAqBK,WAAW,CAAX,CAArB,SAAsCA,WAAW,CAAX,CAAtC,SAAuDA,WAAW,CAAX,CAAvD,SAAwEA,WAAW,CAAX,CAAxE;AALsB;AAMvB;;;GAP+BV,W;;;;;;;;;;;;;sjBCjJlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAEA,KAAMzE,KAAKtI,qBAAX,C,CAAkC;;AAElC,KAAM2N,YAAYtc,KAAKF,MAAL,EAAlB;;KAEab,e,WAAAA,e;AACX,4BAAYsd,OAAZ,EAAqB;AAAA;;AACnB,UAAKC,SAAL,GAAiB,EAAjB;AACA,UAAKC,QAAL,GAAgB,EAAhB;;AAEA,UAAKC,iBAAL,GAAyB,KAAzB;;AAEA,UAAKC,cAAL,GAAsB,CAAtB;AACA,UAAKC,aAAL,GAAqB,CAArB;AACA,UAAKC,WAAL,GAAmB,CAAnB;;AAEA,UAAKC,aAAL,GAAqB,KAArB;AACA,UAAKC,eAAL,GAAuB,KAAvB;AACA,UAAKC,UAAL,GAAkB,IAAlB;AACA,UAAKC,iBAAL,GAAyB,IAAzB;AACA,UAAKta,IAAL,GAAY,IAAZ;AACA,UAAKM,IAAL,GAAY,IAAZ;AACD;;;;qCAyCe;AACd,WAAI,KAAKyZ,iBAAT,EAA4B;AAC1B,eAAM,IAAItJ,KAAJ,wEAAN;AACD;;AAED,YAAKsJ,iBAAL,GAAyB,IAAzB;AACA,YAAKE,aAAL,GAAqB,CAArB;AACA,YAAKC,WAAL,GAAmB,CAAnB;AACD;;;mCAEa;AACZ,WAAI,CAAC,KAAKH,iBAAV,EAA6B;AAC3B,eAAM,IAAItJ,KAAJ,uDAAN;AACD;;AAED,WAAI,KAAKyJ,WAAL,IAAoB,KAAKD,aAA7B,EAA4C;AAC1C,eAAM,IAAIxJ,KAAJ,8EAAqF,KAAKyJ,WAA1F,kCAAkI,KAAKD,aAAvI,OAAN;AACD;;AAED,YAAKF,iBAAL,GAAyB,KAAzB;AACA,YAAKC,cAAL,IAAuB,KAAKC,aAA5B;;AAEA;AACD;;;gCAEUrL,C,EAAGC,C,EAAG0L,C,EAAGC,C,EAAGC,C,EAAGC,E,EAAIC,E,EAAIC,E,EAAI;AACpC,WAAI,CAAC,KAAKb,iBAAV,EAA6B;AAC3B,eAAM,IAAItJ,KAAJ,wDAAN;AACD;;AAED;AACA,WAAI,KAAK4J,UAAT,EAAqB;AACnBV,mBAAU,CAAV,IAAe/K,CAAf;AACA+K,mBAAU,CAAV,IAAe9K,CAAf;AACA8K,mBAAU,CAAV,IAAeY,CAAf;AACAld,cAAKkD,aAAL,CAAmBoZ,SAAnB,EAA8BA,SAA9B,EAAyC,KAAKU,UAA9C;AACAzL,aAAI+K,UAAU,CAAV,CAAJ;AACA9K,aAAI8K,UAAU,CAAV,CAAJ;AACAY,aAAIZ,UAAU,CAAV,CAAJ;;AAEAA,mBAAU,CAAV,IAAee,EAAf;AACAf,mBAAU,CAAV,IAAegB,EAAf;AACAhB,mBAAU,CAAV,IAAeiB,EAAf;AACAvd,cAAKoE,aAAL,CAAmBkY,SAAnB,EAA8BA,SAA9B,EAAyC,KAAKW,iBAA9C;AACAI,cAAKf,UAAU,CAAV,CAAL;AACAgB,cAAKhB,UAAU,CAAV,CAAL;AACAiB,cAAKjB,UAAU,CAAV,CAAL;AACD;;AAED,WAAI,KAAKS,eAAT,EAA0B;AACxBM,eAAM,CAAC,GAAP;AACAC,eAAM,CAAC,GAAP;AACAC,eAAM,CAAC,GAAP;AACD;;AAED,YAAKf,SAAL,CAAe7a,IAAf,CAAoB4P,CAApB,EAAuBC,CAAvB,EAA0B0L,CAA1B,EAA6BC,CAA7B,EAAgCC,CAAhC,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2CC,EAA3C;;AAEA,WAAI,KAAK5a,IAAT,EAAe;AACb,cAAKA,IAAL,CAAU,CAAV,IAAewC,KAAKb,GAAL,CAAS,KAAK3B,IAAL,CAAU,CAAV,CAAT,EAAuB4O,CAAvB,CAAf;AACA,cAAK5O,IAAL,CAAU,CAAV,IAAewC,KAAKb,GAAL,CAAS,KAAK3B,IAAL,CAAU,CAAV,CAAT,EAAuB6O,CAAvB,CAAf;AACA,cAAK7O,IAAL,CAAU,CAAV,IAAewC,KAAKb,GAAL,CAAS,KAAK3B,IAAL,CAAU,CAAV,CAAT,EAAuBua,CAAvB,CAAf;AACA,cAAKja,IAAL,CAAU,CAAV,IAAekC,KAAKZ,GAAL,CAAS,KAAKtB,IAAL,CAAU,CAAV,CAAT,EAAuBsO,CAAvB,CAAf;AACA,cAAKtO,IAAL,CAAU,CAAV,IAAekC,KAAKZ,GAAL,CAAS,KAAKtB,IAAL,CAAU,CAAV,CAAT,EAAuBuO,CAAvB,CAAf;AACA,cAAKvO,IAAL,CAAU,CAAV,IAAekC,KAAKZ,GAAL,CAAS,KAAKtB,IAAL,CAAU,CAAV,CAAT,EAAuBia,CAAvB,CAAf;AACD,QAPD,MAOO;AACL,cAAKva,IAAL,GAAY3C,KAAKwF,UAAL,CAAgB+L,CAAhB,EAAmBC,CAAnB,EAAsB0L,CAAtB,CAAZ;AACA,cAAKja,IAAL,GAAYjD,KAAKwF,UAAL,CAAgB+L,CAAhB,EAAmBC,CAAnB,EAAsB0L,CAAtB,CAAZ;AACD;;AAED,cAAO,KAAKN,aAAL,EAAP;AACD;;;kCAMYY,K,EAAOC,K,EAAOC,K,EAAO;AAChC,WAAI,CAAC,KAAKhB,iBAAV,EAA6B;AAC3B,eAAM,IAAItJ,KAAJ,yDAAN;AACD;;AAED,YAAKyJ,WAAL,GAAmB1X,KAAKZ,GAAL,CAAS,KAAKsY,WAAd,EAA2BW,KAA3B,EAAkCC,KAAlC,EAAyCC,KAAzC,CAAnB;;AAEAF,gBAAS,KAAKb,cAAd;AACAc,gBAAS,KAAKd,cAAd;AACAe,gBAAS,KAAKf,cAAd;;AAEA,WAAI,KAAKG,aAAT,EAAwB;AACtB,cAAKL,QAAL,CAAc9a,IAAd,CAAmB+b,KAAnB,EAA0BD,KAA1B,EAAiCD,KAAjC;AACD,QAFD,MAEO;AACL,cAAKf,QAAL,CAAc9a,IAAd,CAAmB6b,KAAnB,EAA0BC,KAA1B,EAAiCC,KAAjC;AACD;AACF;;;6BAEO;AACN,WAAI,KAAKhB,iBAAT,EAA4B;AAC1B,eAAM,IAAItJ,KAAJ,oDAAN;AACD;;AAED,YAAKoJ,SAAL,GAAiB,EAAjB;AACA,YAAKC,QAAL,GAAgB,EAAhB;AACA,YAAKE,cAAL,GAAsB,CAAtB;AACA,YAAKha,IAAL,GAAY,IAAZ;AACA,YAAKM,IAAL,GAAY,IAAZ;AACD;;;qCAEe2I,Q,EAAU;AACxB,WAAI,CAAC,KAAK+Q,cAAV,EAA0B;AACxB,eAAM,IAAIvJ,KAAJ,qEAAN;AACD;;AAED,WAAIuK,gBAAgB/R,SAASgS,kBAAT,CAA4B3G,GAAGlB,YAA/B,EAA6C,IAAItW,YAAJ,CAAiB,KAAK+c,SAAtB,CAA7C,CAApB;AACA,WAAI/R,eAAemB,SAASgS,kBAAT,CAA4B3G,GAAGhB,oBAA/B,EAAqD,IAAI4H,WAAJ,CAAgB,KAAKpB,QAArB,CAArD,CAAnB;;AAEA,WAAIqB,UAAU,CACZ,kCAAuB,UAAvB,EAAmCH,aAAnC,EAAkD,CAAlD,EAAqD1G,GAAG8G,KAAxD,EAA+D,EAA/D,EAAmE,CAAnE,CADY,EAEZ,kCAAuB,YAAvB,EAAqCJ,aAArC,EAAoD,CAApD,EAAuD1G,GAAG8G,KAA1D,EAAiE,EAAjE,EAAqE,EAArE,CAFY,EAGZ,kCAAuB,QAAvB,EAAiCJ,aAAjC,EAAgD,CAAhD,EAAmD1G,GAAG8G,KAAtD,EAA6D,EAA7D,EAAiE,EAAjE,CAHY,CAAd;;AAMA,WAAI7c,YAAY,yBAAc4c,OAAd,EAAuB,KAAKrB,QAAL,CAAcja,MAArC,CAAhB;AACAtB,iBAAU8c,cAAV,CAAyBvT,YAAzB;AACAvJ,iBAAU+c,SAAV,CAAoB,KAAKtb,IAAzB,EAA+B,KAAKM,IAApC;;AAEA,cAAO/B,SAAP;AACD;;;uBApKgBO,K,EAAO;AACtB,WAAI,KAAKib,iBAAT,EAA4B;AAC1B,eAAM,IAAItJ,KAAJ,kEAAN;AACD;AACD,YAAK0J,aAAL,GAAqBrb,KAArB;AACD,M;yBAEkB;AACjB,YAAKqb,aAAL;AACD;;;uBAEkBrb,K,EAAO;AACxB,WAAI,KAAKib,iBAAT,EAA4B;AAC1B,eAAM,IAAItJ,KAAJ,oEAAN;AACD;AACD,YAAK2J,eAAL,GAAuBtb,KAAvB;AACD,M;yBAEoB;AACnB,YAAKsb,eAAL;AACD;;;uBAEatb,K,EAAO;AACnB,WAAI,KAAKib,iBAAT,EAA4B;AAC1B,eAAM,IAAItJ,KAAJ,+DAAN;AACD;AACD,YAAK4J,UAAL,GAAkBvb,KAAlB;AACA,WAAI,KAAKub,UAAT,EAAqB;AACnB,aAAI,CAAC,KAAKC,iBAAV,EAA6B;AAC3B,gBAAKA,iBAAL,GAAyBnZ,KAAKhE,MAAL,EAAzB;AACD;AACDgE,cAAKK,QAAL,CAAc,KAAK8Y,iBAAnB,EAAsC,KAAKD,UAA3C;AACD;AACF,M;yBAEe;AACd,YAAKA,UAAL;AACD;;;yBA0EuB;AACtB,cAAO,KAAKJ,aAAZ;AACD;;;;;;KAsDUsB,mB,WAAAA,mB;AACX,gCAAYC,gBAAZ,EAA8B;AAAA;;AAC5B,SAAIA,gBAAJ,EAAsB;AACpB,YAAKC,OAAL,GAAeD,gBAAf;AACD,MAFD,MAEO;AACL,YAAKC,OAAL,GAAe,IAAInf,eAAJ,EAAf;AACD;AACF;;;;qCAUe2M,Q,EAAU;AACxB,cAAO,KAAKwS,OAAL,CAAaC,eAAb,CAA6BzS,QAA7B,CAAP;AACD;;;6BAEO;AACN,YAAKwS,OAAL,CAAaE,KAAb;AACD;;;uBAdoB7c,K,EAAO;AAC1B,YAAK2c,OAAL,GAAe3c,KAAf;AACD,M;yBAEsB;AACrB,cAAO,KAAK2c,OAAZ;AACD;;;;;;;;;;;;;;;;;;;;ACnOH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;KAEaG,kB,WAAAA,kB,GACX,4BAAYte,IAAZ,EAAkBgI,MAAlB,EAA0BW,eAA1B,EAA2CE,cAA3C,EAA2DE,MAA3D,EAAmEE,WAAnE,EAAgF;AAAA;;AAC9E,QAAKjJ,IAAL,GAAYA,IAAZ;AACA,QAAKgI,MAAL,GAAcA,MAAd;AACA,QAAKW,eAAL,GAAuBA,mBAAmB,CAA1C;AACA,QAAKE,cAAL,GAAsBA,kBAAkB,IAAxC,CAJ8E,CAIhC;AAC9C,QAAKE,MAAL,GAAcA,UAAU,CAAxB;AACA,QAAKE,WAAL,GAAmBA,eAAe,CAAlC;AACA,QAAKE,UAAL,GAAkB,KAAlB;AACD,E;;KAGUoV,S,WAAAA,S;AACX,sBAAYvU,UAAZ,EAAwBN,aAAxB,EAAuCF,IAAvC,EAA6C;AAAA;;AAC3C,UAAKQ,UAAL,GAAkBA,cAAc,EAAhC;AACA,UAAKN,aAAL,GAAqBA,iBAAiB,CAAtC;AACA,UAAKF,IAAL,GAAYA,QAAQ,CAApB,CAH2C,CAGpB;AACvB,UAAKgB,YAAL,GAAoB,IAApB;AACA,UAAKC,iBAAL,GAAyB,CAAzB;AACA,UAAKC,UAAL,GAAkB,CAAlB;AACA,UAAKhI,IAAL,GAAY,IAAZ;AACA,UAAKM,IAAL,GAAY,IAAZ;AACD;;;;oCAEcwH,Y,EAAcvB,W,EAAayB,U,EAAY;AACpD,YAAKF,YAAL,GAAoBA,YAApB;AACA,YAAKC,iBAAL,GAAyBxB,eAAe,CAAxC;AACA,YAAKyB,UAAL,GAAkBA,cAAc,IAAhC,CAHoD,CAGd;AACvC;;;+BAESrG,G,EAAKC,G,EAAK;AAClB,YAAK5B,IAAL,GAAY3C,KAAKsB,KAAL,CAAWgD,GAAX,CAAZ;AACA,YAAKrB,IAAL,GAAYjD,KAAKsB,KAAL,CAAWiD,GAAX,CAAZ;AACD;;;;;;;;;;;;;;;;;;;ACjCH;;;;;;gfApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;KAIarF,U,WAAAA,U;;;;;;;;;;;6BACHoF,G,EAAKC,G,EAAK;AAChB,WAAIka,SAAS,KAAKN,gBAAlB;;AAEA,WAAIO,IAAIna,IAAI,CAAJ,IAASD,IAAI,CAAJ,CAAjB;AACA,WAAIqa,IAAIpa,IAAI,CAAJ,IAASD,IAAI,CAAJ,CAAjB;AACA,WAAIsa,IAAIra,IAAI,CAAJ,IAASD,IAAI,CAAJ,CAAjB;;AAEA,WAAIua,KAAKH,IAAI,GAAb;AACA,WAAII,KAAKH,IAAI,GAAb;AACA,WAAII,KAAKH,IAAI,GAAb;;AAEA,WAAII,KAAK1a,IAAI,CAAJ,IAASua,EAAlB;AACA,WAAII,KAAK3a,IAAI,CAAJ,IAASwa,EAAlB;AACA,WAAII,KAAK5a,IAAI,CAAJ,IAASya,EAAlB;;AAEAN,cAAOU,aAAP;;AAEA;AACA,WAAIC,MAAMX,OAAOY,iBAAjB;AACAZ,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;AACAX,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;;AAEA;AACAX,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,CAAC,GAA5D,EAAiE,GAAjE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,CAAC,GAA5D,EAAiE,GAAjE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,CAAC,GAA5D,EAAiE,GAAjE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,CAAC,GAA5D,EAAiE,GAAjE;;AAEA;AACAE,aAAMX,OAAOY,iBAAb;AACAZ,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;AACAX,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;;AAEAX,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;;AAEA;AACAE,aAAMX,OAAOY,iBAAb;AACAZ,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;AACAX,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;;AAEAX,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,CAAC,GAAvD,EAA4D,GAA5D,EAAiE,GAAjE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,CAAC,GAAvD,EAA4D,GAA5D,EAAiE,GAAjE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,CAAC,GAAvD,EAA4D,GAA5D,EAAiE,GAAjE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,CAAC,GAAvD,EAA4D,GAA5D,EAAiE,GAAjE;;AAEA;AACAE,aAAMX,OAAOY,iBAAb;AACAZ,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;AACAX,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;;AAEAX,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;;AAEA;AACAE,aAAMX,OAAOY,iBAAb;AACAZ,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;AACAX,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;;AAEAX,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,CAAC,GAAjE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,CAAC,GAAjE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,CAAC,GAAjE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,CAAC,GAAjE;;AAEA;AACAE,aAAMX,OAAOY,iBAAb;AACAZ,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;AACAX,cAAOa,YAAP,CAAoBF,GAApB,EAAyBA,MAAI,CAA7B,EAAgCA,MAAI,CAApC;;AAEAX,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;AACAT,cAAOc,UAAP,CAAkB,CAACV,EAAD,GAAIG,EAAtB,EAA0B,CAACF,EAAD,GAAIG,EAA9B,EAAkC,CAACF,EAAD,GAAIG,EAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAsD,GAAtD,EAA2D,GAA3D,EAAgE,GAAhE;;AAEAT,cAAOe,WAAP;AACD;;;gCAEwC;AAAA,WAAhCC,MAAgC,uEAAvB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAuB;AAAA,WAAZC,IAAY,uEAAL,GAAK;;AACvC,WAAIC,KAAKD,OAAO,GAAhB;AACA,YAAKE,OAAL,CAAa,CAACH,OAAO,CAAP,IAAYE,EAAb,EAAiBF,OAAO,CAAP,IAAYE,EAA7B,EAAiCF,OAAO,CAAP,IAAYE,EAA7C,CAAb,EACa,CAACF,OAAO,CAAP,IAAYE,EAAb,EAAiBF,OAAO,CAAP,IAAYE,EAA7B,EAAiCF,OAAO,CAAP,IAAYE,EAA7C,CADb;AAED;;;;;;;;;;;;;;;;;;;ACxFH;;AACA;;;;;;gfArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,KAAME,u9BAAN;;AA4CA;AACA;AACA;AACA,KAAMC,+nBAAN;;AAwBA,KAAMC,6xBA2CJD,kBA3CI,i6DAAN;;KAuHa3gB,W,WAAAA,W;;;AACX,0BAAc;AAAA;;AAAA;;AAGZ,WAAK6gB,UAAL,GAAkB,MAAKC,aAAL,CAAmB,cAAnB,CAAlB;AACA,WAAKC,kBAAL,GAA0B,MAAKD,aAAL,CAAmB,sBAAnB,CAA1B;AACA,WAAKE,MAAL,GAAc,MAAKF,aAAL,CAAmB,WAAnB,CAAd;AACA,WAAKG,SAAL,GAAiB,MAAKH,aAAL,CAAmB,cAAnB,CAAjB;AACA,WAAKI,QAAL,GAAgB,MAAKJ,aAAL,CAAmB,aAAnB,CAAhB;;AAEA,WAAKK,iBAAL,GAAyB,MAAKC,aAAL,CAAmB,iBAAnB,EAAsC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAtC,CAAzB;AACA,WAAKC,yBAAL,GAAiC,MAAKD,aAAL,CAAmB,yBAAnB,EAA8C,CAAC,GAAD,EAAM,GAAN,CAA9C,CAAjC;AACA,WAAKE,kBAAL,GAA0B,MAAKF,aAAL,CAAmB,mBAAnB,EAAwC,GAAxC,CAA1B;AACA,WAAKG,eAAL,GAAuB,MAAKH,aAAL,CAAmB,gBAAnB,EAAqC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArC,CAAvB;AAZY;AAab;;;;uCAciB5P,gB,EAAkB;AAClC,WAAIgQ,kBAAkB,EAAtB;;AAEA,WAAIhQ,iBAAiB3G,eAAjB,GAAmC,sBAAYjE,OAAnD,EAA4D;AAC1D4a,yBAAgB,kBAAhB,IAAsC,CAAtC;AACD;;AAED,WAAIhQ,iBAAiB3G,eAAjB,GAAmC,sBAAYnE,UAAnD,EAA+D;AAC7D,aAAG,KAAKma,UAAL,CAAgB/M,OAAnB,EAA4B;AAC1B0N,2BAAgB,oBAAhB,IAAwC,CAAxC;AACD;;AAED,aAAG,KAAKR,MAAL,CAAYlN,OAAZ,IAAwBtC,iBAAiB3G,eAAjB,GAAmC,sBAAYpE,OAA1E,EAAoF;AAClF+a,2BAAgB,gBAAhB,IAAoC,CAApC;AACD;;AAED,aAAG,KAAKT,kBAAL,CAAwBjN,OAA3B,EAAoC;AAClC0N,2BAAgB,qBAAhB,IAAyC,CAAzC;AACD;;AAED,aAAG,KAAKP,SAAL,CAAenN,OAAlB,EAA2B;AACzB0N,2BAAgB,eAAhB,IAAmC,CAAnC;AACD;;AAED,aAAG,KAAKN,QAAL,CAAcpN,OAAjB,EAA0B;AACxB0N,2BAAgB,cAAhB,IAAkC,CAAlC;AACD;AACF;;AAED,WAAI,CAAC,CAAC,KAAKT,kBAAL,CAAwBjN,OAAzB,IACA,EAAEtC,iBAAiB3G,eAAjB,GAAmC,sBAAYnE,UAAjD,CADD,KAEA,KAAK2a,yBAAL,CAA+B/e,KAA/B,CAAqC,CAArC,KAA2C,GAF/C,EAEoD;AAClDkf,yBAAgB,aAAhB,IAAiC,CAAjC;AACD;;AAED,cAAOA,eAAP;AACD;;;yBAhDmB;AAClB,cAAO,KAAP;AACD;;;yBAEmB;AAClB,cAAOd,aAAP;AACD;;;yBAEqB;AACpB,cAAOE,eAAP;AACD;;;;;;;;;;;;;;;;;;;AC3NH;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;gfA3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;KAWa3gB,S,WAAAA,S;;;AACX,sBAAYP,IAAZ,EAAkB+hB,IAAlB,EAAwBC,KAAxB,EAA+B;AAAA;;AAAA,kHAE3BhiB,OAAOA,KAAKiiB,gBAAZ,GAA+B,IAFJ,EAG1BF,QAAQ/hB,IAAT,GAAiB+hB,KAAKG,aAAL,CAAmBliB,IAAnB,CAAjB,GAA4C,IAHjB,EAI1BgiB,SAAShiB,IAAV,GAAkBgiB,MAAMjiB,WAAN,CAAkBC,IAAlB,CAAlB,GAA4C,IAJjB,EAK3BA,OAAOA,KAAK8I,GAAZ,GAAkB,MALS;AAO9B;;;;;KAGUtI,K,WAAAA,K;;;AACX,oBAAc;AAAA;;AAAA;;AAGZ,YAAK2hB,UAAL,GAAkB,CAAC,CAAnB;AACA,YAAKC,YAAL,GAAoB,CAApB;AACA,YAAKC,cAAL,GAAsB,IAAtB;AACA,YAAKC,eAAL,GAAuB,KAAvB;AACA,YAAKC,MAAL,GAAc,IAAd;AACA,YAAKC,aAAL,GAAqB,IAArB;AACA,YAAKC,gBAAL,GAAwB,IAAxB;;AAEA,YAAKC,SAAL,GAAiB,IAAjB;;AAEA,YAAKC,eAAL,GAAuB,IAAvB;AACA,YAAKC,sBAAL,GAA8B,IAA9B;;AAEA,YAAKC,OAAL,GAAe,IAAf;AACA,YAAKC,aAAL,GAAqB,IAArB;AAjBY;AAkBb;;;;iCAEW/V,Q,EAAU;AACpB,YAAK2V,SAAL,GAAiB3V,QAAjB;;AAEA;AACA;AACAA,gBAAST,EAAT,CAAYyW,UAAZ,CAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC;;AAEA,WAAIhW,QAAJ,EAAc;AACZ,cAAK+V,aAAL,GAAqB,sBAAgB/V,QAAhB,CAArB;;AAEA,aAAI,KAAK8V,OAAT,EAAkB;AAChB,gBAAKA,OAAL,CAAaG,WAAb,CAAyBjW,QAAzB;AACD;;AAED,aAAI,KAAKsV,cAAT,EAAyB;AACvB,gBAAKE,MAAL,GAAc,6BAAgB,KAAKG,SAArB,CAAd;AACA,gBAAKH,MAAL,CAAY/gB,UAAZ,GAAyB,IAAzB;AACA,gBAAKgB,OAAL,CAAa,KAAK+f,MAAlB;;AAEA,eAAI,KAAKD,eAAT,EAA0B;AACxB,kBAAKC,MAAL,CAAYU,WAAZ,GAA0B,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,IAAV,CAA1B;AACD,YAFD,MAEO;AACL,kBAAKV,MAAL,CAAYU,WAAZ,GAA0B,CAAC,CAAD,EAAI,CAAC,GAAL,EAAU,CAAC,GAAX,CAA1B;AACD;AACD,gBAAKV,MAAL,CAAY/b,KAAZ,GAAoB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAApB;AACApE,gBAAK8gB,SAAL,CAAe,KAAKX,MAAL,CAAYY,QAA3B,EAAqC,CAAC,IAAtC,EAA4C,GAA5C,EAAiD,GAAjD;AACD;;AAED,aAAI,KAAKX,aAAT,EAAwB;AACtB,gBAAKC,gBAAL,GAAwB,mCAAmB,KAAKC,SAAxB,CAAxB;AACA,gBAAKD,gBAAL,CAAsBW,YAAtB,GAAqC,KAAKZ,aAA1C;AACD;;AAED,cAAKG,eAAL,GAAuB,iCAAkB,KAAKD,SAAvB,CAAvB;AACA,cAAKlgB,OAAL,CAAa,KAAKmgB,eAAlB;;AAEA,cAAKU,WAAL,CAAiB,KAAKX,SAAtB;AACD;AACF;;;+BAESY,S,EAAW;AACnB,WAAI,KAAKT,OAAT,EAAkB;AAChB,cAAKhgB,UAAL,CAAgB,KAAKggB,OAArB;AACA,cAAKA,OAAL,GAAe,IAAf;AACD;AACD,WAAIS,SAAJ,EAAe;AACb,cAAKT,OAAL,GAAe,mBAAWS,SAAX,CAAf;AACA,cAAK9gB,OAAL,CAAa,KAAKqgB,OAAlB;;AAEA,aAAI,KAAKH,SAAT,EACE,KAAKG,OAAL,CAAaG,WAAb,CAAyB,KAAKN,SAA9B;AACH;AACF;;;oCAEc;AACb,WAAI,KAAKA,SAAT,EAAoB;AAClB,cAAKH,MAAL,GAAc,IAAd;AACA,cAAKgB,cAAL,GAAsB,IAAtB;AACA,cAAKb,SAAL,GAAiB,IAAjB;AACA,cAAKC,eAAL,GAAuB,IAAvB;AACD;AACF;;;;;AAUD;AACA;wCACmBa,K,EAAOC,Y,EAAc;AACtC;AACA;AACA,WAAI,CAACD,MAAME,OAAN,CAAcC,eAAnB,EACE;;AAEF,WAAIC,gBAAgBJ,MAAME,OAAN,CAAcC,eAAd,EAApB;;AANsC;AAAA;AAAA;;AAAA;AAQtC,8BAAyBC,aAAzB,8HAAwC;AAAA,eAA/BC,YAA+B;;AACtC,eAAIC,aAAaN,MAAMO,YAAN,CAAmBF,YAAnB,EAAiCJ,YAAjC,CAAjB;;AAEA,eAAI,CAACK,UAAL,EAAiB;AACf;AACD;;AAED;AACA,eAAIA,WAAWE,UAAf,EAA2B;AACzB,kBAAKrB,eAAL,CAAqBsB,aAArB,CAAmCH,WAAWE,UAA9C;AACD;;AAED,eAAIF,WAAWI,aAAf,EAA8B;AAC5B,iBAAIL,aAAaM,aAAb,IAA8B,MAAlC,EAA0C;AACxC;AACA;AACA;AACA;AACA,oBAAKxB,eAAL,CAAqByB,eAArB,CAAqCN,WAAWI,aAAhD;AACD;;AAED;AACA;;AAEA;AACA,iBAAIG,aAAa,KAAKxf,OAAL,CAAaif,WAAWI,aAAxB,CAAjB;;AAEA,iBAAIG,UAAJ,EAAgB;AACd;AACA,oBAAK1B,eAAL,CAAqB2B,SAArB,CAA+BD,WAAWngB,YAA1C;AACD,cAHD,MAGO;AACL;AACA;AACA,mBAAIqgB,aAAapjB,KAAKwF,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAC,GAAvB,CAAjB;AACAxF,oBAAKkD,aAAL,CAAmBkgB,UAAnB,EAA+BA,UAA/B,EAA2CT,WAAWI,aAAtD;AACA,oBAAKvB,eAAL,CAAqB2B,SAArB,CAA+BC,UAA/B;AACD;AACF;AACF;AA9CqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+CvC;;;iCAEW3X,M,EAAQ;AAClB,WAAIA,UAAU,KAAKyV,cAAnB,EACE;;AAEF,YAAKA,cAAL,GAAsBzV,MAAtB;;AAEA,WAAIA,UAAU,KAAK8V,SAAnB,EAA8B;AAC5B,cAAKH,MAAL,GAAc,6BAAgB,KAAKG,SAArB,CAAd;AACA,cAAKH,MAAL,CAAY/gB,UAAZ,GAAyB,IAAzB;AACA,cAAKgB,OAAL,CAAa,KAAK+f,MAAlB;;AAEA,aAAI,KAAKD,eAAT,EAA0B;AACxB,gBAAKC,MAAL,CAAYU,WAAZ,GAA0B,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAC,IAAV,CAA1B;AACD,UAFD,MAEO;AACL,gBAAKV,MAAL,CAAYU,WAAZ,GAA0B,CAAC,CAAD,EAAI,CAAC,GAAL,EAAU,CAAC,GAAX,CAA1B;AACD;AACD,cAAKV,MAAL,CAAY/b,KAAZ,GAAoB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAApB;AACApE,cAAK8gB,SAAL,CAAe,KAAKX,MAAL,CAAYY,QAA3B,EAAqC,CAAC,IAAtC,EAA4C,GAA5C,EAAiD,GAAjD;AAED,QAbD,MAaO,IAAI,CAACvW,MAAL,EAAa;AAClB,aAAI,KAAK2V,MAAT,EAAiB;AACf,gBAAK1f,UAAL,CAAgB,KAAK0f,MAArB;AACA,gBAAKA,MAAL,GAAc,IAAd;AACD;AACF;AACF;;;mCAEa3V,M,EAAQ;AACpB,YAAK0V,eAAL,GAAuB1V,MAAvB;AACD;;;+BAESwW,Y,EAAc;AACtB,YAAKZ,aAAL,GAAqBY,YAArB;AACA,WAAI,CAAC,KAAKX,gBAAN,IAA0B,KAAKC,SAAnC,EAA8C;AAC5C,cAAKD,gBAAL,GAAwB,mCAAmB,KAAKC,SAAxB,CAAxB;AACD;AACD,WAAI,KAAKD,gBAAT,EAA2B;AACzB,cAAKA,gBAAL,CAAsBW,YAAtB,GAAqCA,YAArC;AACD;AACF;;;0BAEIoB,c,EAAgBC,Q,EAAU3b,G,EAAK;AAClC,WAAI9I,OAAO,0BAAX;AACAA,YAAK2I,iBAAL,GAAyB6b,cAAzB;AACAxkB,YAAK4I,WAAL,GAAmB6b,QAAnB;AACA,WAAI3b,GAAJ,EAAS;AACP9I,cAAK8I,GAAL,GAAWA,GAAX;AACD;;AAED,YAAK4b,aAAL,CAAmB,CAAC1kB,IAAD,CAAnB;AACD;;AAED;;;;iCACY2kB,Q,EAAU5C,I,EAAM;AAC1B,WAAI,CAAC,KAAKW,SAAV,EAAqB;AACnB;AACD;;AAED,WAAIpW,KAAK,KAAKoW,SAAL,CAAepW,EAAxB;AACA,WAAIoX,UAAUiB,SAASjB,OAAvB;AACA;AACA,WAAI1B,QAAQ0B,QAAQkB,SAApB;;AAEA,WAAG,CAACtY,EAAJ,EAAQ;AACN;AACD;;AAEDA,UAAGuY,eAAH,CAAmBvY,GAAGwY,WAAtB,EAAmC9C,MAAM+C,WAAzC;AACAzY,UAAGmT,KAAH,CAASnT,GAAG0Y,gBAAH,GAAsB1Y,GAAG2Y,gBAAlC;;AAEA,WAAI,CAAClD,IAAL,EAAW;AACT;AACD;;AAED,WAAIxP,QAAQ,EAAZ;AArB0B;AAAA;AAAA;;AAAA;AAsB1B,+BAAiBoS,SAASpS,KAA1B,mIAAiC;AAAA,eAAxBvS,IAAwB;;AAC/BuS,iBAAMzP,IAAN,CAAW,IAAIvC,SAAJ,CAAcP,IAAd,EAAoB+hB,IAApB,EAA0BC,KAA1B,CAAX;AACD;AAxByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0B1B,YAAK0C,aAAL,CAAmBnS,KAAnB;AACD;;;mCAEaA,K,EAAO;AACnB,WAAI,CAAC,KAAKmQ,SAAV,EAAqB;AACnB;AACA;AACD;;AAED,YAAKwC,WAAL,CAAiB,KAAKxC,SAAtB,EAAiC,KAAKP,UAAtC,EAAkD5P,KAAlD;AACD;;;kCAEY;AACX,WAAI4S,iBAAiB,KAAKhD,UAA1B;AACA,YAAKA,UAAL,GAAkBiD,YAAYC,GAAZ,EAAlB;AACA,WAAI,KAAK9C,MAAT,EAAiB;AACf,cAAKA,MAAL,CAAY+C,KAAZ;AACD;;AAED,WAAIH,kBAAkB,CAAtB,EAAyB;AACvB,cAAK/C,YAAL,GAAoB,KAAKD,UAAL,GAAkBgD,cAAtC;AACD,QAFD,MAEO;AACL,cAAK/C,YAAL,GAAoB,CAApB;AACD;;AAED,cAAO,KAAKA,YAAZ;AACD;;;gCAEU;AACT,WAAI,KAAKO,eAAL,IAAwB,KAAKC,sBAAjC,EAAyD;AACvD,cAAKD,eAAL,CAAqB4C,KAArB;AACD;;AAED,WAAI,KAAKhD,MAAT,EAAiB;AACf,cAAKA,MAAL,CAAYiD,GAAZ;AACD;AACF;;AAED;;;;iCACYzY,Q,EAAU;AACpB,cAAOzJ,QAAQoG,OAAR,EAAP;AACD;;AAED;;;;iCACYqD,Q,EAAU0Y,S,EAAWlT,K,EAAO;AACtCxF,gBAAS2Y,SAAT,CAAmBnT,KAAnB,EAA0B,IAA1B;AACD;;;yBAxLiB;AAChB,cAAO,KAAKuQ,aAAZ;AACD;;;yBAEmB;AAClB,cAAO,KAAKH,eAAZ;AACD;;;;;;;;;;;;;;;;;;;ACvGH;;AACA;;AACA;;;;;;gfA7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AAWA,KAAMvK,KAAKtI,qBAAX,C,CAAkC;;KAE5B6V,c;;;AACJ,6BAAc;AAAA;;AAAA;;AAGZ,WAAKjZ,KAAL,CAAWkZ,KAAX,GAAmB,IAAnB;AACA,WAAKlZ,KAAL,CAAWoL,cAAX,GAA4BM,GAAGS,SAA/B;AACA,WAAKnM,KAAL,CAAWqL,cAAX,GAA4BK,GAAGyN,GAA/B;AACA,WAAKnZ,KAAL,CAAWoZ,UAAX,GAAwB,KAAxB;AANY;AAOb;;;;yBAEmB;AAClB,cAAO,iBAAP;AACD;;;yBAEmB;AAClB;AAMD;;;yBAEqB;AACpB;AAMD;;;;;;KAGUC,c,WAAAA,c;;;AACX,2BAAYhZ,QAAZ,EAAsB;AAAA;;AAAA;;AAGpB,YAAK2V,SAAL,GAAiB3V,QAAjB;AACA,YAAKyV,aAAL,GAAqB,IAArB;AAJoB;AAKrB;;;;yBAEkB;AACjB,cAAO,KAAKA,aAAZ;AACD,M;uBAEgBY,Y,EAAc;AAC7B,WAAI,KAAKZ,aAAT,EAAwB;AACtB,cAAKwD,qBAAL;AACD;AACD,YAAKxD,aAAL,GAAqBY,YAArB;AACA,WAAI,CAACA,YAAD,IAAiBA,aAAazf,MAAb,KAAwB,CAA7C,EAAgD;AAC9C;AACD;;AAED,WAAIsiB,QAAQ,EAAZ;AACA,WAAIC,UAAU,EAAd;;AAEA;AACA;AACA,WAAMC,cAAc/C,aAAagD,QAAb,CAAsBziB,MAA1C;AACA,YAAK,IAAIZ,IAAI,CAAb,EAAgBA,IAAIojB,WAApB,EAAiCpjB,GAAjC,EAAsC;AACpC,aAAMsjB,QAAQjD,aAAagD,QAAb,CAAsBrjB,CAAtB,CAAd;AACAkjB,eAAMnjB,IAAN,CAAWujB,MAAM3T,CAAjB,EAAoB,CAApB,EAAuB2T,MAAMhI,CAA7B;AACA6H,iBAAQpjB,IAAR,CAAaC,CAAb,EAAgBA,MAAM,CAAN,GAAUojB,cAAc,CAAxB,GAA4BpjB,IAAI,CAAhD,EAAmDojB,WAAnD;AACD;AACD;AACAF,aAAMnjB,IAAN,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB;;AAEA,WAAIgc,gBAAgB,KAAK4D,SAAL,CAAe3D,kBAAf,CAAkC3G,GAAGlB,YAArC,EAAmD,IAAItW,YAAJ,CAAiBqlB,KAAjB,CAAnD,CAApB;AACA,WAAIra,eAAe,KAAK8W,SAAL,CAAe3D,kBAAf,CAAkC3G,GAAGhB,oBAArC,EAA2D,IAAI4H,WAAJ,CAAgBkH,OAAhB,CAA3D,CAAnB;;AAEA,WAAIjH,UAAU,CACZ,kCAAuB,UAAvB,EAAmCH,aAAnC,EAAkD,CAAlD,EAAqDxS,GAAG4S,KAAxD,EAA+D,EAA/D,EAAmE,CAAnE,CADY,CAAd;;AAIA,WAAI7c,YAAY,yBAAc4c,OAAd,EAAuBiH,QAAQviB,MAA/B,CAAhB;AACAtB,iBAAU8c,cAAV,CAAyBvT,YAAzB;;AAEA,WAAIkG,mBAAmB,KAAK4Q,SAAL,CAAepQ,qBAAf,CAAqCjQ,SAArC,EAAgD,IAAIsjB,cAAJ,EAAhD,CAAvB;AACA,YAAKrjB,kBAAL,CAAwBwP,gBAAxB;AACD;;;;;;;;;;;;;;;;;;;AC7FH;;AACA;;AACA;;AACA;;;;;;gfAvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,KAAMsG,KAAKtI,qBAAX,C,CAAkC;;AAElC;AACA;AACA;AACA,KAAMwW,qBAAqB,IAAI9I,UAAJ,CAAe,CAC1C,IAD0C,EACrC,IADqC,EAChC,IADgC,EAC3B,IAD2B,EACtB,IADsB,EACjB,IADiB,EACZ,IADY,EACP,IADO,EACF,IADE,EACG,IADH,EACQ,IADR,EACa,IADb,EACkB,IADlB,EACuB,IADvB,EAC4B,IAD5B,EACiC,IADjC,EAE1C,IAF0C,EAErC,IAFqC,EAEhC,IAFgC,EAE3B,IAF2B,EAEtB,IAFsB,EAEjB,IAFiB,EAEZ,IAFY,EAEP,IAFO,EAEF,IAFE,EAEG,IAFH,EAEQ,IAFR,EAEa,IAFb,EAEkB,IAFlB,EAEuB,IAFvB,EAE4B,IAF5B,EAEiC,IAFjC,EAG1C,IAH0C,EAGrC,IAHqC,EAGhC,IAHgC,EAG3B,IAH2B,EAGtB,IAHsB,EAGjB,IAHiB,EAGZ,IAHY,EAGP,IAHO,EAGF,IAHE,EAGG,IAHH,EAGQ,IAHR,EAGa,IAHb,EAGkB,IAHlB,EAGuB,IAHvB,EAG4B,IAH5B,EAGiC,IAHjC,EAI1C,IAJ0C,EAIrC,IAJqC,EAIhC,IAJgC,EAI3B,IAJ2B,EAItB,IAJsB,EAIjB,IAJiB,EAIZ,IAJY,EAIP,IAJO,EAIF,IAJE,EAIG,IAJH,EAIQ,IAJR,EAIa,IAJb,EAIkB,IAJlB,EAIuB,IAJvB,EAI4B,IAJ5B,EAIiC,IAJjC,EAK1C,IAL0C,EAKrC,IALqC,EAKhC,IALgC,EAK3B,IAL2B,EAKtB,IALsB,EAKjB,IALiB,EAKZ,IALY,EAKP,IALO,EAKF,IALE,EAKG,IALH,EAKQ,IALR,EAKa,IALb,EAKkB,IALlB,EAKuB,IALvB,EAK4B,IAL5B,EAKiC,IALjC,EAM1C,IAN0C,EAMrC,IANqC,EAMhC,IANgC,EAM3B,IAN2B,EAMtB,IANsB,EAMjB,IANiB,EAMZ,IANY,EAMP,IANO,EAMF,IANE,EAMG,IANH,EAMQ,IANR,EAMa,IANb,EAMkB,IANlB,EAMuB,IANvB,EAM4B,IAN5B,EAMiC,IANjC,EAO1C,IAP0C,EAOrC,IAPqC,EAOhC,IAPgC,EAO3B,IAP2B,EAOtB,IAPsB,EAOjB,IAPiB,EAOZ,IAPY,EAOP,IAPO,EAOF,IAPE,EAOG,IAPH,EAOQ,IAPR,EAOa,IAPb,EAOkB,IAPlB,EAOuB,IAPvB,EAO4B,IAP5B,EAOiC,IAPjC,EAQ1C,IAR0C,EAQrC,IARqC,EAQhC,IARgC,EAQ3B,IAR2B,EAQtB,IARsB,EAQjB,IARiB,EAQZ,IARY,EAQP,IARO,EAQF,IARE,EAQG,IARH,EAQQ,IARR,EAQa,IARb,EAQkB,IARlB,EAQuB,IARvB,EAQ4B,IAR5B,EAQiC,IARjC,EAS1C,IAT0C,EASrC,IATqC,EAShC,IATgC,EAS3B,IAT2B,EAStB,IATsB,EASjB,IATiB,EASZ,IATY,EASP,IATO,EASF,IATE,EASG,IATH,EASQ,IATR,EASa,IATb,EASkB,IATlB,EASuB,IATvB,EAS4B,IAT5B,EASiC,IATjC,EAU1C,IAV0C,EAUrC,IAVqC,EAUhC,IAVgC,EAU3B,IAV2B,EAUtB,IAVsB,EAUjB,IAViB,EAUZ,IAVY,EAUP,IAVO,EAUF,IAVE,EAUG,IAVH,EAUQ,IAVR,EAUa,IAVb,EAUkB,IAVlB,EAUuB,IAVvB,EAU4B,IAV5B,EAUiC,IAVjC,EAW1C,IAX0C,EAWrC,IAXqC,EAWhC,IAXgC,EAW3B,IAX2B,EAWtB,IAXsB,EAWjB,IAXiB,EAWZ,IAXY,EAWP,IAXO,EAWF,IAXE,EAWG,IAXH,EAWQ,IAXR,EAWa,IAXb,EAWkB,IAXlB,EAWuB,IAXvB,EAW4B,IAX5B,EAWiC,IAXjC,EAY1C,IAZ0C,EAYrC,IAZqC,EAYhC,IAZgC,EAY3B,IAZ2B,EAYtB,IAZsB,EAYjB,IAZiB,EAYZ,IAZY,EAYP,IAZO,EAYF,IAZE,EAYG,IAZH,EAYQ,IAZR,EAYa,IAZb,EAYkB,IAZlB,EAYuB,IAZvB,EAY4B,IAZ5B,EAYiC,IAZjC,CAAf,CAA3B;;AAeA,KAAM+I,eAAe,GAArB;AACA,KAAMC,iBAAiB,IAAvB;AACA,KAAMC,iBAAiB,KAAvB;AACA,KAAMC,mBAAmB,MAAzB;AACA,KAAMC,sBAAsB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAA5B;;AAEA,KAAMC,gBAAgB,KAAtB;AACA,KAAMC,uBAAuB,KAA7B;AACA,KAAMC,gCAAgC,GAAtC;AACA,KAAMC,gCAAgC,GAAtC;AACA,KAAMC,8BAA8B,IAApC;AACA,KAAMC,8BAA8B,GAApC;AACA,KAAMC,iBAAiB,GAAvB;AACA,KAAMC,kBAAkB,EAAxB;AACA,KAAMC,uBAAuB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAA7B;AACA,KAAMC,8BAA8B,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAApC;;AAEA,KAAMC,wBAAwB;AAC5BC,gBAAa,IADe;AAE5BC,WAAQ,IAFoB;AAG5BC,YAAS;AAHmB,EAA9B;;KAMMC,a;;;AACJ,4BAAc;AAAA;;AAAA;;AAEZ,WAAKtZ,YAAL,GAAoB,uBAAaqK,QAAjC;AACA,WAAK/L,KAAL,CAAWib,SAAX,GAAuB,KAAvB;AACA,WAAKjb,KAAL,CAAWkZ,KAAX,GAAmB,IAAnB;AACA,WAAKlZ,KAAL,CAAWoL,cAAX,GAA4BM,GAAGyN,GAA/B;AACA,WAAKnZ,KAAL,CAAWqL,cAAX,GAA4BK,GAAGyN,GAA/B;AACA,WAAKnZ,KAAL,CAAWkb,UAAX,GAAwB,KAAxB;;AAEA,WAAKC,KAAL,GAAa,MAAKzG,aAAL,CAAmB,SAAnB,CAAb;AACA,WAAKyG,KAAL,CAAWzT,OAAX,GAAqB,yBAAgBkS,kBAAhB,EAAoC,EAApC,EAAwC,CAAxC,CAArB;AACA,WAAKwB,WAAL,GAAmB,MAAKpG,aAAL,CAAmB,YAAnB,EAAiCiF,mBAAjC,CAAnB;AAXY;AAYb;;;;yBAEmB;AAClB,cAAO,aAAP;AACD;;;yBAEmB;AAClB;AAUD;;;yBAEqB;AACpB,+KAO2BD,gBAP3B,sCAQyBD,cARzB;AAkBD;;;;;;AAGH,KAAMsB,qaAAN;;AAiBA,KAAMC,wSAAN;;AAaA;AACA;;KACMC,c;;;AACJ,6BAAc;AAAA;;AAAA;;AAEZ,YAAK7Z,YAAL,GAAoB,uBAAaqK,QAAjC;AACA,YAAK/L,KAAL,CAAWib,SAAX,GAAuB,KAAvB;AACA,YAAKjb,KAAL,CAAWkZ,KAAX,GAAmB,IAAnB;AACA,YAAKlZ,KAAL,CAAWoL,cAAX,GAA4BM,GAAGyN,GAA/B;AACA,YAAKnZ,KAAL,CAAWkb,UAAX,GAAwB,KAAxB;;AAEA,YAAKM,YAAL,GAAoB,OAAKxG,aAAL,CAAmB,aAAnB,EAAkC0F,oBAAlC,CAApB;AARY;AASb;;;;yBAEmB;AAClB,cAAO,cAAP;AACD;;;yBAEmB;AAClB,cAAOW,oBAAP;AACD;;;yBAEqB;AACpB,cAAOC,sBAAP;AACD;;;;;;KAGGG,oB;;;AACJ,mCAAc;AAAA;;AAAA;;AAEZ,YAAK/Z,YAAL,GAAoB,uBAAaqK,QAAjC;AACA,YAAK/L,KAAL,CAAWib,SAAX,GAAuB,KAAvB;AACA,YAAKjb,KAAL,CAAWkZ,KAAX,GAAmB,IAAnB;AACA,YAAKlZ,KAAL,CAAWoL,cAAX,GAA4BM,GAAGyN,GAA/B;AACA,YAAKnZ,KAAL,CAAWwL,UAAX,GAAwBE,GAAGgQ,MAA3B;AACA,YAAK1b,KAAL,CAAWkb,UAAX,GAAwB,KAAxB;;AAEA,YAAKM,YAAL,GAAoB,OAAKxG,aAAL,CAAmB,aAAnB,EAAkC2F,2BAAlC,CAApB;AATY;AAUb;;AAED;;;;;yBACoB;AAClB,cAAO,gBAAP;AACD;;;yBAEmB;AAClB,cAAOU,oBAAP;AACD;;;yBAEqB;AACpB,cAAOC,sBAAP;AACD;;;;;;KAGUK,a,WAAAA,a;;;AACX,0BAAYtb,QAAZ,EAAsB;AAAA;;AAAA;;AAGpB,YAAK2V,SAAL,GAAiB3V,QAAjB;;AAEA,YAAKub,mBAAL,GAA2B,EAA3B;;AAEA,YAAKC,YAAL,GAAoB,EAApB;AACA,YAAKC,gBAAL,GAAwB,IAAxB;AACA,YAAKC,2BAAL,GAAmC,IAAnC;AACA,YAAKC,OAAL,GAAe,IAAf;AACA,YAAKC,QAAL,GAAgB,IAAhB;;AAEA,YAAKC,mBAAL,GAA2B,CAA3B;AACA,YAAKC,cAAL,GAAsB,CAAtB;AACA,YAAKC,eAAL,GAAuB,CAAvB;AAfoB;AAgBrB;;;;uCAEiBC,e,EAAuC;AAAA,WAAtBC,UAAsB,uEAAT,OAAS;;AACvD,YAAKR,gBAAL,GAAwBO,eAAxB;AACA,YAAKN,2BAAL,GAAmCO,UAAnC;AACD;;;mCAEaC,W,EAAa;AACzB,WAAI,CAAC,KAAKT,gBAAV,EAA4B;AACxB;AACH;;AAED,WAAIU,aAAa,IAAjB;AACA,WAAI,KAAKN,mBAAL,GAA2B,KAAKL,YAAL,CAAkB5kB,MAAjD,EAAyD;AACvDulB,sBAAa,KAAKX,YAAL,CAAkB,KAAKK,mBAAvB,CAAb;AACD,QAFD,MAEO;AACLM,sBAAa,KAAKV,gBAAL,CAAsB/lB,KAAtB,EAAb;AACA,cAAKD,OAAL,CAAa0mB,UAAb;AACA,cAAKX,YAAL,CAAkBzlB,IAAlB,CAAuBomB,UAAvB;AACD;AACD,YAAKN,mBAAL,GAA2B,CAAC,KAAKA,mBAAL,GAA2B,CAA5B,IAAiC,KAAKN,mBAAjE;;AAEAY,kBAAW/jB,MAAX,GAAoB8jB,WAApB;AACAC,kBAAW3nB,OAAX,GAAqB,IAArB;AACD;;;qCAEe4nB,c,EAAgB;AAC9B;AACA,WAAI,CAAC,KAAKT,OAAV,EAAmB;AACjB,cAAKA,OAAL,GAAe,CAAC,KAAKU,gBAAL,EAAD,CAAf;AACA,cAAK5mB,OAAL,CAAa,KAAKkmB,OAAL,CAAa,CAAb,CAAb;AACD;;AAED,WAAIb,QAAQ,IAAZ;AACA,WAAI,KAAKgB,cAAL,GAAsB,KAAKH,OAAL,CAAa/kB,MAAvC,EAA+C;AAC7CkkB,iBAAQ,KAAKa,OAAL,CAAa,KAAKG,cAAlB,CAAR;AACD,QAFD,MAEO;AACLhB,iBAAQ,KAAKa,OAAL,CAAa,CAAb,EAAgBjmB,KAAhB,EAAR;AACA,cAAKD,OAAL,CAAaqlB,KAAb;AACA,cAAKa,OAAL,CAAa5lB,IAAb,CAAkB+kB,KAAlB;AACD;AACD,YAAKgB,cAAL,GAAsB,CAAC,KAAKA,cAAL,GAAsB,CAAvB,IAA4B,KAAKP,mBAAvD;;AAEAT,aAAM1iB,MAAN,GAAegkB,cAAf;AACAtB,aAAMtmB,OAAN,GAAgB,IAAhB;AACD;;;+BAESgjB,U,EAAY;AACpB;AACA,WAAI,CAAC,KAAKoE,QAAV,EAAoB;AAClB,cAAKA,QAAL,GAAgB,CAAC,KAAKU,iBAAL,EAAD,CAAhB;AACA,cAAK7mB,OAAL,CAAa,KAAKmmB,QAAL,CAAc,CAAd,CAAb;AACD;;AAED,WAAIW,SAAS,IAAb;AACA,WAAI,KAAKR,eAAL,GAAuB,KAAKH,QAAL,CAAchlB,MAAzC,EAAiD;AAC/C2lB,kBAAS,KAAKX,QAAL,CAAc,KAAKG,eAAnB,CAAT;AACD,QAFD,MAEO;AACLQ,kBAAS,KAAKX,QAAL,CAAc,CAAd,EAAiBlmB,KAAjB,EAAT;AACA,cAAKD,OAAL,CAAa8mB,MAAb;AACA,cAAKX,QAAL,CAAc7lB,IAAd,CAAmBwmB,MAAnB;AACD;AACD,YAAKR,eAAL,GAAuB,CAAC,KAAKA,eAAL,GAAuB,CAAxB,IAA6B,KAAKR,mBAAzD;;AAEAgB,cAAOrG,WAAP,GAAqBsB,UAArB;AACA+E,cAAO/nB,OAAP,GAAiB,IAAjB;AACD;;;2BAEKmc,O,EAAS;AACb,WAAI,CAACA,OAAL,EAAc;AACZA,mBAAU4J,qBAAV;AACD;AACD,WAAI,KAAKiB,YAAL,IAAqB7K,QAAQ6J,WAAjC,EAA8C;AAAA;AAAA;AAAA;;AAAA;AAC5C,gCAAuB,KAAKgB,YAA5B,8HAA0C;AAAA,iBAAjCW,UAAiC;;AACxCA,wBAAW3nB,OAAX,GAAqB,KAArB;AACD;AAH2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI5C,cAAKqnB,mBAAL,GAA2B,CAA3B;AACD;AACD,WAAI,KAAKF,OAAL,IAAgBhL,QAAQ8J,MAA5B,EAAoC;AAAA;AAAA;AAAA;;AAAA;AAClC,iCAAkB,KAAKkB,OAAvB,mIAAgC;AAAA,iBAAvBb,KAAuB;;AAC9BA,mBAAMtmB,OAAN,GAAgB,KAAhB;AACD;AAHiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIlC,cAAKsnB,cAAL,GAAsB,CAAtB;AACD;AACD,WAAI,KAAKF,QAAL,IAAiBjL,QAAQ+J,OAA7B,EAAsC;AAAA;AAAA;AAAA;;AAAA;AACpC,iCAAmB,KAAKkB,QAAxB,mIAAkC;AAAA,iBAAzBW,MAAyB;;AAChCA,oBAAO/nB,OAAP,GAAiB,KAAjB;AACD;AAHmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIpC,cAAKunB,eAAL,GAAuB,CAAvB;AACD;AACF;;;wCAEkB;AACjB,WAAIxc,KAAK,KAAKoW,SAAL,CAAetS,GAAxB;;AAEA,WAAImZ,KAAK/C,iBAAiB,GAA1B;AACA,WAAIgD,KAAKjD,YAAT;;AAEA;AACA,WAAIkD,cAAc;AAClB;AACE,UAFgB,EAEVF,EAFU,EAEN,GAFM,EAEA,GAFA,EAEK,GAFL,EAGhB,GAHgB,EAGVA,EAHU,EAGN,CAACC,EAHK,EAGA,GAHA,EAGK,GAHL,EAIhB,GAJgB,EAIX,CAACD,EAJU,EAIN,GAJM,EAIA,GAJA,EAIK,GAJL,EAKhB,GALgB,EAKX,CAACA,EALU,EAKN,CAACC,EALK,EAKA,GALA,EAKK,GALL,EAOfD,EAPe,EAOX,GAPW,EAON,GAPM,EAOA,GAPA,EAOK,GAPL,EAQfA,EARe,EAQX,GARW,EAQN,CAACC,EARK,EAQA,GARA,EAQK,GARL,EAShB,CAACD,EATe,EASX,GATW,EASN,GATM,EASA,GATA,EASK,GATL,EAUhB,CAACA,EAVe,EAUX,GAVW,EAUN,CAACC,EAVK,EAUA,GAVA,EAUK,GAVL,EAYhB,GAZgB,EAYX,CAACD,EAZU,EAYN,GAZM,EAYA,GAZA,EAYK,GAZL,EAahB,GAbgB,EAaX,CAACA,EAbU,EAaN,CAACC,EAbK,EAaA,GAbA,EAaK,GAbL,EAchB,GAdgB,EAcVD,EAdU,EAcN,GAdM,EAcA,GAdA,EAcK,GAdL,EAehB,GAfgB,EAeVA,EAfU,EAeN,CAACC,EAfK,EAeA,GAfA,EAeK,GAfL,EAiBhB,CAACD,EAjBe,EAiBX,GAjBW,EAiBN,GAjBM,EAiBA,GAjBA,EAiBK,GAjBL,EAkBhB,CAACA,EAlBe,EAkBX,GAlBW,EAkBN,CAACC,EAlBK,EAkBA,GAlBA,EAkBK,GAlBL,EAmBfD,EAnBe,EAmBX,GAnBW,EAmBN,GAnBM,EAmBA,GAnBA,EAmBK,GAnBL,EAoBfA,EApBe,EAoBX,GApBW,EAoBN,CAACC,EApBK,EAoBA,GApBA,EAoBK,GApBL,CAAlB;AAsBA,WAAIE,gBAAgB,CAClB,CADkB,EACf,CADe,EACZ,CADY,EACT,CADS,EACN,CADM,EACH,CADG,EAElB,CAFkB,EAEf,CAFe,EAEZ,CAFY,EAET,CAFS,EAEN,CAFM,EAEH,CAFG,EAGlB,CAHkB,EAGf,CAHe,EAGZ,EAHY,EAGR,CAHQ,EAGL,EAHK,EAGD,EAHC,EAIlB,EAJkB,EAId,EAJc,EAIV,EAJU,EAIN,EAJM,EAIF,EAJE,EAIE,EAJF,CAApB;;AAOA,WAAIC,sBAAsB,KAAKjH,SAAL,CAAe3D,kBAAf,CAAkCzS,GAAG4K,YAArC,EAAmD,IAAItW,YAAJ,CAAiB6oB,WAAjB,CAAnD,CAA1B;AACA,WAAIG,qBAAqB,KAAKlH,SAAL,CAAe3D,kBAAf,CAAkCzS,GAAG8K,oBAArC,EAA2D,IAAI4H,WAAJ,CAAgB0K,aAAhB,CAA3D,CAAzB;;AAEA,WAAIG,oBAAoBH,cAAc/lB,MAAtC;;AAEA,WAAImmB,gBAAgB,CAClB,kCAAuB,UAAvB,EAAmCH,mBAAnC,EAAwD,CAAxD,EAA2Drd,GAAG4S,KAA9D,EAAqE,EAArE,EAAyE,CAAzE,CADkB,EAElB,kCAAuB,YAAvB,EAAqCyK,mBAArC,EAA0D,CAA1D,EAA6Drd,GAAG4S,KAAhE,EAAuE,EAAvE,EAA2E,EAA3E,CAFkB,CAApB;;AAKA,WAAI6K,kBAAkB,yBAAcD,aAAd,EAA6BD,iBAA7B,CAAtB;AACAE,uBAAgB5K,cAAhB,CAA+ByK,kBAA/B;;AAEA,WAAII,iBAAiB,IAAItC,aAAJ,EAArB;;AAEA,WAAIuC,yBAAyB,KAAKvH,SAAL,CAAepQ,qBAAf,CAAqCyX,eAArC,EAAsDC,cAAtD,CAA7B;AACA,WAAI3X,YAAY,gBAAhB;AACAA,iBAAU/P,kBAAV,CAA6B2nB,sBAA7B;AACA,cAAO5X,SAAP;AACD;;;yCAEmB;AAClB,WAAI/F,KAAK,KAAKoW,SAAL,CAAetS,GAAxB;;AAEA,WAAI8Z,KAAKtD,aAAT;;AAEA;AACA;AACA;AACA,WAAIuD,eAAe,EAAnB;AACA,WAAIC,iBAAiB,EAArB;;AAEA,WAAIC,UAAW,MAAM/jB,KAAKgkB,EAAZ,GAAkBnD,eAAhC;;AAEA;AACA,YAAK,IAAIpkB,IAAI,CAAb,EAAgBA,IAAIokB,eAApB,EAAqC,EAAEpkB,CAAvC,EAA0C;AACxC,aAAIwnB,MAAMxnB,IAAIsnB,OAAd;AACA,aAAI3X,IAAIpM,KAAKkkB,GAAL,CAASD,GAAT,CAAR;AACA,aAAI5X,IAAIrM,KAAKmkB,GAAL,CAASF,GAAT,CAAR;AACAJ,sBAAarnB,IAAb,CAAkB4P,IAAIkU,aAAtB,EAAqCjU,IAAIiU,aAAzC,EAAwD,GAAxD,EAA6DM,cAA7D;;AAEA,aAAInkB,IAAI,CAAR,EAAW;AACTqnB,0BAAetnB,IAAf,CAAoB,CAApB,EAAuBC,IAAE,CAAzB,EAA4BA,CAA5B;AACD;AACF;;AAED,WAAI2nB,eAAevD,eAAnB;;AAEA;AACA,YAAK,IAAIpkB,KAAI,CAAb,EAAgBA,KAAIokB,eAApB,EAAqC,EAAEpkB,EAAvC,EAA0C;AACxC,aAAIwnB,OAAMxnB,KAAIsnB,OAAd;AACA,aAAI3X,MAAIpM,KAAKkkB,GAAL,CAASD,IAAT,CAAR;AACA,aAAI5X,KAAIrM,KAAKmkB,GAAL,CAASF,IAAT,CAAR;AACAJ,sBAAarnB,IAAb,CAAkB4P,MAAIkU,aAAtB,EAAqCjU,KAAIiU,aAAzC,EACIE,6BADJ,EACmCE,2BADnC;AAEAmD,sBAAarnB,IAAb,CAAkB4P,MAAImU,oBAAtB,EAA4ClU,KAAIkU,oBAAhD,EACIE,6BADJ,EACmCE,2BADnC;;AAGA,aAAIlkB,KAAI,CAAR,EAAW;AACT,eAAIwd,OAAMmK,eAAgB3nB,KAAI,CAA9B;AACAqnB,0BAAetnB,IAAf,CAAoByd,OAAI,CAAxB,EAA2BA,OAAI,CAA/B,EAAkCA,IAAlC;AACA6J,0BAAetnB,IAAf,CAAoByd,OAAI,CAAxB,EAA2BA,OAAI,CAA/B,EAAkCA,IAAlC;AACD;AACF;;AAED,WAAIA,MAAMmK,eAAgBvD,kBAAkB,CAA5C;AACAiD,sBAAetnB,IAAf,CAAoByd,MAAI,CAAxB,EAA2BA,MAAI,CAA/B,EAAkCmK,YAAlC;AACAN,sBAAetnB,IAAf,CAAoByd,MAAI,CAAxB,EAA2BmK,eAAa,CAAxC,EAA2CA,YAA3C;;AAEA,WAAIC,uBAAuB,KAAKjI,SAAL,CAAe3D,kBAAf,CAAkCzS,GAAG4K,YAArC,EAAmD,IAAItW,YAAJ,CAAiBupB,YAAjB,CAAnD,CAA3B;AACA,WAAIS,sBAAsB,KAAKlI,SAAL,CAAe3D,kBAAf,CAAkCzS,GAAG8K,oBAArC,EAA2D,IAAI4H,WAAJ,CAAgBoL,cAAhB,CAA3D,CAA1B;;AAEA,WAAIS,qBAAqBT,eAAezmB,MAAxC;;AAEA,WAAImnB,iBAAiB,CACnB,kCAAuB,UAAvB,EAAmCH,oBAAnC,EAAyD,CAAzD,EAA4Dre,GAAG4S,KAA/D,EAAsE,EAAtE,EAA0E,CAA1E,CADmB,CAArB;;AAIA,WAAI6L,mBAAmB,yBAAcD,cAAd,EAA8BD,kBAA9B,CAAvB;AACAE,wBAAiB5L,cAAjB,CAAgCyL,mBAAhC;;AAEA,WAAII,kBAAkB,IAAI/C,cAAJ,EAAtB;AACA,WAAIgD,yBAAyB,IAAI9C,oBAAJ,EAA7B;;AAEA;AACA;AACA;AACA,WAAI+C,0BAA0B,KAAKxI,SAAL,CAAepQ,qBAAf,CAAqCyY,gBAArC,EAAuDC,eAAvD,CAA9B;AACA,WAAIG,iCAAiC,KAAKzI,SAAL,CAAepQ,qBAAf,CAAqCyY,gBAArC,EAAuDE,sBAAvD,CAArC;AACA,WAAI5Y,YAAY,gBAAhB;AACAA,iBAAU/P,kBAAV,CAA6B4oB,uBAA7B;AACA7Y,iBAAU/P,kBAAV,CAA6B6oB,8BAA7B;AACA,cAAO9Y,SAAP;AACD;;;;;;;;;;;;;;;;;;;ACpaH;;AACA;;AACA;;AACA;;;;;;gfA3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AASA,KAAM+F,KAAKtI,qBAAX,C,CAAkC;;KAE5Bsb,c;;;AACJ,6BAAc;AAAA;;AAAA;;AAEZ,WAAKhd,YAAL,GAAoB,uBAAaoK,GAAjC;AACA,WAAK9L,KAAL,CAAWwL,UAAX,GAAwBE,GAAGiT,MAA3B;AACA,WAAK3e,KAAL,CAAWkb,UAAX,GAAwB,KAAxB;;AAEA,WAAK0D,KAAL,GAAa,MAAKlK,aAAL,CAAmB,SAAnB,CAAb;;AAEA,WAAKmK,sBAAL,GAA8B,MAAK7J,aAAL,CAAmB,qBAAnB,EACoB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EACC,GADD,EACM,GADN,EACW,GADX,EACgB,GADhB,CADpB,EAE0C,CAF1C,CAA9B;AARY;AAWb;;;;yBAEmB;AAClB,cAAO,QAAP;AACD;;;yBAEmB;AAClB;AAmBD;;;yBAEqB;AACpB;AAOD;;;;;;KAGU8J,M,WAAAA,M;;;AACX,mBAAY9N,OAAZ,EAAqB;AAAA;;AAAA;;AAGnB,YAAK+N,UAAL,GAAkB/N,QAAQ4F,SAA1B;AACA,YAAKoI,aAAL,GAAqBhO,QAAQiO,YAAR,IAAwB,MAA7C;AAJmB;AAKpB;;;;iCAEW5e,Q,EAAU;AACpB,YAAKiZ,qBAAL;;AAEA,WAAI4F,WAAW,EAAf;AACA,WAAI1F,UAAU,EAAd;;AAEA,WAAI2F,eAAe,EAAnB;AACA,WAAIC,eAAe,EAAnB;;AAEA;AACA,YAAK,IAAI/oB,IAAE,CAAX,EAAcA,KAAK8oB,YAAnB,EAAiC,EAAE9oB,CAAnC,EAAsC;AACpC,aAAIgpB,QAAQhpB,IAAIuD,KAAKgkB,EAAT,GAAcuB,YAA1B;AACA,aAAIG,YAAY1lB,KAAKmkB,GAAL,CAASsB,KAAT,CAAhB;AACA,aAAIE,YAAY3lB,KAAKkkB,GAAL,CAASuB,KAAT,CAAhB;;AAEA,aAAIG,eAAenpB,KAAK+oB,eAAa,CAAlB,CAAnB;AACA,aAAIK,eAAe,CAACppB,IAAE,CAAH,KAAS+oB,eAAa,CAAtB,CAAnB;;AAEA,cAAK,IAAIM,IAAE,CAAX,EAAcA,KAAKN,YAAnB,EAAiC,EAAEM,CAAnC,EAAsC;AACpC,eAAIC,MAAMD,IAAI,CAAJ,GAAQ9lB,KAAKgkB,EAAb,GAAkBwB,YAA5B;AACA,eAAIpZ,IAAIpM,KAAKmkB,GAAL,CAAS4B,GAAT,IAAgBL,SAAxB;AACA,eAAIrZ,IAAIsZ,SAAR;AACA,eAAI5N,IAAI,CAAC/X,KAAKkkB,GAAL,CAAS6B,GAAT,CAAD,GAAiBL,SAAzB;AACA,eAAI1N,IAAK8N,IAAIN,YAAb;AACA,eAAIvN,IAAKxb,IAAI8oB,YAAb;;AAEA;AACA;AACAD,oBAAS9oB,IAAT,CAAc4P,CAAd,EAAiBC,CAAjB,EAAoB0L,CAApB,EAAuBC,CAAvB,EAA0BC,CAA1B;;AAEA,eAAIxb,IAAI8oB,YAAJ,IAAoBO,IAAIN,YAA5B,EAA0C;AACxC,iBAAInN,QAAQuN,eAAaE,CAAzB;AACA,iBAAIxN,QAAQuN,eAAaC,CAAzB;;AAEAlG,qBAAQpjB,IAAR,CAAa6b,KAAb,EAAoBC,KAApB,EAA2BD,QAAM,CAAjC,EACaC,KADb,EACoBA,QAAM,CAD1B,EAC6BD,QAAM,CADnC;AAED;AACF;AACF;;AAED,WAAIG,gBAAgB/R,SAASgS,kBAAT,CAA4B3G,GAAGlB,YAA/B,EAA6C,IAAItW,YAAJ,CAAiBgrB,QAAjB,CAA7C,CAApB;AACA,WAAIhgB,eAAemB,SAASgS,kBAAT,CAA4B3G,GAAGhB,oBAA/B,EAAqD,IAAI4H,WAAJ,CAAgBkH,OAAhB,CAArD,CAAnB;;AAEA,WAAIjH,UAAU,CACZ,kCAAuB,UAAvB,EAAmCH,aAAnC,EAAkD,CAAlD,EAAqD1G,GAAG8G,KAAxD,EAA+D,EAA/D,EAAmE,CAAnE,CADY,EAEZ,kCAAuB,YAAvB,EAAqCJ,aAArC,EAAoD,CAApD,EAAuD1G,GAAG8G,KAA1D,EAAiE,EAAjE,EAAqE,EAArE,CAFY,CAAd;;AAKA,WAAI7c,YAAY,yBAAc4c,OAAd,EAAuBiH,QAAQviB,MAA/B,CAAhB;AACAtB,iBAAU8c,cAAV,CAAyBvT,YAAzB;;AAEA,WAAIG,WAAW,IAAIqf,cAAJ,EAAf;AACArf,gBAASuf,KAAT,CAAelX,OAAf,GAAyB,wBAAe,KAAKqX,UAApB,CAAzB;;AAEA,eAAO,KAAKC,aAAZ;AACE,cAAK,MAAL;AACE3f,oBAASwf,sBAAT,CAAgC3oB,KAAhC,GAAwC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EACC,GADD,EACM,GADN,EACW,GADX,EACgB,GADhB,CAAxC;AAEA;AACF,cAAK,iBAAL;AACEmJ,oBAASwf,sBAAT,CAAgC3oB,KAAhC,GAAwC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EACC,GADD,EACM,GADN,EACW,GADX,EACgB,GADhB,CAAxC;AAEA;AACF,cAAK,iBAAL;AACEmJ,oBAASwf,sBAAT,CAAgC3oB,KAAhC,GAAwC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EACC,GADD,EACM,GADN,EACW,GADX,EACgB,GADhB,CAAxC;AAEA;AAZJ;;AAeA,WAAIkP,mBAAmB/E,SAASuF,qBAAT,CAA+BjQ,SAA/B,EAA0C0J,QAA1C,CAAvB;AACA,YAAKzJ,kBAAL,CAAwBwP,gBAAxB;AACD;;;;;;;;;;;;;;;;;;;ACtIH;;AACA;;AACA;;AACA;;;;;;gfA9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AAYA,KAAMwa,WAAW,EAAjB;AACA,KAAMC,UAAU,EAAhB;;KAEMC,a;;;;;;;;;;;yBACgB;AAClB,cAAO,cAAP;AACD;;;yBAEmB;AAClB;AASD;;;yBAEqB;AACpB;AAOD;;;;;;AAGH,UAASC,UAAT,CAAoB1pB,CAApB,EAAuB;AACrB,UAAS,MAAIupB,QAAL,GAAiBvpB,CAAlB,GAAuB,IAA9B;AACD;;AAED,UAAS2pB,MAAT,CAAgB9pB,KAAhB,EAAuB;AACrB,UAAQ0D,KAAKb,GAAL,CAAS7C,KAAT,EAAgB2pB,OAAhB,KAA4B,MAAMA,OAAlC,CAAD,GAA+C,IAAtD;AACD;;AAED,UAASI,QAAT,CAAkB/pB,KAAlB,EAAyB;AACvB,UAAO;AACL+C,QAAGW,KAAKZ,GAAL,CAAS,GAAT,EAAcY,KAAKb,GAAL,CAAS,GAAT,EAAc,MAAO7C,QAAM,EAA3B,CAAd,CADE;AAELwa,QAAG9W,KAAKZ,GAAL,CAAS,GAAT,EAAcY,KAAKb,GAAL,CAAS,GAAT,EAAe,CAAC7C,QAAM,EAAP,KAAY2pB,UAAQ,EAApB,CAAf,CAAd,CAFE;AAGLlP,QAAG/W,KAAKZ,GAAL,CAAS,GAAT,EAAcY,KAAKb,GAAL,CAAS,GAAT,EAAe,CAAC7C,QAAM,EAAP,KAAY2pB,UAAQ,EAApB,CAAf,CAAd;AAHE,IAAP;AAKD;;AAED,KAAIlH,MAAOzlB,OAAOwlB,WAAP,IAAsBA,YAAYC,GAAnC,GAA0CD,YAAYC,GAAZ,CAAgBtR,IAAhB,CAAqBqR,WAArB,CAA1C,GAA8EwH,KAAKvH,GAA7F;;KAEawH,W,WAAAA,W;;;AACX,wBAAY9f,QAAZ,EAAsB;AAAA;;AAAA;;AAGpB,YAAK+f,uBAAL,GAA+B,KAA/B;;AAEA,YAAKpK,SAAL,GAAiB3V,QAAjB;;AAEA,YAAKggB,WAAL,GAAmB1H,KAAnB;AACA,YAAK2H,gBAAL,GAAwB,OAAKD,WAA7B;AACA,YAAKE,uBAAL,GAA+B,OAAKF,WAApC;AACA,YAAKG,OAAL,GAAe,CAAf;AACA,YAAKC,YAAL,GAAoB,CAApB;AACA,YAAKC,QAAL,GAAgB,CAAhB;AACA,YAAKC,SAAL,GAAiB,OAAKP,uBAAL,GAA+B,IAA/B,GAAsC,GAAvD;AACA,YAAKQ,aAAL,GAAqB,CAArB;;AAEA,YAAKC,kBAAL,GAA0B,IAA1B;AACA,YAAKC,qBAAL,GAA6B,IAA7B;AACA,YAAKC,SAAL,GAAiB,IAAjB;AACA,YAAKC,mBAAL,GAA2B,IAA3B;;AAEA,SAAIphB,KAAK,OAAKoW,SAAL,CAAepW,EAAxB;;AAEA,SAAIqhB,YAAY,EAAhB;AACA,SAAIC,cAAc,EAAlB;;AAEA;AACA,UAAK,IAAI7qB,IAAI,CAAb,EAAgBA,IAAIupB,QAApB,EAA8B,EAAEvpB,CAAhC,EAAmC;AACjC;AACA4qB,iBAAU7qB,IAAV,CAAe2pB,WAAW1pB,CAAX,CAAf,EAA8B2pB,OAAO,CAAP,CAA9B,EAAyC,IAAzC,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD;AACAiB,iBAAU7qB,IAAV,CAAe2pB,WAAW1pB,IAAE,CAAb,CAAf,EAAgC2pB,OAAO,CAAP,CAAhC,EAA2C,IAA3C,EAAiD,GAAjD,EAAsD,GAAtD,EAA2D,GAA3D;;AAEA;AACAiB,iBAAU7qB,IAAV,CAAe2pB,WAAW1pB,CAAX,CAAf,EAA8B2pB,OAAO,CAAP,CAA9B,EAAyC,IAAzC,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD;AACAiB,iBAAU7qB,IAAV,CAAe2pB,WAAW1pB,IAAE,CAAb,CAAf,EAAgC2pB,OAAO,CAAP,CAAhC,EAA2C,IAA3C,EAAiD,GAAjD,EAAsD,GAAtD,EAA2D,GAA3D;;AAEA,WAAInM,MAAMxd,IAAI,CAAd;AACA6qB,mBAAY9qB,IAAZ,CAAiByd,GAAjB,EAAsBA,MAAI,CAA1B,EAA6BA,MAAI,CAAjC,EACiBA,MAAI,CADrB,EACwBA,GADxB,EAC6BA,MAAI,CADjC;AAED;;AAED,cAASsN,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,GAA1C,EAA+C5P,CAA/C,EAAkD1Y,CAAlD,EAAqDyX,CAArD,EAAwDC,CAAxD,EAA2D;AACzD,WAAIkD,MAAMoN,UAAUhqB,MAAV,GAAmB,CAA7B;;AAEAgqB,iBAAU7qB,IAAV,CAAegrB,IAAf,EAAqBC,MAArB,EAA6B1P,CAA7B,EAAgC1Y,CAAhC,EAAmCyX,CAAnC,EAAsCC,CAAtC;AACAsQ,iBAAU7qB,IAAV,CAAekrB,KAAf,EAAsBC,GAAtB,EAA2B5P,CAA3B,EAA8B1Y,CAA9B,EAAiCyX,CAAjC,EAAoCC,CAApC;AACAsQ,iBAAU7qB,IAAV,CAAegrB,IAAf,EAAqBG,GAArB,EAA0B5P,CAA1B,EAA6B1Y,CAA7B,EAAgCyX,CAAhC,EAAmCC,CAAnC;AACAsQ,iBAAU7qB,IAAV,CAAekrB,KAAf,EAAsBD,MAAtB,EAA8B1P,CAA9B,EAAiC1Y,CAAjC,EAAoCyX,CAApC,EAAuCC,CAAvC;;AAEAuQ,mBAAY9qB,IAAZ,CAAiByd,GAAjB,EAAsBA,MAAI,CAA1B,EAA6BA,MAAI,CAAjC,EACiBA,GADjB,EACsBA,MAAI,CAD1B,EAC6BA,MAAI,CADjC;AAED;;AAED;AACAsN,iBAAY,CAAC,GAAb,EAAkB,CAAC,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC,EAAuC,GAAvC,EAA4C,GAA5C,EAAiD,KAAjD;;AAEA;AACAA,iBAAY,CAAC,IAAb,EAAmB,CAAC,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C,GAA5C,EAAiD,GAAjD,EAAsD,GAAtD;;AAEA;AACAA,iBAAY,CAAC,IAAb,EAAmBnB,OAAO,EAAP,CAAnB,EAA+B,IAA/B,EAAqCA,OAAO,EAAP,CAArC,EAAiD,KAAjD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE;;AAEA;AACAmB,iBAAY,CAAC,IAAb,EAAmBnB,OAAO,EAAP,CAAnB,EAA+B,IAA/B,EAAqCA,OAAO,EAAP,CAArC,EAAiD,KAAjD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,IAAlE;;AAEA,YAAKa,kBAAL,GAA0B,OAAK7K,SAAL,CAAe3D,kBAAf,CAAkCzS,GAAG4K,YAArC,EAAmD,IAAItW,YAAJ,CAAiB+sB,SAAjB,CAAnD,EAAgFrhB,GAAG4hB,YAAnF,CAA1B;AACA,SAAIC,mBAAmB,OAAKzL,SAAL,CAAe3D,kBAAf,CAAkCzS,GAAG8K,oBAArC,EAA2D,IAAI4H,WAAJ,CAAgB4O,WAAhB,CAA3D,CAAvB;;AAEA,SAAIQ,cAAc,CAChB,kCAAuB,UAAvB,EAAmC,OAAKb,kBAAxC,EAA4D,CAA5D,EAA+DjhB,GAAG4S,KAAlE,EAAyE,EAAzE,EAA6E,CAA7E,CADgB,EAEhB,kCAAuB,SAAvB,EAAkC,OAAKqO,kBAAvC,EAA2D,CAA3D,EAA8DjhB,GAAG4S,KAAjE,EAAwE,EAAxE,EAA4E,EAA5E,CAFgB,CAAlB;;AAKA,SAAImP,gBAAgB,yBAAcD,WAAd,EAA2BR,YAAYjqB,MAAvC,CAApB;AACA0qB,mBAAclP,cAAd,CAA6BgP,gBAA7B;AACAE,mBAAcjP,SAAd,CAAwB,CAAC,CAAC,GAAF,EAAO,CAAC,GAAR,EAAa,GAAb,CAAxB,EAA2C,CAAC,GAAD,EAAM,GAAN,EAAW,KAAX,CAA3C;;AAEA,YAAKoO,qBAAL,GAA6B,OAAK9K,SAAL,CAAepQ,qBAAf,CAAqC+b,aAArC,EAAoD,IAAI7B,aAAJ,EAApD,CAA7B;AACA,YAAKiB,SAAL,GAAiB,gBAAjB;AACA,YAAKA,SAAL,CAAenrB,kBAAf,CAAkC,OAAKkrB,qBAAvC;AACA,YAAKhrB,OAAL,CAAa,OAAKirB,SAAlB;;AAEA,YAAKC,mBAAL,GAA2B,uCAAqB,OAAKhL,SAA1B,CAA3B;AACA;AACA;AACA;AACA,YAAKgL,mBAAL,CAAyBvoB,MAAzB,GAAkC,IAAIvE,YAAJ,CAAiB,CACjD,KADiD,EAC1C,CAD0C,EACvC,CADuC,EACpC,CADoC,EAEjD,CAFiD,EAE9C,KAF8C,EAEvC,CAFuC,EAEpC,CAFoC,EAGjD,CAHiD,EAG9C,CAH8C,EAG3C,CAH2C,EAGxC,CAHwC,EAIjD,CAAC,MAJgD,EAIxC,MAJwC,EAIhC,IAJgC,EAI1B,CAJ0B,CAAjB,CAAlC;AAMA,YAAK4B,OAAL,CAAa,OAAKkrB,mBAAlB;AA5FoB;AA6FrB;;;;6BAWO;AACN,YAAKX,WAAL,GAAmB1H,KAAnB;AACD;;;2BAEK;AACJ,WAAIiJ,OAAOjJ,KAAX;;AAEA,WAAIkJ,YAAY,QAAQD,OAAO,KAAKtB,gBAApB,CAAhB;AACA,YAAKA,gBAAL,GAAwBsB,IAAxB;AACA,YAAKlB,QAAL,GAAgB,KAAKF,OAAL,GAAe5mB,KAAKb,GAAL,CAAS,KAAK2nB,QAAd,EAAwBmB,SAAxB,CAAf,GAAoDA,SAApE;AACA,YAAKrB,OAAL;;AAEA,WAAIoB,OAAO,KAAKrB,uBAAL,GAA+B,KAAKI,SAA/C,EAA0D;AACxD,aAAImB,gBAAgBF,OAAO,KAAKrB,uBAAhC;AACA,cAAKE,YAAL,GAAoB7mB,KAAKmoB,KAAL,CAAW,QAAQD,gBAAgB,KAAKtB,OAA7B,CAAX,CAApB;;AAEA;AACA;AACA,cAAKwB,YAAL,CAAkB,KAAKtB,QAAvB,EAAiC,KAAKD,YAAtC;AACA,aAAI,KAAKwB,6BAAT,EAAwC;AACtCnmB,mBAAQomB,GAAR,mBAA4B,KAAKzB,YAAjC,kBAA0D,KAAKC,QAA/D;AACD;;AAED,cAAKH,uBAAL,GAA+BqB,IAA/B;AACA,cAAKpB,OAAL,GAAe,CAAf;AACA,cAAKE,QAAL,GAAgB,CAAhB;AACD;AACF;;;kCAEYyB,S,EAAWC,U,EAAY;AAClC,WAAIC,QAAQpC,SAASkC,SAAT,CAAZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAIG,KAAKtC,OAAOmC,YAAY,CAAnB,CAAT;AACA,WAAII,KAAKvC,OAAOoC,aAAa,CAApB,CAAT;;AAEA;AACA,WAAII,cAAc,CAChBzC,WAAW,KAAKa,aAAhB,CADgB,EACgB2B,EADhB,EACoB,IADpB,EAC0BF,MAAMppB,CADhC,EACmCopB,MAAM3R,CADzC,EAC4C2R,MAAM1R,CADlD,EAEhBoP,WAAW,KAAKa,aAAL,GAAmB,CAA9B,CAFgB,EAEkB2B,EAFlB,EAEsB,IAFtB,EAE4BF,MAAMppB,CAFlC,EAEqCopB,MAAM3R,CAF3C,EAE8C2R,MAAM1R,CAFpD,EAGhBoP,WAAW,KAAKa,aAAhB,CAHgB,EAGgB0B,EAHhB,EAGoB,IAHpB,EAG0BD,MAAMppB,CAHhC,EAGmCopB,MAAM3R,CAHzC,EAG4C2R,MAAM1R,CAHlD,EAIhBoP,WAAW,KAAKa,aAAL,GAAmB,CAA9B,CAJgB,EAIkB0B,EAJlB,EAIsB,IAJtB,EAI4BD,MAAMppB,CAJlC,EAIqCopB,MAAM3R,CAJ3C,EAI8C2R,MAAM1R,CAJpD,CAAlB;;AAOA;AACA0R,aAAMppB,CAAN,GAAU,GAAV;AACAopB,aAAM3R,CAAN,GAAU,GAAV;AACA2R,aAAM1R,CAAN,GAAU,GAAV;;AAEA,WAAI,KAAKiQ,aAAL,IAAsBhB,WAAW,CAArC,EAAwC;AACtC;AACA;AACA,cAAK5J,SAAL,CAAe7Q,kBAAf,CAAkC,KAAK0b,kBAAvC,EAA2D,IAAI3sB,YAAJ,CAAiBsuB,WAAjB,CAA3D,EAA0F,KAAK5B,aAAL,GAAqB,EAArB,GAA0B,CAApH;AACA4B,uBAAc,CACZzC,WAAW,CAAX,CADY,EACGC,OAAOH,OAAP,CADH,EACoB,IADpB,EAC0BwC,MAAMppB,CADhC,EACmCopB,MAAM3R,CADzC,EAC4C2R,MAAM1R,CADlD,EAEZoP,WAAW,GAAX,CAFY,EAEKC,OAAOH,OAAP,CAFL,EAEsB,IAFtB,EAE4BwC,MAAMppB,CAFlC,EAEqCopB,MAAM3R,CAF3C,EAE8C2R,MAAM1R,CAFpD,EAGZoP,WAAW,CAAX,CAHY,EAGGC,OAAO,CAAP,CAHH,EAGc,IAHd,EAGoBqC,MAAMppB,CAH1B,EAG6BopB,MAAM3R,CAHnC,EAGsC2R,MAAM1R,CAH5C,EAIZoP,WAAW,GAAX,CAJY,EAIKC,OAAO,CAAP,CAJL,EAIgB,IAJhB,EAIsBqC,MAAMppB,CAJ5B,EAI+BopB,MAAM3R,CAJrC,EAIwC2R,MAAM1R,CAJ9C,CAAd;AAMA,cAAKqF,SAAL,CAAe7Q,kBAAf,CAAkC,KAAK0b,kBAAvC,EAA2D,IAAI3sB,YAAJ,CAAiBsuB,WAAjB,CAA3D,EAA0F,CAA1F;AACD,QAXD,MAWO;AACLA,qBAAYpsB,IAAZ,CACE2pB,WAAW,KAAKa,aAAL,GAAmB,CAA9B,CADF,EACoCZ,OAAOH,OAAP,CADpC,EACqD,IADrD,EAC2DwC,MAAMppB,CADjE,EACoEopB,MAAM3R,CAD1E,EAC6E2R,MAAM1R,CADnF,EAEEoP,WAAW,KAAKa,aAAL,GAAmB,IAA9B,CAFF,EAEuCZ,OAAOH,OAAP,CAFvC,EAEwD,IAFxD,EAE8DwC,MAAMppB,CAFpE,EAEuEopB,MAAM3R,CAF7E,EAEgF2R,MAAM1R,CAFtF,EAGEoP,WAAW,KAAKa,aAAL,GAAmB,CAA9B,CAHF,EAGoCZ,OAAO,CAAP,CAHpC,EAG+C,IAH/C,EAGqDqC,MAAMppB,CAH3D,EAG8DopB,MAAM3R,CAHpE,EAGuE2R,MAAM1R,CAH7E,EAIEoP,WAAW,KAAKa,aAAL,GAAmB,IAA9B,CAJF,EAIuCZ,OAAO,CAAP,CAJvC,EAIkD,IAJlD,EAIwDqC,MAAMppB,CAJ9D,EAIiEopB,MAAM3R,CAJvE,EAI0E2R,MAAM1R,CAJhF;AAMA,cAAKqF,SAAL,CAAe7Q,kBAAf,CAAkC,KAAK0b,kBAAvC,EAA2D,IAAI3sB,YAAJ,CAAiBsuB,WAAjB,CAA3D,EAA0F,KAAK5B,aAAL,GAAqB,EAArB,GAA0B,CAApH;AACD;;AAED,YAAKA,aAAL,GAAqB,CAAC,KAAKA,aAAL,GAAmB,CAApB,IAAyBhB,QAA9C;;AAEA,YAAKoB,mBAAL,CAAyByB,IAAzB,GAAmC,KAAKhC,YAAxC;AACD;;;yBArF4B;AAC3B,cAAO,KAAKL,uBAAZ;AACD,M;uBAE0BlqB,K,EAAO;AAChC,YAAKkqB,uBAAL,GAA+BlqB,KAA/B;AACA,YAAKyqB,SAAL,GAAiBzqB,QAAQ,IAAR,GAAe,GAAhC;AACD;;;;;;;;;;;;;;;;;;;AC/JH;;AACA;;AACA;;;;;;gfA3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;AASA,KAAMwsB,eAAe,GAArB;;KAEMC,oB;;;;;;;;;;;yBACgB;AAClB,cAAO,oBAAP;AACD;;;yBAEmB;AAClB;AAMD;;;yBAEqB;AACpB;AAOD;;;;;;KAGUC,gB,WAAAA,gB;;;AACX,6BAAYviB,QAAZ,EAAsB;AAAA;;AAAA;;AAGpB,YAAK2V,SAAL,GAAiB3V,QAAjB;AACA,YAAKwiB,KAAL,GAAa,EAAb;AACA,YAAKC,WAAL,GAAmB,EAAnB;;AAEA,SAAI5D,WAAW,EAAf;AACA,SAAI6D,iBAAiB,EAArB;AACA,SAAIvJ,UAAU,EAAd;;AAEA,SAAMtT,QAAQ,GAAd;AACA,SAAM8c,YAAY,IAAlB;;AAEA,cAASC,aAAT,CAAuBC,EAAvB,EAA2B9B,IAA3B,EAAiCG,GAAjC,EAAsCD,KAAtC,EAA6CD,MAA7C,EAAqD;AACnD,WAAIxN,MAAMqL,SAASjoB,MAAT,GAAkB,CAA5B;AACAioB,gBAAS9oB,IAAT,CACIgrB,IADJ,EACUG,GADV,EAEID,KAFJ,EAEWC,GAFX,EAGID,KAHJ,EAGWD,MAHX,EAIID,IAJJ,EAIUC,MAJV;;AAMA0B,sBAAeG,EAAf,IAAqB,CACjBrP,GADiB,EACZA,MAAI,CADQ,EACLA,MAAI,CADC,EAEjBA,GAFiB,EAEZA,MAAI,CAFQ,EAELA,MAAI,CAFC,CAArB;AAGD;;AAED,SAAIsP,aAAa,EAAjB;AACA,cAASC,eAAT,CAAyBC,CAAzB,EAA4BC,QAA5B,EAAsC;AACpC,WAAIC,YAAY;AACdA,oBAAWF,CADG;AAEdpe,iBAAQuU,QAAQviB,MAAR,GAAiB,CAFX;AAGdusB,gBAAO;AAHO,QAAhB;;AAMA,YAAK,IAAIntB,IAAI,CAAb,EAAgBA,IAAIitB,SAASrsB,MAA7B,EAAqC,EAAEZ,CAAvC,EAA0C;AACxC,aAAIwd,MAAMyP,SAASjtB,CAAT,CAAV;AACA,aAAIotB,UAAUV,eAAelP,GAAf,CAAd;AACA0P,mBAAUC,KAAV,IAAmBC,QAAQxsB,MAA3B;AACAuiB,iBAAQpjB,IAAR,CAAastB,KAAb,CAAmBlK,OAAnB,EAA4BiK,OAA5B;AACD;;AAEDN,kBAAWE,CAAX,IAAgBE,SAAhB;AACD;;AAED;;;;;;;;AAUAN,mBAAc,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAArB,EAAwB/c,KAAxB,EAA+B,IAAE8c,SAAjC;AACAC,mBAAc,CAAd,EAAiB,CAAC,CAAlB,EAAqBD,YAAU,GAA/B,EAAoC9c,KAApC,EAA2C,CAAC8c,SAAD,GAAW,GAAtD;AACAC,mBAAc,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAAC,CAAD,GAAGD,SAAxB,EAAmC9c,KAAnC,EAA0C,CAAC,CAA3C;AACA+c,mBAAc,CAAd,EAAiB,CAAC,CAAlB,EAAqB,CAArB,EAAwB,CAAC,CAAD,GAAGD,SAA3B,EAAsC,CAACA,SAAD,GAAW,GAAjD;AACAC,mBAAc,CAAd,EAAiB/c,QAAM8c,SAAvB,EAAkC,CAAlC,EAAqC9c,KAArC,EAA4C,CAAC8c,SAAD,GAAW,GAAvD;AACAC,mBAAc,CAAd,EAAiB,CAAC,CAAlB,EAAqBD,YAAU,GAA/B,EAAoC,CAAC,CAAD,GAAGA,SAAvC,EAAkD,CAAC,CAAnD;AACAC,mBAAc,CAAd,EAAiB/c,QAAM8c,SAAvB,EAAkCA,YAAU,GAA5C,EAAiD9c,KAAjD,EAAwD,CAAC,CAAzD;;AAGAkd,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,CAArB;AACAA,qBAAgB,GAAhB,EAAqB,EAArB;AACAA,qBAAgB,GAAhB,EAAqB,CAAC,CAAD,CAArB,EAnFoB,CAmFO;;AAE3B,SAAIxjB,KAAK,OAAKoW,SAAL,CAAepW,EAAxB;AACA,SAAIwS,gBAAgB,OAAK4D,SAAL,CAAe3D,kBAAf,CAAkCzS,GAAG4K,YAArC,EAAmD,IAAItW,YAAJ,CAAiBgrB,QAAjB,CAAnD,CAApB;AACA,SAAIhgB,eAAe,OAAK8W,SAAL,CAAe3D,kBAAf,CAAkCzS,GAAG8K,oBAArC,EAA2D,IAAI4H,WAAJ,CAAgBkH,OAAhB,CAA3D,CAAnB;;AAEA,SAAImK,iBAAiB,CACnB,kCAAuB,UAAvB,EAAmCvR,aAAnC,EAAkD,CAAlD,EAAqDxS,GAAG4S,KAAxD,EAA+D,CAA/D,EAAkE,CAAlE,CADmB,CAArB;;AAIA,SAAI7c,YAAY,yBAAcguB,cAAd,EAA8BnK,QAAQviB,MAAtC,CAAhB;AACAtB,eAAU8c,cAAV,CAAyBvT,YAAzB;;AAEA,SAAIG,WAAW,IAAIsjB,oBAAJ,EAAf;;AAEA,YAAKiB,gBAAL,GAAwB,EAAxB;AACA,UAAK,IAAIC,IAAT,IAAiBV,UAAjB,EAA6B;AAC3B,WAAIW,WAAWX,WAAWU,IAAX,CAAf;AACAluB,iBAAUyI,aAAV,GAA0B0lB,SAASN,KAAnC;AACA7tB,iBAAUwJ,iBAAV,GAA8B2kB,SAAS7e,MAAvC;AACA,cAAK2e,gBAAL,CAAsBC,IAAtB,IAA8B,OAAK7N,SAAL,CAAepQ,qBAAf,CAAqCjQ,SAArC,EAAgD0J,QAAhD,CAA9B;AACD;AAxGmB;AAyGrB;;;;yBAEU;AACT,cAAO,KAAKwjB,KAAZ;AACD,M;uBAEQ3sB,K,EAAO;AACd,YAAK2sB,KAAL,GAAa3sB,KAAb;;AAEA,WAAIG,IAAI,CAAR;AACA,WAAI0tB,iBAAiB,IAArB;AACA,cAAO1tB,IAAIH,MAAMe,MAAjB,EAAyB,EAAEZ,CAA3B,EAA8B;AAC5B,aAAIH,MAAMG,CAAN,KAAY,KAAKutB,gBAArB,EAAuC;AACrCG,4BAAiB,KAAKH,gBAAL,CAAsB1tB,MAAMG,CAAN,CAAtB,CAAjB;AACD,UAFD,MAEO;AACL0tB,4BAAiB,KAAKH,gBAAL,CAAsB,GAAtB,CAAjB;AACD;;AAED,aAAI,KAAKd,WAAL,CAAiB7rB,MAAjB,IAA2BZ,CAA/B,EAAkC;AAChC,eAAI0B,OAAO,gBAAX;AACAA,gBAAKnC,kBAAL,CAAwBmuB,cAAxB;AACA,eAAI9e,SAAS5O,IAAIqsB,YAAjB;AACA3qB,gBAAKwe,WAAL,GAAmB,CAACtR,MAAD,EAAS,CAAT,EAAY,CAAZ,CAAnB;AACA,gBAAK6d,WAAL,CAAiB1sB,IAAjB,CAAsB2B,IAAtB;AACA,gBAAKjC,OAAL,CAAaiC,IAAb;AACD,UAPD,MAOO;AACL;AACA;AACA;AACA,gBAAK+qB,WAAL,CAAiBzsB,CAAjB,EAAoBijB,qBAApB;AACA,gBAAKwJ,WAAL,CAAiBzsB,CAAjB,EAAoBT,kBAApB,CAAuCmuB,cAAvC;AACA,gBAAKjB,WAAL,CAAiBzsB,CAAjB,EAAoBxB,OAApB,GAA8B,IAA9B;AACD;AACF;;AAED;AACA,cAAOwB,IAAI,KAAKysB,WAAL,CAAiB7rB,MAA5B,EAAoC,EAAEZ,CAAtC,EAAyC;AACvC,cAAKysB,WAAL,CAAiBzsB,CAAjB,EAAoBxB,OAApB,GAA8B,KAA9B;AACD;AACF;;;;;;;;;;;;;;;;;sjBCzMH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;;AACA;;AACA;;;;AAEA,KAAM6W,KAAKtI,qBAAX,C,CAAkC;;AAElC,KAAM4gB,YAAY,UAAlB;AACA,KAAMC,aAAa;AACjBC,SAAM,UADW;AAEjBC,QAAK;AAFY,EAAnB;;AAKA,UAASC,aAAT,CAAwBC,GAAxB,EAA6B;AAC3B,OAAIC,WAAW,IAAIzpB,MAAJ,CAAW,MAAI3H,OAAOqxB,QAAP,CAAgBC,QAA/B,EAAyC,GAAzC,CAAf;AACA,UAAO,CAAC,CAACH,IAAIpa,KAAJ,CAAUqa,QAAV,CAAT;AACD;;AAED,UAASG,SAAT,CAAmBJ,GAAnB,EAAwB;AACtB,OAAIK,YAAY,QAAhB;AACA,UAAO,CAAC,CAACL,IAAIpa,KAAJ,CAAUya,SAAV,CAAT;AACD;;AAED,UAASC,UAAT,CAAoBN,GAApB,EAAyBO,OAAzB,EAAkC;AAChC,OAAIR,cAAcC,GAAd,KAAsBI,UAAUJ,GAAV,CAA1B,EAA0C;AACtC,YAAOA,GAAP;AACH;AACD,UAAOO,UAAUP,GAAjB;AACD;;AAED,UAASQ,iBAAT,CAA2BzU,IAA3B,EAAiC;AAC/B,WAAQA,IAAR;AACE,UAAK,QAAL;AAAe,cAAO,CAAP;AACf,UAAK,MAAL;AAAa,cAAO,CAAP;AACb,UAAK,MAAL;AAAa,cAAO,CAAP;AACb,UAAK,MAAL;AAAa,cAAO,CAAP;AACb;AAAS,cAAO,CAAP;AALX;AAOD;;AAED;;;;;KAKa0U,W,WAAAA,W;AACX,wBAAYzkB,QAAZ,EAAsB;AAAA;;AACpB,UAAKA,QAAL,GAAgBA,QAAhB;AACA,UAAKqD,GAAL,GAAWrD,SAASqD,GAApB;AACD;;;;iCAEWkM,G,EAAK;AAAA;;AACf,cAAOmV,MAAMnV,GAAN,EACF9Y,IADE,CACG,UAACkuB,QAAD,EAAc;AAClB,aAAI3uB,IAAIuZ,IAAIqV,WAAJ,CAAgB,GAAhB,CAAR;AACA,aAAIL,UAAWvuB,MAAM,CAAP,GAAYuZ,IAAIsV,SAAJ,CAAc,CAAd,EAAiB7uB,IAAI,CAArB,CAAZ,GAAsC,EAApD;;AAEA,aAAIuZ,IAAIuV,QAAJ,CAAa,OAAb,CAAJ,EAA2B;AACzB,kBAAOH,SAASI,IAAT,GAAgBtuB,IAAhB,CAAqB,UAACsuB,IAAD,EAAU;AACpC,oBAAO,MAAKC,YAAL,CAAkBD,IAAlB,EAAwBR,OAAxB,CAAP;AACD,YAFM,CAAP;AAGD,UAJD,MAIO,IAAIhV,IAAIuV,QAAJ,CAAa,MAAb,CAAJ,EAA0B;AAC/B,kBAAOH,SAASM,WAAT,GAAuBxuB,IAAvB,CAA4B,UAACwuB,WAAD,EAAiB;AAClD,oBAAO,MAAKC,cAAL,CAAoBD,WAApB,EAAiCV,OAAjC,CAAP;AACD,YAFM,CAAP;AAGD,UAJM,MAIA;AACL,iBAAM,IAAI/c,KAAJ,CAAU,6BAAV,CAAN;AACD;AACF,QAhBE,CAAP;AAiBD;;;oCAEcyd,W,EAAaV,O,EAAS;AACnC,WAAIY,aAAa,IAAIC,QAAJ,CAAaH,WAAb,EAA0B,CAA1B,EAA6B,EAA7B,CAAjB;AACA,WAAII,QAAQF,WAAWG,SAAX,CAAqB,CAArB,EAAwB,IAAxB,CAAZ;AACA,WAAIC,UAAUJ,WAAWG,SAAX,CAAqB,CAArB,EAAwB,IAAxB,CAAd;AACA,WAAI1uB,SAASuuB,WAAWG,SAAX,CAAqB,CAArB,EAAwB,IAAxB,CAAb;;AAEA,WAAID,SAAS1B,SAAb,EAAwB;AACtB,eAAM,IAAInc,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,WAAI+d,WAAW,CAAf,EAAkB;AAChB,eAAM,IAAI/d,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,WAAIge,SAAS,EAAb;AACA,WAAIC,cAAc,EAAlB;AACA,cAAOA,cAAc7uB,MAArB,EAA6B;AAC3B,aAAI8uB,kBAAkB,IAAIN,QAAJ,CAAaH,WAAb,EAA0BQ,WAA1B,EAAuC,CAAvC,CAAtB;AACA,aAAIE,cAAcD,gBAAgBJ,SAAhB,CAA0B,CAA1B,EAA6B,IAA7B,CAAlB;AACA,aAAIM,YAAYF,gBAAgBJ,SAAhB,CAA0B,CAA1B,EAA6B,IAA7B,CAAhB;AACAE,gBAAOI,SAAP,IAAoBX,YAAYY,KAAZ,CAAkBJ,cAAc,CAAhC,EAAmCA,cAAc,CAAd,GAAkBE,WAArD,CAApB;AACAF,wBAAeE,cAAc,CAA7B;AACD;;AAED,WAAI,CAACH,OAAO5B,WAAWC,IAAlB,CAAL,EAA8B;AAC5B,eAAM,IAAIrc,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,WAAIse,UAAU,IAAIC,WAAJ,CAAgB,OAAhB,CAAd;AACA,WAAIC,aAAaF,QAAQG,MAAR,CAAeT,OAAO5B,WAAWC,IAAlB,CAAf,CAAjB;AACA,WAAIkB,OAAOlB,KAAKqC,KAAL,CAAWF,UAAX,CAAX;AACA,cAAO,KAAKhB,YAAL,CAAkBD,IAAlB,EAAwBR,OAAxB,EAAiCiB,OAAO5B,WAAWE,GAAlB,CAAjC,CAAP;AACD;;;kCAEYiB,I,EAAMR,O,EAAS4B,W,EAAa;AACvC,WAAI,CAACpB,KAAKqB,KAAV,EAAiB;AACf,eAAM,IAAI5e,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED,WAAIud,KAAKqB,KAAL,CAAWC,UAAX,IAAyB,KAAzB,IAAkCtB,KAAKqB,KAAL,CAAWb,OAAX,IAAsB,KAA5D,EAAmE;AACjE,eAAM,IAAI/d,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,WAAI8e,UAAU,EAAd;AACA,WAAIH,WAAJ,EAAiB;AACfG,iBAAQ,CAAR,IAAa,IAAIC,aAAJ,CAAkB,EAAlB,EAAsBhC,OAAtB,EAA+B4B,WAA/B,CAAb;AACD,QAFD,MAEO;AAAA;AAAA;AAAA;;AAAA;AACL,gCAAmBpB,KAAKuB,OAAxB,8HAAiC;AAAA,iBAAxBjqB,MAAwB;;AAC/BiqB,qBAAQvwB,IAAR,CAAa,IAAIwwB,aAAJ,CAAkBlqB,MAAlB,EAA0BkoB,OAA1B,CAAb;AACD;AAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIN;;AAED,WAAIiC,cAAc,EAAlB;AAlBuC;AAAA;AAAA;;AAAA;AAmBvC,+BAAuBzB,KAAKyB,WAA5B,mIAAyC;AAAA,eAAhCC,UAAgC;;AACvCD,uBAAYzwB,IAAZ,CAAiB,IAAI2wB,eAAJ,CAAoBD,UAApB,EAAgCH,OAAhC,CAAjB;AACD;AArBsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBvC,WAAIK,SAAS,EAAb;AACA,WAAI5B,KAAK4B,MAAT,EAAiB;AAAA;AAAA;AAAA;;AAAA;AACf,iCAAkB5B,KAAK4B,MAAvB,mIAA+B;AAAA,iBAAtBpI,KAAsB;;AAC7BoI,oBAAO5wB,IAAP,CAAY,IAAIwwB,aAAJ,CAAkBhI,KAAlB,EAAyBgG,OAAzB,CAAZ;AACD;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhB;;AAED,WAAIqC,WAAW,EAAf;AACA,WAAI7B,KAAK6B,QAAT,EAAmB;AACjB,aAAI5wB,IAAI,CAAR;AADiB;AAAA;AAAA;;AAAA;AAEjB,iCAAoB+uB,KAAK6B,QAAzB,mIAAmC;AAAA,iBAA1Bvf,OAA0B;;AACjC,iBAAIkX,SAAQoI,OAAOtf,QAAQwf,MAAf,CAAZ;AACA,iBAAIC,YAAYvI,OAAMlX,OAAN,CAAcmf,WAAd,CAAhB;AACA,iBAAGnf,QAAQ3F,OAAX,EAAoB;AAClB,mBAAIA,UAAUA,QAAQ2F,QAAQ3F,OAAhB,CAAd;AACAolB,yBAAUplB,OAAV,CAAkB2G,UAAlB,GAA+B3G,QAAQqlB,SAAvC;AACAD,yBAAUplB,OAAV,CAAkBoH,UAAlB,GAA+BpH,QAAQslB,SAAvC;AACAF,yBAAUplB,OAAV,CAAkB8G,MAAlB,GAA2B9G,QAAQulB,KAAnC;AACAH,yBAAUplB,OAAV,CAAkBiH,MAAlB,GAA2BjH,QAAQwlB,KAAnC;AACD;AACDN,sBAAS7wB,IAAT,CAAc+wB,SAAd;AACD;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAclB;;AAED,gBAASK,UAAT,CAAoBC,WAApB,EAAiC;AAC/B,aAAI,CAACA,WAAL,EAAkB;AAChB,kBAAO,IAAP;AACD;AACD,gBAAOR,SAASQ,YAAYzwB,KAArB,CAAP;AACD;;AAED,WAAI0wB,YAAY,EAAhB;AACA,WAAItC,KAAKsC,SAAT,EAAoB;AAAA;AAAA;AAAA;;AAAA;AAClB,iCAAqBtC,KAAKsC,SAA1B,mIAAqC;AAAA,iBAA5BroB,QAA4B;;AACnC,iBAAIsoB,aAAa,sBAAjB;AACA,iBAAIC,MAAMvoB,SAASwoB,oBAAT,IAAiC,EAA3C;;AAEAF,wBAAW5S,iBAAX,CAA6B7e,KAA7B,GAAqC0xB,IAAIE,eAAJ,IAAuB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA5D;AACAH,wBAAWlT,UAAX,CAAsB/M,OAAtB,GAAgC8f,WAAWI,IAAIG,gBAAf,CAAhC;AACAJ,wBAAW1S,yBAAX,CAAqC/e,KAArC,GAA6C,CACzC0xB,IAAII,cAAJ,IAAsB,GADmB,EAEzCJ,IAAIK,eAAJ,IAAuB,GAFkB,CAA7C;AAIAN,wBAAWhT,kBAAX,CAA8BjN,OAA9B,GAAwC8f,WAAWI,IAAIM,wBAAf,CAAxC;AACAP,wBAAW/S,MAAX,CAAkBlN,OAAlB,GAA4B8f,WAAWpC,KAAK+C,aAAhB,CAA5B;AACAR,wBAAW9S,SAAX,CAAqBnN,OAArB,GAA+B8f,WAAWpC,KAAKgD,gBAAhB,CAA/B;AACAT,wBAAWzS,kBAAX,CAA8Bhf,KAA9B,GAAuCkvB,KAAKgD,gBAAL,IAAyBhD,KAAKgD,gBAAL,CAAsBC,QAAhD,GAA4DjD,KAAKgD,gBAAL,CAAsBC,QAAlF,GAA6F,GAAnI;AACAV,wBAAWxS,eAAX,CAA2Bjf,KAA3B,GAAmCmJ,SAASipB,cAAT,IAA2B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA9D;AACAX,wBAAW7S,QAAX,CAAoBpN,OAApB,GAA8B8f,WAAWpC,KAAKmD,eAAhB,CAA9B;AACA,iBAAI,CAACZ,WAAW7S,QAAX,CAAoBpN,OAArB,IAAgC0d,KAAKkD,cAAzC,EAAyD;AACvDX,0BAAW7S,QAAX,CAAoBpN,OAApB,GAA8B,0BAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,CAA9B;AACD;;AAED,qBAAOrI,SAASmpB,SAAhB;AACE,oBAAK,OAAL;AACEb,4BAAW3nB,KAAX,CAAiBkZ,KAAjB,GAAyB,IAAzB;AACA;AACF,oBAAK,MAAL;AACE;AACAyO,4BAAW3nB,KAAX,CAAiBkZ,KAAjB,GAAyB,IAAzB;AACA;AACF;AAAS;AACPyO,4BAAW3nB,KAAX,CAAiBkZ,KAAjB,GAAyB,KAAzB;AATJ;;AAYA;AACA;AACAyO,wBAAW3nB,KAAX,CAAiBib,SAAjB,GAA6B,CAAE5b,SAASopB,WAAxC;;AAEAf,uBAAUtxB,IAAV,CAAeuxB,UAAf;AACD;AAtCiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCnB;;AAED,WAAIe,YAAYtD,KAAKsD,SAArB;;AAEA,WAAIC,SAAS,EAAb;AAlGuC;AAAA;AAAA;;AAAA;AAmGvC,+BAAiBvD,KAAKuD,MAAtB,mIAA8B;AAAA,eAArBC,IAAqB;;AAC5B,eAAIC,SAAS,IAAIC,SAAJ,EAAb;AACAH,kBAAOvyB,IAAP,CAAYyyB,MAAZ;;AAF4B;AAAA;AAAA;;AAAA;AAI5B,mCAAsBD,KAAKG,UAA3B,mIAAuC;AAAA,mBAA9BpzB,SAA8B;;AACrC,mBAAI0J,YAAW,IAAf;AACA,mBAAI,cAAc1J,SAAlB,EAA6B;AAC3B0J,6BAAWqoB,UAAU/xB,UAAU0J,QAApB,CAAX;AACD,gBAFD,MAEO;AACL;AACAA,6BAAW,IAAIqN,QAAJ,EAAX;AACD;;AAED,mBAAIhO,aAAa,EAAjB;AACA,mBAAIN,gBAAgB,CAApB;AACA;;;AAGA,mBAAIrF,MAAM,IAAV;AACA,mBAAIC,MAAM,IAAV;;AAEA,oBAAK,IAAItE,IAAT,IAAiBiB,UAAU+I,UAA3B,EAAuC;AACrC,qBAAIsqB,WAAWN,UAAU/yB,UAAU+I,UAAV,CAAqBhK,IAArB,CAAV,CAAf;AACA,qBAAIoyB,cAAaD,YAAYmC,SAASlC,UAArB,CAAjB;AACA1oB,iCAAgB4qB,SAASxF,KAAzB;;AAEA,qBAAIyF,cAAc,kCAChBv0B,IADgB,EAEhBoyB,YAAWoC,YAAX,CAAwB,KAAK7oB,QAA7B,EAAuCqL,GAAGlB,YAA1C,CAFgB,EAGhBqa,kBAAkBmE,SAAS5Y,IAA3B,CAHgB,EAIhB4Y,SAASG,aAJO,EAKhBrC,YAAWsC,UAAX,IAAyB,CALT,EAMhBJ,SAASK,UAAT,IAAuB,CANP,CAAlB;AAQAJ,6BAAYprB,UAAZ,GAAyBmrB,SAASnrB,UAAT,IAAuB,KAAhD;;AAEA,qBAAInJ,QAAQ,UAAZ,EAAwB;AACtBqE,yBAAMiwB,SAASjwB,GAAf;AACAC,yBAAMgwB,SAAShwB,GAAf;AACD;;AAED0F,4BAAWtI,IAAX,CAAgB6yB,WAAhB;AACD;;AAED,mBAAIK,cAAc,yBAAc5qB,UAAd,EAA0BN,aAA1B,EAAyCzI,UAAUuI,IAAnD,CAAlB;;AAEA,mBAAI,aAAavI,SAAjB,EAA4B;AAC1B,qBAAIqzB,YAAWN,UAAU/yB,UAAU6jB,OAApB,CAAf;AACA,qBAAIsN,eAAaD,YAAYmC,UAASlC,UAArB,CAAjB;;AAEAwC,6BAAY7W,cAAZ,CACEqU,aAAWoC,YAAX,CAAwB,KAAK7oB,QAA7B,EAAuCqL,GAAGhB,oBAA1C,CADF,EAEEse,UAASK,UAAT,IAAuB,CAFzB,EAGEL,UAASG,aAHX;AAKAG,6BAAYC,SAAZ,GAAwBP,UAASG,aAAjC;AACAG,6BAAYE,eAAZ,GAA8BR,UAASK,UAAT,IAAuB,CAArD;AACAC,6BAAYlrB,aAAZ,GAA4B4qB,UAASxF,KAArC;AACD;;AAED,mBAAIzqB,OAAOC,GAAX,EAAgB;AACdswB,6BAAY5W,SAAZ,CAAsB3Z,GAAtB,EAA2BC,GAA3B;AACD;;AAED;AACA;AACA6vB,sBAAOE,UAAP,CAAkB3yB,IAAlB,CACI,KAAKiK,QAAL,CAAcuF,qBAAd,CAAoC0jB,WAApC,EAAiDjqB,SAAjD,CADJ;AAED;AApE2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqE7B;AAxKsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0KvC,WAAIoqB,aAAa,iBAAjB;AACA,WAAIC,QAAQtE,KAAKuE,MAAL,CAAYvE,KAAKsE,KAAjB,CAAZ;AA3KuC;AAAA;AAAA;;AAAA;AA4KvC,+BAAmBA,MAAME,KAAzB,mIAAgC;AAAA,eAAvBC,MAAuB;;AAC9B,eAAI9xB,OAAOqtB,KAAKwE,KAAL,CAAWC,MAAX,CAAX;AACAJ,sBAAW3zB,OAAX,CACI,KAAKg0B,YAAL,CAAkB/xB,IAAlB,EAAwBqtB,KAAKwE,KAA7B,EAAoCjB,MAApC,CADJ;AAED;AAhLsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkLvC,cAAOc,UAAP;AACD;;;kCAEY1xB,I,EAAM6xB,K,EAAOjB,M,EAAQ;AAChC,WAAIoB,SAAS,iBAAb;AACAA,cAAOr1B,IAAP,GAAcqD,KAAKrD,IAAnB;;AAEA,WAAI,UAAUqD,IAAd,EAAoB;AAClB,aAAI6wB,OAAOD,OAAO5wB,KAAK6wB,IAAZ,CAAX;AADkB;AAAA;AAAA;;AAAA;AAElB,iCAAsBA,KAAKG,UAA3B,mIAAuC;AAAA,iBAA9BpzB,SAA8B;;AACrCo0B,oBAAOn0B,kBAAP,CAA0BD,SAA1B;AACD;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKnB;;AAED,WAAIoC,KAAKU,MAAT,EAAiB;AACfsxB,gBAAOtxB,MAAP,GAAgB,IAAIvE,YAAJ,CAAiB6D,KAAKU,MAAtB,CAAhB;AACD,QAFD,MAEO,IAAIV,KAAKwe,WAAL,IAAoBxe,KAAK0e,QAAzB,IAAqC1e,KAAK+B,KAA9C,EAAqD;AAC1D,aAAI/B,KAAKwe,WAAT,EACEwT,OAAOxT,WAAP,GAAqB,IAAIriB,YAAJ,CAAiB6D,KAAKwe,WAAtB,CAArB;;AAEF,aAAIxe,KAAK0e,QAAT,EACEsT,OAAOtT,QAAP,GAAkB,IAAIviB,YAAJ,CAAiB6D,KAAK0e,QAAtB,CAAlB;;AAEF,aAAI1e,KAAK+B,KAAT,EACEiwB,OAAOjwB,KAAP,GAAe,IAAI5F,YAAJ,CAAiB6D,KAAK+B,KAAtB,CAAf;AACH;;AAED,WAAI/B,KAAKpD,QAAT,EAAmB;AAAA;AAAA;AAAA;;AAAA;AACjB,kCAAmBoD,KAAKpD,QAAxB,wIAAkC;AAAA,iBAAzBk1B,MAAyB;;AAChC,iBAAI9xB,QAAO6xB,MAAMC,MAAN,CAAX;AACAE,oBAAOj0B,OAAP,CAAe,KAAKg0B,YAAL,CAAkB/xB,KAAlB,EAAwB6xB,KAAxB,EAA+BjB,MAA/B,CAAf;AACD;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKlB;;AAED,cAAOoB,MAAP;AACD;;;;;;KAGGjB,S,GACJ,qBAAc;AAAA;;AACZ,QAAKC,UAAL,GAAkB,EAAlB;AACD,E;;KAGGhC,e;AACJ,4BAAY3B,IAAZ,EAAkBuB,OAAlB,EAA2B;AAAA;;AACzB,UAAKjqB,MAAL,GAAciqB,QAAQvB,KAAK1oB,MAAb,CAAd;AACA,UAAK2sB,UAAL,GAAkBjE,KAAKiE,UAAL,IAAmB,CAArC;AACA,UAAKrkB,UAAL,GAAkBogB,KAAKpgB,UAAL,IAAmB,IAArC;AACA,UAAKokB,UAAL,GAAkBhE,KAAKgE,UAAvB;;AAEA,UAAKY,YAAL,GAAoB,IAApB;AACA,UAAKC,aAAL,GAAqB,IAArB;AACD;;;;gCAEU;AAAA;;AACT,WAAI,CAAC,KAAKD,YAAV,EAAwB;AACtB,cAAKA,YAAL,GAAoB,KAAKttB,MAAL,CAAY4oB,WAAZ,GAA0BxuB,IAA1B,CAA+B,UAACwuB,WAAD,EAAiB;AAClE,kBAAO,IAAIG,QAAJ,CAAaH,WAAb,EAA0B,OAAK+D,UAA/B,EAA2C,OAAKrkB,UAAhD,CAAP;AACD,UAFmB,CAApB;AAGD;AACD,cAAO,KAAKglB,YAAZ;AACD;;;kCAEY3pB,Q,EAAU7D,M,EAAQ;AAC7B,WAAI,CAAC,KAAKytB,aAAV,EAAyB;AACvB,cAAKA,aAAL,GAAqB5pB,SAASgS,kBAAT,CAA4B7V,MAA5B,EAAoC,KAAK0tB,QAAL,EAApC,CAArB;AACD;AACD,cAAO,KAAKD,aAAZ;AACD;;;;;;KAGGrD,a;AACJ,0BAAYxB,IAAZ,EAAkBR,OAAlB,EAA2BU,WAA3B,EAAwC;AAAA;;AACtC,UAAKF,IAAL,GAAYA,IAAZ;AACA,UAAKR,OAAL,GAAeA,OAAf;;AAEA,UAAKuF,YAAL,GAAoB,IAApB;AACA,UAAK3pB,QAAL,GAAgB,IAAhB;AACA,SAAI8kB,WAAJ,EAAiB;AACf,YAAK6E,YAAL,GAAoBvzB,QAAQoG,OAAR,CAAgBsoB,WAAhB,CAApB;AACD;AACF;;;;mCAEa;AACZ,WAAI,CAAC,KAAK6E,YAAV,EAAwB;AACtB,aAAI1F,UAAU,KAAKW,IAAL,CAAUf,GAApB,CAAJ,EAA8B;AAC5B,eAAI+F,eAAe,KAAKhF,IAAL,CAAUf,GAAV,CAAcvV,OAAd,CAAsB,uCAAtB,EAA+D,EAA/D,CAAnB;AACA,eAAIub,cAAcvZ,WAAWwZ,IAAX,CAAgBC,KAAKH,YAAL,CAAhB,EAAoC;AAAA,oBAAK/G,EAAEmH,UAAF,CAAa,CAAb,CAAL;AAAA,YAApC,CAAlB;AACA,gBAAKL,YAAL,GAAoBvzB,QAAQoG,OAAR,CAAgBqtB,YAAY3tB,MAA5B,CAApB;AACA,kBAAO,KAAKytB,YAAZ;AACD;;AAED,cAAKA,YAAL,GAAoBpF,MAAMJ,WAAW,KAAKS,IAAL,CAAUf,GAArB,EAA0B,KAAKO,OAA/B,CAAN,EACf9tB,IADe,CACV,UAACkuB,QAAD;AAAA,kBAAcA,SAASM,WAAT,EAAd;AAAA,UADU,CAApB;AAED;AACD,cAAO,KAAK6E,YAAZ;AACD;;;6BAEOtD,W,EAAa;AAAA;;AACnB,WAAI,CAAC,KAAKrmB,QAAV,EAAoB;AAClB,aAAI8O,MAAM,IAAIO,KAAJ,EAAV;AACA,cAAKrP,QAAL,GAAgB,0BAAiB8O,GAAjB,CAAhB;;AAEA,aAAI,KAAK8V,IAAL,CAAUf,GAAd,EAAmB;AACjB,eAAII,UAAU,KAAKW,IAAL,CAAUf,GAApB,CAAJ,EAA8B;AAC5B/U,iBAAIC,GAAJ,GAAU,KAAK6V,IAAL,CAAUf,GAApB;AACD,YAFD,MAEO;AACL/U,iBAAIC,GAAJ,QAAa,KAAKqV,OAAlB,GAA4B,KAAKQ,IAAL,CAAUf,GAAtC;AACD;AACF,UAND,MAMO;AACL,eAAI/wB,OAAOuzB,YAAY,KAAKzB,IAAL,CAAU0B,UAAtB,CAAX;AACAxzB,gBAAK42B,QAAL,GAAgBpzB,IAAhB,CAAqB,UAACozB,QAAD,EAAc;AACjC,iBAAIna,OAAO,IAAI0a,IAAJ,CAAS,CAACP,QAAD,CAAT,EAAqB,EAAE9Z,MAAM,OAAKgV,IAAL,CAAUsF,QAAlB,EAArB,CAAX;AACApb,iBAAIC,GAAJ,GAAUrc,OAAO8c,GAAP,CAAWC,eAAX,CAA2BF,IAA3B,CAAV;AACD,YAHD;AAID;AACF;AACD,cAAO,KAAKvP,QAAZ;AACD;;;;;;;;;;;;;;;;;;;AClZH;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;gfAzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;KASMmqB,e;;;AACJ,8BAAc;AAAA;;AAAA;;AAGZ,WAAKlW,UAAL,GAAkB,MAAKC,aAAL,CAAmB,WAAnB,CAAlB;AAHY;AAIb;;;;yBAEmB;AAClB,cAAO,UAAP;AACD;;;yBAEmB;AAClB;AAmBD;;;yBAEqB;AACpB;AASD;;;;;;KAGU3gB,Y,WAAAA,Y;;;AACX,2BAA0B;AAAA,SAAdid,OAAc,uEAAJ,EAAI;;AAAA;;AAAA;;AAGxB,YAAK4Z,UAAL,GAAkB5Z,QAAQ6Z,SAAR,GAAoB7Z,QAAQ6Z,SAA5B,GAAwC,EAA1D;AACA,YAAK9L,UAAL,GAAkB/N,QAAQ4F,SAAR,GAAoB5F,QAAQ4F,SAA5B,GAAwC,6BAA1D;AAJwB;AAKzB;;;;iCAEWvW,Q,EAAU;AACpB,WAAIyqB,cAAc,4BAAlB;;AAEA;AACA,WAAIC,YAAY,KAAKH,UAAL,GAAkB,GAAlC;AACA,YAAK,IAAI5kB,IAAI,CAAb,EAAgBA,IAAI,KAAK4kB,UAAzB,EAAqC,EAAE5kB,CAAvC,EAA0C;AACxC,cAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAK2kB,UAAzB,EAAqC,EAAE3kB,CAAvC,EAA0C;AACxC,gBAAK,IAAI0L,IAAI,CAAb,EAAgBA,IAAI,KAAKiZ,UAAzB,EAAqC,EAAEjZ,CAAvC,EAA0C;AACxC,iBAAIqZ,MAAM,CAAChlB,IAAI+kB,SAAL,EAAgB9kB,IAAI8kB,SAApB,EAA+BpZ,IAAIoZ,SAAnC,CAAV;AACA;AACA,iBAAIC,IAAI,CAAJ,KAAU,CAAV,IAAeA,IAAI,CAAJ,KAAU,CAAzB,IAA8BA,IAAI,CAAJ,KAAU,CAA5C,EAA+C;AAC7CF,2BAAYG,QAAZ,CAAqBD,GAArB,EAA0B,GAA1B;AACD;AACF;AACF;AACF;;AAED,WAAIE,qBAAqBJ,YAAYlY,gBAAZ,CAA6BE,eAA7B,CAA6CzS,QAA7C,CAAzB;;AAEAyqB,mBAAYlY,gBAAZ,CAA6BG,KAA7B;;AAEA;AACA+X,mBAAYG,QAAZ,CAAqB,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,GAAX,CAArB,EAAsC,GAAtC;AACAH,mBAAYG,QAAZ,CAAqB,CAAC,GAAD,EAAM,IAAN,EAAY,CAAZ,CAArB,EAAqC,GAArC;AACAH,mBAAYG,QAAZ,CAAqB,CAAC,CAAD,EAAI,IAAJ,EAAU,GAAV,CAArB,EAAqC,GAArC;AACAH,mBAAYG,QAAZ,CAAqB,CAAC,CAAC,GAAF,EAAO,IAAP,EAAa,CAAb,CAArB,EAAsC,GAAtC;;AAEA,WAAIE,iBAAiBL,YAAYlY,gBAAZ,CAA6BE,eAA7B,CAA6CzS,QAA7C,CAArB;;AAEA,WAAIhB,WAAW,IAAIsrB,eAAJ,EAAf;AACAtrB,gBAASoV,UAAT,CAAoB/M,OAApB,GAA8B,wBAAe,KAAKqX,UAApB,CAA9B;;AAEA,YAAKqM,aAAL,GAAqB/qB,SAASgrB,UAAT,CAAoBH,kBAApB,EAAwC7rB,QAAxC,CAArB;AACA,YAAKisB,SAAL,GAAiBjrB,SAASgrB,UAAT,CAAoBF,cAApB,EAAoC9rB,QAApC,CAAjB;;AAEA,YAAKvJ,OAAL,CAAa,KAAKs1B,aAAlB;AACA,YAAKt1B,OAAL,CAAa,KAAKw1B,SAAlB;;AAEA,cAAO,KAAK30B,eAAL,EAAP;AACD;;;iCAEW0J,Q,EAAU0Y,S,EAAWlT,K,EAAO;AACtCvR,YAAKi3B,YAAL,CAAkB,KAAKD,SAAL,CAAe7yB,MAAjC,EAAyCsgB,YAAY,IAArD,EAA2D,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA3D;AACA1Y,gBAAS2Y,SAAT,CAAmBnT,KAAnB,EAA0B,IAA1B;AACD;;;;;;;;;;;;;;;;;;;ACzGH;;AACA;;;;;;gfArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;KAKa7R,U,WAAAA,U;;;AACX,uBAAY4b,GAAZ,EAAiB;AAAA;;AAAA;;AAGf,WAAKA,GAAL,GAAWA,GAAX;AACA,WAAK4b,SAAL,GAAiB,IAAjB;AAJe;AAKhB;;;;iCAEWnrB,Q,EAAU;AAAA;;AACpB,cAAO,KAAKorB,WAAL,CAAiBC,WAAjB,CAA6B,KAAK9b,GAAlC,EAAuC9Y,IAAvC,CAA4C,UAAC2yB,UAAD,EAAgB;AACjE,gBAAK+B,SAAL,GAAiB/B,UAAjB;AACA,gBAAK3zB,OAAL,CAAa,OAAK01B,SAAlB;AACA,gBAAO,OAAK70B,eAAL,EAAP;AACD,QAJM,CAAP;AAKD","file":"cottontail.debug.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap df876abeb46a4e1a62fd","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { Node } from './core/node.js'\nimport { Renderer, createWebGLContext } from './core/renderer.js'\n\nimport { PrimitiveStream } from './geometry/primitive-stream.js'\nimport { BoxBuilder } from './geometry/box-builder.js'\n\nimport { PbrMaterial } from './materials/pbr.js'\n\nimport { WebXRView, Scene } from './scenes/scene.js'\nimport { CubeSeaScene } from './scenes/cube-sea.js'\nimport { GLTF2Scene } from './scenes/gltf2.js'\n\n// A very short-term polyfill to address a change in the location of the\n// getViewport call. This should dissapear within a month or so.\nif (('XRWebGLLayer' in window) && !('getViewport' in XRWebGLLayer.prototype)) {\n  XRWebGLLayer.prototype.getViewport = function(view) {\n    return view.getViewport(this);\n  };\n}\n\nexport {\n  Node,\n  Renderer,\n  createWebGLContext,\n\n  PrimitiveStream,\n  BoxBuilder,\n\n  PbrMaterial,\n\n  WebXRView,\n  Scene,\n  CubeSeaScene,\n  GLTF2Scene\n};\n\n\n// WEBPACK FOOTER //\n// ./src/cottontail.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { Ray } from './ray.js'\n\nconst DEFAULT_TRANSLATION = new Float32Array([0, 0, 0]);\nconst DEFAULT_ROTATION = new Float32Array([0, 0, 0, 1]);\nconst DEFAULT_SCALE = new Float32Array([1, 1, 1]);\n\nlet tmp_ray_matrix = mat4.create();\nlet tmp_ray_origin = vec3.create();\n\nexport class Node {\n  constructor() {\n    this.name = null; // Only for debugging\n    this.children = [];\n    this.parent = null;\n    this.visible = true;\n    this.selectable = false;\n\n    this._matrix = null;\n\n    this._dirty_trs = false;\n    this._translation = null;\n    this._rotation = null;\n    this._scale = null;\n\n    this._dirty_world_matrix = false;\n    this._world_matrix = null;\n\n    this._active_frame_id = -1;\n    this._render_primitives = null;\n  }\n\n  // Create a clone of this node and all of it's children. Does not duplicate\n  // RenderPrimitives, the cloned nodes will be treated as new instances of the\n  // geometry.\n  clone() {\n    let clone_node = new Node();\n    clone_node.name = this.name;\n    clone_node.visible = this.visible;\n\n    clone_node._dirty_trs = this._dirty_trs;\n\n    if (this._translation) {\n      clone_node._translation = vec3.create();\n      vec3.copy(clone_node._translation, this._translation);\n    }\n\n    if (this._rotation) {\n      clone_node._rotation = quat.create();\n      quat.copy(clone_node._rotation, this._rotation);\n    }\n\n    if (this._scale) {\n      clone_node._scale = vec3.create();\n      vec3.copy(clone_node._scale, this._scale);\n    }\n\n    // Only copy the matrices if they're not already dirty.\n    if (!clone_node._dirty_trs && this._matrix) {\n      clone_node._matrix = mat4.create();\n      mat4.copy(clone_node._matrix, this._matrix);\n    }\n\n    clone_node._dirty_world_matrix = this._dirty_world_matrix;\n    if (!clone_node._dirty_world_matrix && this._world_matrix) {\n      clone_node._world_matrix = mat4.create();\n      mat4.copy(clone_node._world_matrix, this._world_matrix);\n    }\n\n    if (this._render_primitives) {\n      for (let primitive of this._render_primitives) {\n        clone_node.addRenderPrimitive(primitive);\n      }\n    }\n\n    for (let child of this.children) {\n      clone_node.addNode(child.clone());\n    }\n\n    return clone_node;\n  }\n\n  markActive(frame_id) {\n    if (this.visible && this._render_primitives) {\n      this._active_frame_id = frame_id;\n      for (let primitive of this._render_primitives) {\n        primitive.markActive(frame_id);\n      }\n    }\n\n    for (let child of this.children) {\n      if (child.visible) {\n        child.markActive(frame_id);\n      }\n    }\n  }\n\n  addNode(value) {\n    if (!value || value.parent == this) {\n      return;\n    }\n\n    if (value.parent) {\n      value.parent.removeNode(value);\n    }\n    value.parent = this;\n\n    this.children.push(value);\n  }\n\n  removeNode(value) {\n    let i = this.children.indexOf(value);\n    if (i > -1) {\n      this.children.splice(i, 1);\n      value.parent = null;\n    }\n  }\n\n  setMatrixDirty() {\n    if (!this._dirty_world_matrix) {\n      this._dirty_world_matrix = true;\n      for (let child of this.children) {\n        child.setMatrixDirty();\n      }\n    }\n  }\n\n  _updateLocalMatrix() {\n    if (!this._matrix) {\n      this._matrix = mat4.create();\n    }\n\n    if (this._dirty_trs) {\n      this._dirty_trs = false;\n      mat4.fromRotationTranslationScale(\n        this._matrix,\n        this._rotation || DEFAULT_ROTATION,\n        this._translation || DEFAULT_TRANSLATION,\n        this._scale || DEFAULT_SCALE);\n    }\n\n    return this._matrix;\n  }\n\n  set matrix(value) {\n    this._matrix = value;\n    this.setMatrixDirty();\n    this._dirty_trs = false;\n    this._translation = null;\n    this._rotation = null;\n    this._scale = null;\n  }\n\n  get matrix() {\n    this.setMatrixDirty();\n\n    return this._updateLocalMatrix();\n  }\n\n  get world_matrix() {\n    if (!this._world_matrix) {\n      this._dirty_world_matrix = true;\n      this._world_matrix = mat4.create();\n    }\n\n    if (this._dirty_world_matrix || this._dirty_trs) {\n      if (this.parent) {\n        // TODO: Some optimizations that could be done here if the node matrix\n        // is an identity matrix.\n        mat4.mul(this._world_matrix, this.parent.world_matrix, this._updateLocalMatrix());\n      } else {\n        mat4.copy(this._world_matrix, this._updateLocalMatrix());\n      }\n      this._dirty_world_matrix = false;\n    }\n\n    return this._world_matrix;\n  }\n\n  // TODO: Decompose matrix when fetching these?\n  set translation(value) {\n    if (value != null) {\n      this._dirty_trs = true;\n      this.setMatrixDirty();\n    }\n    this._translation = value;\n  }\n\n  get translation() {\n    this._dirty_trs = true;\n    this.setMatrixDirty();\n    if (!this._translation) {\n      this._translation = vec3.clone(DEFAULT_TRANSLATION);\n    }\n    return this._translation;\n  }\n\n  set rotation(value) {\n    if (value != null) {\n      this._dirty_trs = true;\n      this.setMatrixDirty();\n    }\n    this._rotation = value;\n  }\n\n  get rotation() {\n    this._dirty_trs = true;\n    this.setMatrixDirty();\n    if (!this._rotation) {\n      this._rotation = quat.clone(DEFAULT_ROTATION);\n    }\n    return this._rotation;\n  }\n\n  set scale(value) {\n    if (value != null) {\n      this._dirty_trs = true;\n      this.setMatrixDirty();\n    }\n    this._scale = value;\n  }\n\n  get scale() {\n    this._dirty_trs = true;\n    this.setMatrixDirty();\n    if (!this._scale) {\n      this._scale = vec3.clone(DEFAULT_SCALE);\n    }\n    return this._scale;\n  }\n\n  waitForComplete() {\n    let child_promises = [];\n    for (let child of this.children) {\n      child_promises.push(child.waitForComplete());\n    }\n    if (this._render_primitives) {\n      for (let primitive of this._render_primitives) {\n        child_promises.push(primitive.waitForComplete());\n      }\n    }\n    return Promise.all(child_promises).then(() => this);\n  }\n\n  get renderPrimitives() {\n    return this._render_primitives;\n  }\n\n  addRenderPrimitive(primitive) {\n    if (!this._render_primitives)\n      this._render_primitives = [primitive];\n    else\n      this._render_primitives.push(primitive);\n    primitive._instances.push(this);\n  }\n\n  removeRenderPrimitive(primitive) {\n    if (!this._render_primitives)\n      return;\n\n    let index = this._render_primitives._instances.indexOf(primitive);\n    if (index > -1) {\n      this._render_primitives._instances.splice(index, 1);\n\n      index = primitive._instances.indexOf(this);\n      if (index > -1) {\n        primitive._instances.splice(index, 1);\n      }\n\n      if (!this._render_primitives.length)\n        this._render_primitives = null;\n    }\n  }\n\n  clearRenderPrimitives() {\n    if (this._render_primitives) {\n      for (let primitive of this._render_primitives) {\n        let index = primitive._instances.indexOf(this);\n        if (index > -1) {\n          primitive._instances.splice(index, 1);\n        }\n      }\n      this._render_primitives = null;\n    }\n  }\n\n  _hitTestSelectableNode(ray_matrix) {\n    if (this._render_primitives) {\n      let ray = null;\n      for (let primitive of this._render_primitives) {\n        if (primitive._min) {\n          if (!ray) {\n            mat4.invert(tmp_ray_matrix, this.world_matrix);\n            mat4.multiply(tmp_ray_matrix, tmp_ray_matrix, ray_matrix);\n            ray = new Ray(tmp_ray_matrix);\n          }\n          let intersection = ray.intersectsAABB(primitive._min, primitive._max);\n          if (intersection) {\n            vec3.transformMat4(intersection, intersection, this.world_matrix);\n            return intersection;\n          }\n        }\n      }\n    }\n    for (let child of this.children) {\n      let intersection = child._hitTestSelectableNode(ray_matrix);\n      if (intersection) {\n        return intersection;\n      }\n    }\n    return null;\n  }\n\n  hitTest(ray_matrix, ray_origin = null) {\n    if (!ray_origin) {\n      ray_origin = tmp_ray_origin;\n      vec3.set(ray_origin, 0, 0, 0);\n      vec3.transformMat4(ray_origin, ray_origin, ray_matrix);\n    }\n\n    if (this.selectable) {\n      let intersection = this._hitTestSelectableNode(ray_matrix);\n      if (intersection) {\n        return {\n          node: this,\n          intersection: intersection,\n          distance: vec3.distance(ray_origin, intersection),\n        };\n      }\n      return null;\n    }\n\n    let result = null;\n    for (let child of this.children) {\n      let child_result = child.hitTest(ray_matrix, ray_origin);\n      if (child_result) {\n        if (!result || result.distance > child_result.distance) {\n          result = child_result;\n        }\n      }\n    }\n    return result;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/node.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nlet normal_mat = mat3.create();\n\nexport class Ray {\n  constructor(matrix = null) {\n    this.origin = vec3.create();\n\n    this._dir = vec3.create();\n    this._dir[2] = -1.0;\n\n    if (matrix) {\n      vec3.transformMat4(this.origin, this.origin, matrix);\n      mat3.fromMat4(normal_mat, matrix);\n      vec3.transformMat3(this._dir, this._dir, normal_mat);\n    }\n\n    // To force the inverse and sign calculations.\n    this.dir = this._dir;\n  }\n\n  get dir() {\n    return this._dir;\n  }\n\n  set dir(value) {\n    this._dir = vec3.copy(this._dir, value);\n    vec3.normalize(this._dir, this._dir);\n\n    this.inv_dir = vec3.fromValues(\n      1.0 / this._dir[0],\n      1.0 / this._dir[1],\n      1.0 / this._dir[2]);\n\n    this.sign = [\n      (this.inv_dir[0] < 0) ? 1 : 0,\n      (this.inv_dir[1] < 0) ? 1 : 0,\n      (this.inv_dir[2] < 0) ? 1 : 0\n    ];\n  }\n\n  // Borrowed from:\n  // https://www.scratchapixel.com/lessons/3d-basic-rendering/minimal-ray-tracer-rendering-simple-shapes/ray-box-intersection\n  intersectsAABB(min, max) {\n    let r = this;\n\n    let bounds = [min, max];\n\n    let tmin = (bounds[r.sign[0]][0] - r.origin[0]) * r.inv_dir[0];\n    let tmax = (bounds[1-r.sign[0]][0] - r.origin[0]) * r.inv_dir[0];\n    let tymin = (bounds[r.sign[1]][1] - r.origin[1]) * r.inv_dir[1];\n    let tymax = (bounds[1-r.sign[1]][1] - r.origin[1]) * r.inv_dir[1];\n\n    if ((tmin > tymax) || (tymin > tmax))\n        return null;\n    if (tymin > tmin)\n        tmin = tymin;\n    if (tymax < tmax)\n        tmax = tymax;\n\n    let tzmin = (bounds[r.sign[2]][2] - r.origin[2]) * r.inv_dir[2];\n    let tzmax = (bounds[1-r.sign[2]][2] - r.origin[2]) * r.inv_dir[2];\n\n    if ((tmin > tzmax) || (tzmin > tmax))\n        return null;\n    if (tzmin > tmin)\n        tmin = tzmin;\n    if (tzmax < tmax)\n        tmax = tzmax;\n\n    let t = -1;\n    if (tmin > 0 && tmax > 0) {\n      t = Math.min(tmin, tmax);\n    } else if (tmin > 0) {\n      t = tmin;\n    } else if (tmax > 0) {\n      t = tmax;\n    } else {\n      // Intersection is behind the ray origin.\n      return null;\n    }\n\n    // Return the point where the ray first intersected with the AABB.\n    let intersection_point = vec3.clone(this._dir);\n    vec3.scale(intersection_point, intersection_point, t);\n    vec3.add(intersection_point, intersection_point, this.origin);\n    return intersection_point;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/ray.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { CAP, MAT_STATE, RENDER_ORDER, stateToBlendFunc } from './material.js'\nimport { Node } from './node.js'\nimport { Program } from './program.js'\nimport { DataTexture } from './texture.js'\n\nexport const ATTRIB = {\n  POSITION: 1,\n  NORMAL: 2,\n  TANGENT: 3,\n  TEXCOORD_0: 4,\n  TEXCOORD_1: 5,\n  COLOR_0: 6,\n};\n\nexport const ATTRIB_MASK = {\n  POSITION:   0x0001,\n  NORMAL:     0x0002,\n  TANGENT:    0x0004,\n  TEXCOORD_0: 0x0008,\n  TEXCOORD_1: 0x0010,\n  COLOR_0:    0x0020,\n};\n\nconst DEF_LIGHT_DIR = new Float32Array([-0.1, -1.0, -0.2]);\nconst DEF_LIGHT_COLOR = new Float32Array([1.0, 1.0, 0.9]);\n\nconst PRECISION_REGEX = new RegExp('precision (lowp|mediump|highp) float;');\n\nconst VERTEX_SHADER_SINGLE_ENTRY = `\nuniform mat4 PROJECTION_MATRIX, VIEW_MATRIX, MODEL_MATRIX;\n\nvoid main() {\n  gl_Position = vertex_main(PROJECTION_MATRIX, VIEW_MATRIX, MODEL_MATRIX);\n}\n`;\n\nconst VERTEX_SHADER_MULTI_ENTRY = `\n#ERROR Multiview rendering is not implemented\nvoid main() {\n  gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\n}\n`;\n\nconst FRAGMENT_SHADER_ENTRY = `\nvoid main() {\n  gl_FragColor = fragment_main();\n}\n`;\n\nfunction isPowerOfTwo(n) {\n  return (n & (n - 1)) === 0;\n}\n\n// Creates a WebGL context and initializes it with some common default state.\nexport function createWebGLContext(glAttribs) {\n  glAttribs = glAttribs || { alpha: false };\n\n  let webglCanvas = document.createElement('canvas');\n  let contextTypes = glAttribs.webgl2 ? ['webgl2'] : ['webgl', 'experimental-webgl'];\n  let context = null;\n\n  for (let contextType of contextTypes) {\n    context = webglCanvas.getContext(contextType, glAttribs);\n    if (context)\n      break;\n  }\n\n  if (!context) {\n    let webglType = (glAttribs.webgl2 ? 'WebGL 2' : 'WebGL')\n    console.error('This browser does not support ' + webglType + '.');\n    return null;\n  }\n\n  return context;\n}\n\nexport class RenderView {\n  constructor(projection_matrix, view_matrix, viewport = null, eye = 'left') {\n    this.projection_matrix = projection_matrix;\n    this.view_matrix = view_matrix;\n    this.viewport = viewport;\n    // If an eye isn't given the left eye is assumed.\n    this._eye = eye;\n    this._eye_index = (eye == 'left' ? 0 : 1);\n  }\n\n  get eye() {\n    return this._eye;\n  }\n\n  set eye(value) {\n    this._eye = value;\n    this._eye_index = (value == 'left' ? 0 : 1);\n  }\n\n  get eye_index() {\n    return this._eye_index;\n  }\n}\n\nclass RenderBuffer {\n  constructor(target, usage, buffer, length = 0) {\n    this._target = target;\n    this._usage = usage;\n    this._length = length;\n    if (buffer instanceof Promise) {\n      this._buffer = null;\n      this._promise = buffer.then((buffer) => {\n        this._buffer = buffer;\n        return this;\n      });\n    } else {\n      this._buffer = buffer;\n      this._promise = Promise.resolve(this);\n    }\n  }\n\n  waitForComplete() {\n    return this._promise;\n  }\n}\n\nclass RenderPrimitiveAttribute {\n  constructor(primitive_attribute) {\n    this._attrib_index = ATTRIB[primitive_attribute.name];\n    this._component_count = primitive_attribute.component_count;\n    this._component_type = primitive_attribute.component_type;\n    this._stride = primitive_attribute.stride;\n    this._byte_offset = primitive_attribute.byte_offset;\n    this._normalized = primitive_attribute.normalized;\n  }\n}\n\nclass RenderPrimitiveAttributeBuffer {\n  constructor(buffer) {\n    this._buffer = buffer;\n    this._attributes = [];\n  }\n}\n\nclass RenderPrimitive {\n  constructor(primitive) {\n    this._mode = primitive.mode;\n    this._element_count = primitive.element_count;\n    this._instances = [];\n    this._vao = null;\n\n    this._complete = false;\n\n    this._material = null;\n\n    this._attribute_buffers = [];\n    this._attribute_mask = 0;\n\n    for (let attribute of primitive.attributes) {\n      this._attribute_mask |= ATTRIB_MASK[attribute.name];\n      let render_attribute = new RenderPrimitiveAttribute(attribute);\n      let found_buffer = false;\n      for (let attribute_buffer of this._attribute_buffers) {\n        if (attribute_buffer._buffer == attribute.buffer) {\n          attribute_buffer._attributes.push(render_attribute);\n          found_buffer = true;\n          break;\n        }\n      }\n      if (!found_buffer) {\n        let attribute_buffer = new RenderPrimitiveAttributeBuffer(attribute.buffer);\n        attribute_buffer._attributes.push(render_attribute);\n        this._attribute_buffers.push(attribute_buffer);\n      }\n    }\n\n    this._index_buffer = null;\n    this._index_byte_offset = 0;\n    this._index_type = 0;\n\n    if (primitive.index_buffer) {\n      this._index_byte_offset = primitive.index_byte_offset;\n      this._index_type = primitive.index_type;\n      this._index_buffer = primitive.index_buffer;\n    }\n\n    if (primitive._min) {\n      this._min = vec3.clone(primitive._min);\n      this._max = vec3.clone(primitive._max);\n    } else {\n      this._min = null;\n      this._max = null;\n    }\n  }\n\n  setRenderMaterial(material) {\n    this._material = material;\n    this._promise = null;\n    this._complete = false;\n\n    if (this._material != null) {\n      this.waitForComplete(); // To flip the _complete flag.\n    }\n  }\n\n  markActive(frame_id) {\n    if (this._complete) {\n      this._active_frame_id = frame_id;\n\n      if (this.material) {\n        this.material.markActive(frame_id);\n      }\n\n      if (this.program) {\n        this.program.markActive(frame_id);\n      }\n    }\n  }\n\n  get uniforms() {\n    return this._material._uniform_dictionary;\n  }\n\n  waitForComplete() {\n    if (!this._promise) {\n      if (!this._material) {\n        return Promise.reject(\"RenderPrimitive does not have a material\");\n      }\n\n      let completion_promises = [];\n      completion_promises.push(this._material.waitForComplete());\n\n      for (let attribute_buffer of this._attribute_buffers) {\n        if (!attribute_buffer._buffer._buffer) {\n          completion_promises.push(attribute_buffer._buffer._promise);\n        }\n      }\n      \n      if (this._index_buffer && !this._index_buffer._buffer) {\n        completion_promises.push(this._index_buffer._promise);\n      }\n\n      this._promise = Promise.all(completion_promises).then(() => {\n        this._complete = true;\n        return this;\n      });\n    }\n    return this._promise;\n  }\n}\n\nconst inverse_matrix = mat4.create();\n\nfunction setCap(gl, gl_enum, cap, prev_state, state) {\n  let change = (state & cap) - (prev_state & cap);\n  if (!change)\n    return;\n\n  if (change > 0) {\n    gl.enable(gl_enum);\n  } else {\n    gl.disable(gl_enum);\n  }\n}\n\nclass RenderMaterialSampler {\n  constructor(renderer, material_sampler, index) {\n    this._uniform_name = material_sampler._uniform_name;\n    this._texture = renderer._getRenderTexture(material_sampler._texture);\n    this._index = index;\n  }\n}\n\nclass RenderMaterialUniform {\n  constructor(material_uniform) {\n    this._uniform_name = material_uniform._uniform_name;\n    this._uniform = null;\n    this._length = material_uniform._length;\n    if (material_uniform._value instanceof Array) {\n      this._value = new Float32Array(material_uniform._value);\n    } else {\n      this._value = new Float32Array([material_uniform._value]);\n    }\n  }\n\n  set value(value) {\n    if (this._value.length == 1) {\n      this._value[0] = value;\n    } else {\n      for (let i = 0; i < this._value.length; ++i) {\n        this._value[i] = value[i];\n      }\n    }\n  }\n}\n\nclass RenderMaterial {\n  constructor(renderer, material, program) {\n    this._program = program;\n    this._state = material.state._state;\n\n    this._samplers = [];\n    for (let i = 0; i < material._samplers.length; ++i) {\n      this._samplers.push(new RenderMaterialSampler(renderer, material._samplers[i], i));\n    }\n\n    this._uniform_dictionary = {};\n    this._uniforms = [];\n    for (let uniform of material._uniforms) {\n      let render_uniform = new RenderMaterialUniform(uniform);\n      this._uniforms.push(render_uniform);\n      this._uniform_dictionary[render_uniform._uniform_name] = render_uniform;\n    }\n\n    this._complete_promise = null;\n    this._first_bind = true;\n\n    this._render_order = material.render_order;\n    if (this._render_order == RENDER_ORDER.DEFAULT) {\n      if (this._state & CAP.BLEND) {\n        this._render_order = RENDER_ORDER.TRANSPARENT;\n      } else {\n        this._render_order = RENDER_ORDER.OPAQUE;\n      }\n    }\n  }\n\n  bind(gl) {\n    // First time we do a binding, cache the uniform locations and remove\n    // unused uniforms from the list.\n    if (this._first_bind) {\n      for (let i = 0; i < this._samplers.length;) {\n        let sampler = this._samplers[i];\n        if (!this._program.uniform[sampler._uniform_name]) {\n          this._samplers.splice(i, 1);\n          continue;\n        }\n        ++i;\n      }\n\n      for (let i = 0; i < this._uniforms.length;) {\n        let uniform = this._uniforms[i];\n        uniform._uniform = this._program.uniform[uniform._uniform_name];\n        if (!uniform._uniform) {\n          this._uniforms.splice(i, 1);\n          continue;\n        }\n        ++i;\n      }\n      this._first_bind = false;\n    }\n\n    for (let sampler of this._samplers) {\n      gl.activeTexture(gl.TEXTURE0 + sampler._index);\n      if (sampler._texture) {\n        //sampler._texture.bind(i);\n        gl.bindTexture(gl.TEXTURE_2D, sampler._texture);\n      } else {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n      }\n    }\n\n    for (let uniform of this._uniforms) {\n      switch(uniform._length) {\n        case 1: gl.uniform1fv(uniform._uniform, uniform._value); break;\n        case 2: gl.uniform2fv(uniform._uniform, uniform._value); break;\n        case 3: gl.uniform3fv(uniform._uniform, uniform._value); break;\n        case 4: gl.uniform4fv(uniform._uniform, uniform._value); break;\n      }\n    }\n  }\n\n  waitForComplete() {\n    if (!this._complete_promise) {\n      if (this._samplers.length == 0) {\n        this._complete_promise = Promise.resolve(this);\n      } else {\n        let promises = [];\n        for (let sampler of this._samplers) {\n          if (sampler._texture && !sampler._texture._complete) {\n            promises.push(sampler._texture._promise);\n          }\n        }\n        this._complete_promise = Promise.all(promises).then(() => this);\n      }\n    }\n    return this._complete_promise;\n  }\n\n  // Material State fetchers\n  get cull_face() { return !!(this._state & CAP.CULL_FACE); }\n  get blend() { return !!(this._state & CAP.BLEND); }\n  get depth_test() { return !!(this._state & CAP.DEPTH_TEST); }\n  get stencil_test() { return !!(this._state & CAP.STENCIL_TEST); }\n  get color_mask() { return !!(this._state & CAP.COLOR_MASK); }\n  get depth_mask() { return !!(this._state & CAP.DEPTH_MASK); }\n  get stencil_mask() { return !!(this._state & CAP.STENCIL_MASK); }\n  get depth_func() { return ((this._state & MAT_STATE.DEPTH_FUNC_RANGE) >> MAT_STATE.DEPTH_FUNC_SHIFT) + WebGLRenderingContext.NEVER; }\n  get blend_func_src() { return stateToBlendFunc(this._state, MAT_STATE.BLEND_SRC_RANGE, MAT_STATE.BLEND_SRC_SHIFT); }\n  get blend_func_dst() { return stateToBlendFunc(this._state, MAT_STATE.BLEND_DST_RANGE, MAT_STATE.BLEND_DST_SHIFT); }\n\n  // Only really for use from the renderer\n  _capsDiff(other_state) {\n    return (other_state & MAT_STATE.CAPS_RANGE) ^ (this._state & MAT_STATE.CAPS_RANGE)\n  }\n\n  _blendDiff(other_state) {\n    if (!(this._state & CAP.BLEND))\n      return 0;\n    return (other_state & MAT_STATE.BLEND_FUNC_RANGE) ^ (this._state & MAT_STATE.BLEND_FUNC_RANGE);\n  }\n\n  _depthFuncDiff(other_state) {\n    if (!(this._state & CAP.DEPTH_TEST))\n      return 0;\n    return (other_state & MAT_STATE.DEPTH_FUNC_RANGE) ^ (this._state & MAT_STATE.DEPTH_FUNC_RANGE);\n  }\n}\n\nexport class Renderer {\n  constructor(gl) {\n    this._gl = gl || createWebGLContext();\n    this._frame_id = -1;\n    this._program_cache = {};\n    this._texture_cache = {};\n    this._render_primitives = Array(RENDER_ORDER.DEFAULT);\n    this._camera_positions = [];\n\n    this._vao_ext = gl.getExtension(\"OES_vertex_array_object\");\n\n    let frag_high_precision = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n    this._default_frag_precision = frag_high_precision.precision > 0 ? 'highp' : 'mediump';\n\n    this._depth_mask_needs_reset = false;\n    this._color_mask_needs_reset = false;\n  }\n\n  get gl() {\n    return this._gl;\n  }\n\n  createRenderBuffer(target, data, usage = WebGLRenderingContext.STATIC_DRAW) {\n    let gl = this._gl;\n    let gl_buffer = gl.createBuffer();\n\n    if (data instanceof Promise) {\n      let render_buffer = new RenderBuffer(target, usage, data.then((data) => {\n        gl.bindBuffer(target, gl_buffer);\n        gl.bufferData(target, data, usage);\n        render_buffer._length = data.byteLength;\n        return gl_buffer;\n      }));\n      return render_buffer;\n    } else {\n      gl.bindBuffer(target, gl_buffer);\n      gl.bufferData(target, data, usage);\n      return new RenderBuffer(target, usage, gl_buffer, data.byteLength);\n    }\n  }\n\n  updateRenderBuffer(buffer, data, offset = 0) {\n    if (buffer._buffer) {\n      let gl = this._gl;\n      gl.bindBuffer(buffer._target, buffer._buffer);\n      if (offset == 0 && buffer._length == data.byteLength) {\n        gl.bufferData(buffer._target, data, buffer._usage);\n      } else {\n        gl.bufferSubData(buffer._target, offset, data);\n      }\n    } else {\n      buffer.waitForComplete().then((buffer) => {\n        this.updateRenderBuffer(buffer, data, offset);\n      });\n    }\n  }\n\n  createRenderPrimitive(primitive, material) {\n    let render_primitive = new RenderPrimitive(primitive);\n\n    let program = this._getMaterialProgram(material, render_primitive);\n    let render_material = new RenderMaterial(this, material, program);\n    render_primitive.setRenderMaterial(render_material);\n\n    if (this._vao_ext) {\n      render_primitive.waitForComplete().then(() => {\n        render_primitive._vao = this._vao_ext.createVertexArrayOES();\n        this._vao_ext.bindVertexArrayOES(render_primitive._vao);\n        this._bindPrimitive(render_primitive);\n        this._vao_ext.bindVertexArrayOES(null);\n        // TODO: Get rid of the buffer/attribute data on the RenderPrimitive when\n        // it has a VAO?\n        // render_primitive._attribute_buffers = null;\n      });\n    }\n\n    if (!this._render_primitives[render_material._render_order]) {\n      this._render_primitives[render_material._render_order] = [];\n    }\n\n    this._render_primitives[render_material._render_order].push(render_primitive);\n\n    return render_primitive;\n  }\n\n  createMesh(primitive, material) {\n    let mesh_node = new Node();\n    mesh_node.addRenderPrimitive(this.createRenderPrimitive(primitive, material));\n    return mesh_node;\n  }\n\n  drawViews(views, root_node) {\n    if (!root_node) {\n      return;\n    }\n\n    let gl = this._gl;\n    this._frame_id++;\n\n    root_node.markActive(this._frame_id);\n\n    // If there's only one view then flip the algorithm a bit so that we're only\n    // setting the viewport once.\n    if (views.length == 1 && views[0].viewport) {\n      let vp = views[0].viewport;\n      this._gl.viewport(vp.x, vp.y, vp.width, vp.height);\n    }\n\n    // Get the positions of the 'camera' for each view matrix.\n    for (let i = 0; i < views.length; ++i) {\n      mat4.invert(inverse_matrix, views[i].view_matrix);\n\n      if (this._camera_positions.length <= i) {\n        this._camera_positions.push(vec3.create());\n      }\n      let camera_position = this._camera_positions[i];\n      vec3.set(camera_position, 0, 0, 0);\n      vec3.transformMat4(camera_position, camera_position, inverse_matrix);\n    }\n\n    // Draw each set of render primitives in order\n    for (let render_primitives of this._render_primitives) {\n      if (render_primitives && render_primitives.length) {\n        this._drawRenderPrimitiveSet(views, render_primitives);\n      }\n    }\n\n    if (this._vao_ext) {\n      this._vao_ext.bindVertexArrayOES(null);\n    }\n\n    if (this._depth_mask_needs_reset) {\n      gl.depthMask(true);\n    }\n    if (this._color_mask_needs_reset) {\n      gl.colorMask(true, true, true, true);\n    }\n    \n  }\n\n  _drawRenderPrimitiveSet(views, render_primitives) {\n    let gl = this._gl;\n    let program = null;\n    let material = null;\n    let attrib_mask = 0;\n\n    // Loop through every primitive known to the renderer.\n    for (let primitive of render_primitives) {\n      // Skip over those that haven't been marked as active for this frame.\n      if (primitive._active_frame_id != this._frame_id) {\n        continue;\n      }\n\n      // Bind the primitive material's program if it's different than the one we\n      // were using for the previous primitive.\n      // TODO: The ording of this could be more efficient.\n      if (program != primitive._material._program) {\n        program = primitive._material._program;\n        program.use();\n\n        if (program.uniform.LIGHT_DIRECTION)\n          gl.uniform3fv(program.uniform.LIGHT_DIRECTION, DEF_LIGHT_DIR);\n\n        if (program.uniform.LIGHT_COLOR)\n          gl.uniform3fv(program.uniform.LIGHT_COLOR, DEF_LIGHT_COLOR);\n\n        if (views.length == 1) {\n          gl.uniformMatrix4fv(program.uniform.PROJECTION_MATRIX, false, views[0].projection_matrix);\n          gl.uniformMatrix4fv(program.uniform.VIEW_MATRIX, false, views[0].view_matrix);\n          gl.uniform3fv(program.uniform.CAMERA_POSITION, this._camera_positions[0]);\n          gl.uniform1i(program.uniform.EYE_INDEX, views[0].eye_index);\n        }\n      }\n\n      if (material != primitive._material) {\n        this._bindMaterialState(primitive._material, material);\n        primitive._material.bind(gl, program, material);\n        material = primitive._material;\n      }\n\n      if (primitive._vao) {\n        this._vao_ext.bindVertexArrayOES(primitive._vao);\n      } else {\n        this._bindPrimitive(primitive, attrib_mask);\n        attrib_mask = primitive._attribute_mask;\n      }\n\n      for (let i = 0; i < views.length; ++i) {\n        let view = views[i];\n        if (views.length > 1) {\n          if (view.viewport) {\n            let vp = view.viewport;\n            gl.viewport(vp.x, vp.y, vp.width, vp.height);\n          }\n          gl.uniformMatrix4fv(program.uniform.PROJECTION_MATRIX, false, view.projection_matrix);\n          gl.uniformMatrix4fv(program.uniform.VIEW_MATRIX, false, view.view_matrix);\n          gl.uniform3fv(program.uniform.CAMERA_POSITION, this._camera_positions[i]);\n          gl.uniform1i(program.uniform.EYE_INDEX, view.eye_index);\n        }\n\n        for (let instance of primitive._instances) {\n          if (instance._active_frame_id != this._frame_id) {\n            continue;\n          }\n\n          gl.uniformMatrix4fv(program.uniform.MODEL_MATRIX, false, instance.world_matrix);\n\n          if (primitive._index_buffer) {\n            gl.drawElements(primitive._mode, primitive._element_count,\n                primitive._index_type, primitive._index_byte_offset);\n          } else {\n            gl.drawArrays(primitive._mode, 0, primitive._element_count);\n          }\n        }\n      }\n    }\n  }\n\n  _getRenderTexture(texture) {\n    if (!texture) {\n      return null;\n    }\n\n    let key = texture.texture_key;\n    if (!key) {\n      throw new Error(\"Texure does not have a valid key\");\n    }\n\n    if (key in this._texture_cache) {\n      return this._texture_cache[key];\n    } else {\n      let gl = this._gl;\n      let texture_handle = gl.createTexture();\n      this._texture_cache[key] = texture_handle;\n\n      if (texture instanceof DataTexture) {\n        gl.bindTexture(gl.TEXTURE_2D, texture_handle);\n        gl.texImage2D(gl.TEXTURE_2D, 0, texture.format, texture.width, texture.height, 0, texture.format, texture._type, texture._data);\n        this._setSamplerParameters(texture);\n\n      } else {\n        texture.waitForComplete().then(() => {\n          gl.bindTexture(gl.TEXTURE_2D, texture_handle);\n          gl.texImage2D(gl.TEXTURE_2D, 0, texture.format, texture.format, gl.UNSIGNED_BYTE, texture._img);\n          this._setSamplerParameters(texture);\n        });\n      }\n\n      return texture_handle;\n    }\n  }\n\n  _setSamplerParameters(texture) {\n    let gl = this._gl;\n\n    let sampler = texture.sampler;\n    let power_of_two = isPowerOfTwo(texture.width) && isPowerOfTwo(texture.height);\n    let mipmap = power_of_two && texture.mipmap;\n    if (mipmap) {\n      gl.generateMipmap(gl.TEXTURE_2D);\n    }\n\n    let min_filter = sampler.min_filter || (mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\n    let wrap_s = sampler.wrap_s || (power_of_two ? gl.REPEAT : gl.CLAMP_TO_EDGE);\n    let wrap_t = sampler.wrap_t || (power_of_two ? gl.REPEAT : gl.CLAMP_TO_EDGE);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, sampler.mag_filter || gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, min_filter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap_s);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap_t);\n  }\n\n  _getProgramKey(name, defines) {\n    let key = `${name}:`;\n\n    for (let define in defines) {\n      key += `${define}=${defines[define]},`;\n    }\n\n    return key;\n  }\n\n  _getMaterialProgram(material, render_primitive) {\n    let material_name = material.material_name;\n    let vertex_source = material.vertex_source;\n    let fragment_source = material.fragment_source;\n\n    // These should always be defined for every material\n    if (material_name == null) {\n      throw new Error(\"Material does not have a name\");\n    }\n    if (vertex_source == null) {\n      throw new Error(`Material \"${material_name}\" does not have a vertex source`);\n    }\n    if (fragment_source == null) {\n      throw new Error(`Material \"${material_name}\" does not have a fragment source`);\n    }\n\n    let defines = material.getProgramDefines(render_primitive);\n    let key = this._getProgramKey(material_name, defines);\n\n    if (key in this._program_cache) {\n      return this._program_cache[key];\n    } else {\n      let multiview = false; // Handle this dynamically later\n      let full_vertex_source = vertex_source;\n      full_vertex_source += multiview ? VERTEX_SHADER_MULTI_ENTRY :\n                                        VERTEX_SHADER_SINGLE_ENTRY;\n\n      let precision_match = fragment_source.match(PRECISION_REGEX);\n      let frag_precision_header = precision_match ? '' : `precision ${this._default_frag_precision} float;\\n`;\n\n      let full_fragment_source = frag_precision_header + fragment_source;\n      full_fragment_source += FRAGMENT_SHADER_ENTRY;\n\n      let program = new Program(this._gl, full_vertex_source, full_fragment_source, ATTRIB, defines);\n      this._program_cache[key] = program;\n\n      program.onNextUse((program) => {\n        // Bind the samplers to the right texture index. This is constant for\n        // the lifetime of the program.\n        for (let i = 0; i < material._samplers.length; ++i) {\n          let sampler = material._samplers[i];\n          let uniform = program.uniform[sampler._uniform_name];\n          if (uniform)\n            this._gl.uniform1i(uniform, i);\n        }\n      });\n\n      return program;\n    }\n  }\n\n  _bindPrimitive(primitive, attrib_mask) {\n    let gl = this._gl;\n\n    // If the active attributes have changed then update the active set.\n    if (attrib_mask != primitive._attribute_mask) {\n      for (let attrib in ATTRIB) {\n        if (primitive._attribute_mask & ATTRIB_MASK[attrib]) {\n          gl.enableVertexAttribArray(ATTRIB[attrib]);\n        } else {\n          gl.disableVertexAttribArray(ATTRIB[attrib]);\n        }\n      }\n    }\n\n    // Bind the primitive attributes and indices.\n    for (let attribute_buffer of primitive._attribute_buffers) {\n      gl.bindBuffer(gl.ARRAY_BUFFER, attribute_buffer._buffer._buffer);\n      for (let attrib of attribute_buffer._attributes) {\n        gl.vertexAttribPointer(\n            attrib._attrib_index, attrib._component_count, attrib._component_type,\n            attrib._normalized, attrib._stride, attrib._byte_offset);\n      }\n    }\n\n    if (primitive._index_buffer) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, primitive._index_buffer._buffer);\n    } else {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n  }\n\n  _bindMaterialState(material, prev_material = null) {\n    let gl = this._gl;\n\n    let state = material._state;\n    let prev_state = prev_material ? prev_material._state : ~state;\n\n    // Return early if both materials use identical state\n    if (state == prev_state)\n        return;\n\n    // Any caps bits changed?\n    if (material._capsDiff(prev_state)) {\n      setCap(gl, gl.CULL_FACE, CAP.CULL_FACE, prev_state, state);\n      setCap(gl, gl.BLEND, CAP.BLEND, prev_state, state);\n      setCap(gl, gl.DEPTH_TEST, CAP.DEPTH_TEST, prev_state, state);\n      setCap(gl, gl.STENCIL_TEST, CAP.STENCIL_TEST, prev_state, state);\n\n      let color_mask_change = (state & CAP.COLOR_MASK) - (prev_state & CAP.COLOR_MASK);\n      if (color_mask_change) {\n        let mask = color_mask_change > 1;\n        this._color_mask_needs_reset = !mask;\n        gl.colorMask(mask, mask, mask, mask);\n      }\n\n      let depth_mask_change = (state & CAP.DEPTH_MASK) - (prev_state & CAP.DEPTH_MASK);\n      if (depth_mask_change) {\n        this._depth_mask_needs_reset = !(depth_mask_change > 1);\n        gl.depthMask(depth_mask_change > 1);\n      }\n\n      let stencil_mask_change = (state & CAP.STENCIL_MASK) - (prev_state & CAP.STENCIL_MASK);\n      if (stencil_mask_change) {\n        gl.stencilMask(stencil_mask_change > 1);\n      }\n    }\n\n    // Blending enabled and blend func changed?\n    if (material._blendDiff(prev_state)) {\n      gl.blendFunc(material.blend_func_src, material.blend_func_dst);\n    }\n\n    // Depth testing enabled and depth func changed?\n    if (material._depthFuncDiff(prev_state)) {\n      gl.depthFunc(material.depth_func);\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/renderer.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nconst GL = WebGLRenderingContext; // For enums\n\nexport const CAP = {\n  // Enable caps\n  CULL_FACE:    0x001,\n  BLEND:        0x002,\n  DEPTH_TEST:   0x004,\n  STENCIL_TEST: 0x008,\n  COLOR_MASK:   0x010,\n  DEPTH_MASK:   0x020,\n  STENCIL_MASK: 0x040\n};\n\nexport const MAT_STATE = {\n  CAPS_RANGE:      0x000000FF,\n  BLEND_SRC_SHIFT:  8,\n  BLEND_SRC_RANGE:  0x00000F00,\n  BLEND_DST_SHIFT:  12,\n  BLEND_DST_RANGE:  0x0000F000,\n  BLEND_FUNC_RANGE: 0x0000FF00,\n  DEPTH_FUNC_SHIFT: 16,\n  DEPTH_FUNC_RANGE: 0x000F0000,\n};\n\nexport const RENDER_ORDER = {\n  // Render opaque objects first.\n  OPAQUE:      0,\n\n  // Render the sky after all opaque object to save fill rate.\n  SKY:         1,\n\n  // Render transparent objects next so that the opaqe objects show through.\n  TRANSPARENT: 2,\n\n  // Finally render purely additive effects like pointer rays so that they\n  // can render without depth mask.\n  ADDITIVE:    3,\n\n  // Render order will be picked based on the material properties.\n  DEFAULT:     4,\n};\n\nexport function stateToBlendFunc(state, mask, shift) {\n  let value = (state & mask) >> shift;\n  switch (value) {\n    case 0:\n    case 1:\n      return value;\n    default:\n      return (value - 2) + GL.SRC_COLOR;\n  }\n}\n\nexport class MaterialState {\n  constructor() {\n    this._state = CAP.CULL_FACE |\n                  CAP.DEPTH_TEST |\n                  CAP.COLOR_MASK |\n                  CAP.DEPTH_MASK;\n\n    // Use a fairly commonly desired blend func as the default.\n    this.blend_func_src = GL.SRC_ALPHA;\n    this.blend_func_dst = GL.ONE_MINUS_SRC_ALPHA;\n\n    this.depth_func = GL.LESS;\n  }\n\n  get cull_face() { return !!(this._state & CAP.CULL_FACE); }\n  set cull_face(value) {\n    if (value) {\n      this._state |= CAP.CULL_FACE;\n    } else {\n      this._state &= ~CAP.CULL_FACE;\n    }\n  }\n\n  get blend() { return !!(this._state & CAP.BLEND); }\n  set blend(value) {\n    if (value) {\n      this._state |= CAP.BLEND;\n    } else {\n      this._state &= ~CAP.BLEND;\n    }\n  }\n\n  get depth_test() { return !!(this._state & CAP.DEPTH_TEST); }\n  set depth_test(value) {\n    if (value) {\n      this._state |= CAP.DEPTH_TEST;\n    } else {\n      this._state &= ~CAP.DEPTH_TEST;\n    }\n  }\n\n  get stencil_test() { return !!(this._state & CAP.STENCIL_TEST); }\n  set stencil_test(value) {\n    if (value) {\n      this._state |= CAP.STENCIL_TEST;\n    } else {\n      this._state &= ~CAP.STENCIL_TEST;\n    }\n  }\n\n  get color_mask() { return !!(this._state & CAP.COLOR_MASK); }\n  set color_mask(value) {\n    if (value) {\n      this._state |= CAP.COLOR_MASK;\n    } else {\n      this._state &= ~CAP.COLOR_MASK;\n    }\n  }\n\n  get depth_mask() { return !!(this._state & CAP.DEPTH_MASK); }\n  set depth_mask(value) {\n    if (value) {\n      this._state |= CAP.DEPTH_MASK;\n    } else {\n      this._state &= ~CAP.DEPTH_MASK;\n    }\n  }\n\n  get depth_func() {\n    return ((this._state & MAT_STATE.DEPTH_FUNC_RANGE) >> MAT_STATE.DEPTH_FUNC_SHIFT) + WebGLRenderingContext.NEVER;\n  }\n  set depth_func(value) {\n    value = value - WebGLRenderingContext.NEVER;\n    this._state &= ~MAT_STATE.DEPTH_FUNC_RANGE;\n    this._state |= (value << MAT_STATE.DEPTH_FUNC_SHIFT)\n  }\n\n  get stencil_mask() { return !!(this._state & CAP.STENCIL_MASK); }\n  set stencil_mask(value) {\n    if (value) {\n      this._state |= CAP.STENCIL_MASK;\n    } else {\n      this._state &= ~CAP.STENCIL_MASK;\n    }\n  }\n\n  get blend_func_src() {\n    return stateToBlendFunc(this._state, MAT_STATE.BLEND_SRC_RANGE, MAT_STATE.BLEND_SRC_SHIFT);\n  }\n  set blend_func_src(value) {\n    switch(value) {\n      case 0:\n      case 1:\n        break;\n      default:\n        value = (value - WebGLRenderingContext.SRC_COLOR) + 2;\n    }\n    this._state &= ~MAT_STATE.BLEND_SRC_RANGE;\n    this._state |= (value << MAT_STATE.BLEND_SRC_SHIFT);\n  }\n\n  get blend_func_dst() {\n    return stateToBlendFunc(this._state, MAT_STATE.BLEND_DST_RANGE, MAT_STATE.BLEND_DST_SHIFT);\n  }\n  set blend_func_dst(value) {\n    switch(value) {\n      case 0:\n      case 1:\n        break;\n      default:\n        value = (value - WebGLRenderingContext.SRC_COLOR) + 2;\n    }\n    this._state &= ~MAT_STATE.BLEND_DST_RANGE;\n    this._state |= (value << MAT_STATE.BLEND_DST_SHIFT);\n  }\n}\n\nclass MaterialSampler {\n  constructor(uniform_name) {\n    this._uniform_name = uniform_name;\n    this._texture = null;\n  }\n\n  get texture() {\n    return this._texture;\n  }\n\n  set texture(value) {\n    this._texture = value;\n  }\n}\n\nclass MaterialUniform {\n  constructor(uniform_name, default_value, length) {\n    this._uniform_name = uniform_name;\n    this._value = default_value;\n    this._length = length;\n    if (!this._length) {\n      if (default_value instanceof Array) {\n        this._length = default_value.length;\n      } else {\n        this._length = 1;\n      }\n    }\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n}\n\nexport class Material {\n  constructor() {\n    this.state = new MaterialState;\n    this.render_order = RENDER_ORDER.DEFAULT;\n    this._samplers = [];\n    this._uniforms = [];\n  }\n\n  defineSampler(uniform_name) {\n    let sampler = new MaterialSampler(uniform_name);\n    this._samplers.push(sampler);\n    return sampler;\n  }\n\n  defineUniform(uniform_name, default_value=null, length=0) {\n    let uniform = new MaterialUniform(uniform_name, default_value, length);\n    this._uniforms.push(uniform);\n    return uniform;\n  }\n\n  get material_name() {\n    return null;\n  }\n\n  get vertex_source() {\n    return null;\n  }\n\n  get fragment_source() {\n    return null\n  }\n\n  getProgramDefines(render_primitive) {\n    return {};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/material.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nexport class Program {\n  constructor(gl, vert_src, frag_src, attrib_map, defines) {\n    this._gl = gl;\n    this.program = gl.createProgram();\n    this.attrib = null;\n    this.uniform = null;\n    this.defines = {};\n\n    this._first_use = true;\n    this._next_use_callbacks = [];\n\n    let defines_string = '';\n    if (defines) {\n      for (let define in defines) {\n        this.defines[define] = defines[define];\n        defines_string += `#define ${define} ${defines[define]}\\n`;\n      }\n    }\n\n    this._vert_shader = gl.createShader(gl.VERTEX_SHADER);\n    gl.attachShader(this.program, this._vert_shader);\n    gl.shaderSource(this._vert_shader, defines_string + vert_src);\n    gl.compileShader(this._vert_shader);\n\n    this._frag_shader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.attachShader(this.program, this._frag_shader);\n    gl.shaderSource(this._frag_shader, defines_string + frag_src);\n    gl.compileShader(this._frag_shader);\n\n    if (attrib_map) {\n      this.attrib = {};\n      for (let attrib_name in attrib_map) {\n        gl.bindAttribLocation(this.program, attrib_map[attrib_name], attrib_name);\n        this.attrib[attrib_name] = attrib_map[attrib_name];\n      }\n    }\n\n    gl.linkProgram(this.program);\n  }\n\n  onNextUse(callback) {\n    this._next_use_callbacks.push(callback);\n  }\n\n  use() {\n    let gl = this._gl;\n\n    // If this is the first time the program has been used do all the error checking and\n    // attrib/uniform querying needed.\n    if (this._first_use) {\n      this._first_use = false;\n      if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n        if (!gl.getShaderParameter(this._vert_shader, gl.COMPILE_STATUS)) {\n          console.error('Vertex shader compile error: ' + gl.getShaderInfoLog(this._vert_shader));\n        } else if (!gl.getShaderParameter(this._frag_shader, gl.COMPILE_STATUS)) {\n          console.error('Fragment shader compile error: ' + gl.getShaderInfoLog(this._frag_shader));\n        } else {\n          console.error('Program link error: ' + gl.getProgramInfoLog(this.program));\n        }\n        gl.deleteProgram(this.program);\n        this.program = null;\n      } else {\n        if (!this.attrib) {\n          this.attrib = {};\n          let attrib_count = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n          for (let i = 0; i < attrib_count; i++) {\n            let attrib_info = gl.getActiveAttrib(this.program, i);\n            this.attrib[attrib_info.name] = gl.getAttribLocation(this.program, attrib_info.name);\n          }\n        }\n\n        this.uniform = {};\n        let uniform_count = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        let uniform_name = '';\n        for (let i = 0; i < uniform_count; i++) {\n          let uniform_info = gl.getActiveUniform(this.program, i);\n          uniform_name = uniform_info.name.replace('[0]', '');\n          this.uniform[uniform_name] = gl.getUniformLocation(this.program, uniform_name);\n        }\n      }\n      gl.deleteShader(this._vert_shader);\n      gl.deleteShader(this._frag_shader);\n    }\n\n    gl.useProgram(this.program);\n\n    if (this._next_use_callbacks.length) {\n      for (let callback of this._next_use_callbacks) {\n        callback(this);\n      }\n      this._next_use_callbacks = [];\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/program.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nconst GL = WebGLRenderingContext; // For enums\n\nexport class TextureSampler {\n  constructor() {\n    this.min_filter = null;\n    this.mag_filter = null;\n    this.wrap_s = null;\n    this.wrap_t = null;\n  }\n}\n\nexport class Texture {\n  constructor() {\n    this.sampler = new TextureSampler();\n    this.mipmap = true;\n    //TODO: Anisotropy\n  }\n\n  get format() {\n    return GL.RGBA\n  }\n\n  get width() {\n    return 0;\n  }\n\n  get height() {\n    return 0;\n  }\n\n  get texture_key() {\n    return null;\n  }\n}\n\nexport class ImageTexture extends Texture {\n  constructor(img) {\n    super();\n\n    this._img = img;\n\n    if (img.src && img.complete) {\n      if (img.naturalWidth) {\n        this._promise = Promise.resolve(this);\n      } else {\n        this._promise = Promise.reject(\"Image provided had failed to load.\");\n      }\n    } else {\n      this._promise = new Promise((resolve, reject) => {\n        img.addEventListener('load', () => resolve(this));\n        img.addEventListener('error', reject);\n      });\n    }\n  }\n\n  get format() {\n    // TODO: Can be RGB in some cases.\n    return GL.RGBA;\n  }\n\n  get width() {\n    return this._img.width;\n  }\n\n  get height() {\n    return this._img.height;\n  }\n\n  waitForComplete() {\n    return this._promise;\n  }\n\n  get texture_key() {\n    return this._img.src;\n  }\n}\n\nexport class UrlTexture extends ImageTexture {\n  constructor(url) {\n    let img = new Image();\n    super(img);\n    img.src = url;\n  }\n}\n\nexport class BlobTexture extends ImageTexture {\n  constructor(blob) {\n    let img = new Image();\n    super(img);\n    img.src = window.URL.createObjectURL(blob);\n  }\n}\n\nlet next_data_texture_index = 0;\n\nexport class DataTexture extends Texture {\n  constructor(data, width, height, format = GL.RGBA, type = GL.UNSIGNED_BYTE) {\n    super();\n\n    this._data = data;\n    this._width = width;\n    this._height = height;\n    this._format = format;\n    this._type = type;\n    this._key = `DATA_${next_data_texture_index}`;\n    next_data_texture_index++;\n  }\n\n  get format() {\n    return this._format;\n  }\n\n  get width() {\n    return this._width;\n  }\n\n  get height() {\n    return this._height;\n  }\n\n  get texture_key() {\n    return this._key;\n  }\n}\n\nexport class ColorTexture extends DataTexture {\n  constructor(r, g, b, a) {\n    let color_data = new Uint8Array([r*255.0, g*255.0, b*255.0, a*255.0]);\n    super(color_data, 1, 1);\n\n    this.mipmap = false;\n    this._key = `COLOR_${color_data[0]}_${color_data[1]}_${color_data[2]}_${color_data[3]}`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/texture.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { Primitive, PrimitiveAttribute } from '../core/primitive.js'\n\nconst GL = WebGLRenderingContext; // For enums\n\nconst temp_vec3 = vec3.create();\n\nexport class PrimitiveStream {\n  constructor(options) {\n    this._vertices = [];\n    this._indices = [];\n\n    this._geometry_started = false;\n\n    this._vertex_offset = 0;\n    this._vertex_index = 0;\n    this._high_index = 0;\n\n    this._flip_winding = false;\n    this._invert_normals = false;\n    this._transform = null;\n    this._normal_transform = null;\n    this._min = null;\n    this._max = null;\n  }\n\n  set flip_winding(value) {\n    if (this._geometry_started) {\n      throw new Error(`Cannot change flip_winding before ending the current geometry.`);\n    }\n    this._flip_winding = value;\n  }\n\n  get flip_winding() {\n    this._flip_winding;\n  }\n\n  set invert_normals(value) {\n    if (this._geometry_started) {\n      throw new Error(`Cannot change invert_normals before ending the current geometry.`);\n    }\n    this._invert_normals = value;\n  }\n\n  get invert_normals() {\n    this._invert_normals;\n  }\n\n  set transform(value) {\n    if (this._geometry_started) {\n      throw new Error(`Cannot change transform before ending the current geometry.`);\n    }\n    this._transform = value;\n    if (this._transform) {\n      if (!this._normal_transform) {\n        this._normal_transform = mat3.create();\n      }\n      mat3.fromMat4(this._normal_transform, this._transform);\n    }\n  }\n\n  get transform() {\n    this._transform;\n  }\n\n  startGeometry() {\n    if (this._geometry_started) {\n      throw new Error(`Attempted to start a new geometry before the previous one was ended.`);\n    }\n\n    this._geometry_started = true;\n    this._vertex_index = 0;\n    this._high_index = 0;\n  }\n\n  endGeometry() {\n    if (!this._geometry_started) {\n      throw new Error(`Attempted to end a geometry before one was started.`);\n    }\n\n    if (this._high_index >= this._vertex_index) {\n      throw new Error(`Geometry contains indices that are out of bounds. (Contains an index of ${this._high_index} when the vertex count is ${this._vertex_index})`);\n    }\n\n    this._geometry_started = false;\n    this._vertex_offset += this._vertex_index;\n\n    // TODO: Anything else need to be done to finish processing here?\n  }\n\n  pushVertex(x, y, z, u, v, nx, ny, nz) {\n    if (!this._geometry_started) {\n      throw new Error(`Cannot push vertices before calling startGeometry().`);\n    }\n\n    // Transform the incoming vertex if we have a transformation matrix\n    if (this._transform) {\n      temp_vec3[0] = x;\n      temp_vec3[1] = y;\n      temp_vec3[2] = z;\n      vec3.transformMat4(temp_vec3, temp_vec3, this._transform);\n      x = temp_vec3[0];\n      y = temp_vec3[1];\n      z = temp_vec3[2];\n\n      temp_vec3[0] = nx;\n      temp_vec3[1] = ny;\n      temp_vec3[2] = nz;\n      vec3.transformMat3(temp_vec3, temp_vec3, this._normal_transform);\n      nx = temp_vec3[0];\n      ny = temp_vec3[1];\n      nz = temp_vec3[2];\n    }\n\n    if (this._invert_normals) {\n      nx *= -1.0;\n      ny *= -1.0;\n      nz *= -1.0;\n    }\n\n    this._vertices.push(x, y, z, u, v, nx, ny, nz);\n\n    if (this._min) {\n      this._min[0] = Math.min(this._min[0], x);\n      this._min[1] = Math.min(this._min[1], y);\n      this._min[2] = Math.min(this._min[2], z);\n      this._max[0] = Math.max(this._max[0], x);\n      this._max[1] = Math.max(this._max[1], y);\n      this._max[2] = Math.max(this._max[2], z);\n    } else {\n      this._min = vec3.fromValues(x, y, z);\n      this._max = vec3.fromValues(x, y, z);\n    }\n\n    return this._vertex_index++;\n  }\n\n  get next_vertex_index() {\n    return this._vertex_index;\n  }\n\n  pushTriangle(idx_a, idx_b, idx_c) {\n    if (!this._geometry_started) {\n      throw new Error(`Cannot push triangles before calling startGeometry().`);\n    }\n\n    this._high_index = Math.max(this._high_index, idx_a, idx_b, idx_c);\n\n    idx_a += this._vertex_offset;\n    idx_b += this._vertex_offset;\n    idx_c += this._vertex_offset;\n\n    if (this._flip_winding) {\n      this._indices.push(idx_c, idx_b, idx_a);\n    } else {\n      this._indices.push(idx_a, idx_b, idx_c);\n    }\n  }\n\n  clear() {\n    if (this._geometry_started) {\n      throw new Error(`Cannot clear before ending the current geometry.`);\n    }\n\n    this._vertices = [];\n    this._indices = [];\n    this._vertex_offset = 0;\n    this._min = null;\n    this._max = null;\n  }\n\n  finishPrimitive(renderer) {\n    if (!this._vertex_offset) {\n      throw new Error(`Attempted to call finishPrimitive() before creating any geometry.`);\n    }\n\n    let vertex_buffer = renderer.createRenderBuffer(GL.ARRAY_BUFFER, new Float32Array(this._vertices));\n    let index_buffer = renderer.createRenderBuffer(GL.ELEMENT_ARRAY_BUFFER, new Uint16Array(this._indices));\n\n    let attribs = [\n      new PrimitiveAttribute(\"POSITION\", vertex_buffer, 3, GL.FLOAT, 32, 0),\n      new PrimitiveAttribute(\"TEXCOORD_0\", vertex_buffer, 2, GL.FLOAT, 32, 12),\n      new PrimitiveAttribute(\"NORMAL\", vertex_buffer, 3, GL.FLOAT, 32, 20),\n    ];\n  \n    let primitive = new Primitive(attribs, this._indices.length);\n    primitive.setIndexBuffer(index_buffer);\n    primitive.setBounds(this._min, this._max);\n\n    return primitive;\n  }\n}\n\nexport class GeometryBuilderBase {\n  constructor(primitive_stream) {\n    if (primitive_stream) {\n      this._stream = primitive_stream;\n    } else {\n      this._stream = new PrimitiveStream();\n    }\n  }\n\n  set primitive_stream(value) {\n    this._stream = value;\n  }\n\n  get primitive_stream() {\n    return this._stream;\n  }\n\n  finishPrimitive(renderer) {\n    return this._stream.finishPrimitive(renderer);\n  }\n\n  clear() {\n    this._stream.clear();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/primitive-stream.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nexport class PrimitiveAttribute {\n  constructor(name, buffer, component_count, component_type, stride, byte_offset) {\n    this.name = name;\n    this.buffer = buffer;\n    this.component_count = component_count || 3;\n    this.component_type = component_type || 5126; // gl.FLOAT;\n    this.stride = stride || 0;\n    this.byte_offset = byte_offset || 0;\n    this.normalized = false;\n  }\n}\n\nexport class Primitive {\n  constructor(attributes, element_count, mode) {\n    this.attributes = attributes || [];\n    this.element_count = element_count || 0;\n    this.mode = mode || 4; // gl.TRIANGLES;\n    this.index_buffer = null;\n    this.index_byte_offset = 0;\n    this.index_type = 0;\n    this._min = null;\n    this._max = null;\n  }\n\n  setIndexBuffer(index_buffer, byte_offset, index_type) {\n    this.index_buffer = index_buffer;\n    this.index_byte_offset = byte_offset || 0;\n    this.index_type = index_type || 5123; // gl.UNSIGNED_SHORT;\n  }\n\n  setBounds(min, max) {\n    this._min = vec3.clone(min);\n    this._max = vec3.clone(max);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/core/primitive.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { PrimitiveStream, GeometryBuilderBase } from './primitive-stream.js'\n\nexport class BoxBuilder extends GeometryBuilderBase {\n  pushBox(min, max) {\n    let stream = this.primitive_stream;\n\n    let w = max[0] - min[0];\n    let h = max[1] - min[1];\n    let d = max[2] - min[2];\n\n    let wh = w * 0.5;\n    let hh = h * 0.5;\n    let dh = d * 0.5;\n\n    let cx = min[0] + wh;\n    let cy = min[1] + hh;\n    let cz = min[2] + dh;\n\n    stream.startGeometry();\n\n    // Bottom\n    let idx = stream.next_vertex_index;\n    stream.pushTriangle(idx, idx+1, idx+2);\n    stream.pushTriangle(idx, idx+2, idx+3);\n\n    //                 X       Y       Z       U    V     NX    NY   NZ \n    stream.pushVertex(-wh+cx, -hh+cy, -dh+cz,  0.0, 1.0,  0.0, -1.0, 0.0);\n    stream.pushVertex(+wh+cx, -hh+cy, -dh+cz,  1.0, 1.0,  0.0, -1.0, 0.0);\n    stream.pushVertex(+wh+cx, -hh+cy, +dh+cz,  1.0, 0.0,  0.0, -1.0, 0.0);\n    stream.pushVertex(-wh+cx, -hh+cy, +dh+cz,  0.0, 0.0,  0.0, -1.0, 0.0);\n\n    // Top\n    idx = stream.next_vertex_index;\n    stream.pushTriangle(idx, idx+2, idx+1);\n    stream.pushTriangle(idx, idx+3, idx+2);\n\n    stream.pushVertex(-wh+cx, +hh+cy, -dh+cz,  0.0, 0.0,  0.0, 1.0, 0.0);\n    stream.pushVertex(+wh+cx, +hh+cy, -dh+cz,  1.0, 0.0,  0.0, 1.0, 0.0);\n    stream.pushVertex(+wh+cx, +hh+cy, +dh+cz,  1.0, 1.0,  0.0, 1.0, 0.0);\n    stream.pushVertex(-wh+cx, +hh+cy, +dh+cz,  0.0, 1.0,  0.0, 1.0, 0.0);\n\n    // Left\n    idx = stream.next_vertex_index;\n    stream.pushTriangle(idx, idx+2, idx+1);\n    stream.pushTriangle(idx, idx+3, idx+2);\n\n    stream.pushVertex(-wh+cx, -hh+cy, -dh+cz,  0.0, 1.0,  -1.0, 0.0, 0.0);\n    stream.pushVertex(-wh+cx, +hh+cy, -dh+cz,  0.0, 0.0,  -1.0, 0.0, 0.0);\n    stream.pushVertex(-wh+cx, +hh+cy, +dh+cz,  1.0, 0.0,  -1.0, 0.0, 0.0);\n    stream.pushVertex(-wh+cx, -hh+cy, +dh+cz,  1.0, 1.0,  -1.0, 0.0, 0.0);\n\n    // Right\n    idx = stream.next_vertex_index;\n    stream.pushTriangle(idx, idx+1, idx+2);\n    stream.pushTriangle(idx, idx+2, idx+3);\n\n    stream.pushVertex(+wh+cx, -hh+cy, -dh+cz,  1.0, 1.0,  1.0, 0.0, 0.0);\n    stream.pushVertex(+wh+cx, +hh+cy, -dh+cz,  1.0, 0.0,  1.0, 0.0, 0.0);\n    stream.pushVertex(+wh+cx, +hh+cy, +dh+cz,  0.0, 0.0,  1.0, 0.0, 0.0);\n    stream.pushVertex(+wh+cx, -hh+cy, +dh+cz,  0.0, 1.0,  1.0, 0.0, 0.0);\n\n    // Back\n    idx = stream.next_vertex_index;\n    stream.pushTriangle(idx, idx+2, idx+1);\n    stream.pushTriangle(idx, idx+3, idx+2);\n\n    stream.pushVertex(-wh+cx, -hh+cy, -dh+cz,  1.0, 1.0,  0.0, 0.0, -1.0);\n    stream.pushVertex(+wh+cx, -hh+cy, -dh+cz,  0.0, 1.0,  0.0, 0.0, -1.0);\n    stream.pushVertex(+wh+cx, +hh+cy, -dh+cz,  0.0, 0.0,  0.0, 0.0, -1.0);\n    stream.pushVertex(-wh+cx, +hh+cy, -dh+cz,  1.0, 0.0,  0.0, 0.0, -1.0);\n\n    // Front\n    idx = stream.next_vertex_index;\n    stream.pushTriangle(idx, idx+1, idx+2);\n    stream.pushTriangle(idx, idx+2, idx+3);\n\n    stream.pushVertex(-wh+cx, -hh+cy, +dh+cz,  0.0, 1.0,  0.0, 0.0, 1.0);\n    stream.pushVertex(+wh+cx, -hh+cy, +dh+cz,  1.0, 1.0,  0.0, 0.0, 1.0);\n    stream.pushVertex(+wh+cx, +hh+cy, +dh+cz,  1.0, 0.0,  0.0, 0.0, 1.0);\n    stream.pushVertex(-wh+cx, +hh+cy, +dh+cz,  0.0, 0.0,  0.0, 0.0, 1.0);\n\n    stream.endGeometry();\n  }\n\n  pushCube(center = [0, 0, 0], size = 1.0) {\n    let hs = size * 0.5;\n    this.pushBox([center[0] - hs, center[1] - hs, center[2] - hs],\n                 [center[0] + hs, center[1] + hs, center[2] + hs]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/geometry/box-builder.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { Material } from '../core/material.js'\nimport { ATTRIB_MASK } from '../core/renderer.js'\n\nconst VERTEX_SOURCE = `\nattribute vec3 POSITION, NORMAL;\nattribute vec2 TEXCOORD_0, TEXCOORD_1;\n\nuniform vec3 CAMERA_POSITION;\nuniform vec3 LIGHT_DIRECTION;\n\nvarying vec3 vLight; // Vector from vertex to light.\nvarying vec3 vView; // Vector from vertex to camera.\nvarying vec2 vTex;\n\n#ifdef USE_NORMAL_MAP\nattribute vec4 TANGENT;\nvarying mat3 vTBN;\n#else\nvarying vec3 vNorm;\n#endif\n\n#ifdef USE_VERTEX_COLOR\nattribute vec4 COLOR_0;\nvarying vec4 vCol;\n#endif\n\nvec4 vertex_main(mat4 proj, mat4 view, mat4 model) {\n  vec3 n = normalize(vec3(model * vec4(NORMAL, 0.0)));\n#ifdef USE_NORMAL_MAP\n  vec3 t = normalize(vec3(model * vec4(TANGENT.xyz, 0.0)));\n  vec3 b = cross(n, t) * TANGENT.w;\n  vTBN = mat3(t, b, n);\n#else\n  vNorm = n;\n#endif\n\n#ifdef USE_VERTEX_COLOR\n  vCol = COLOR_0;\n#endif\n\n  vTex = TEXCOORD_0;\n  vec4 mPos = model * vec4(POSITION, 1.0);\n  vLight = -LIGHT_DIRECTION;\n  vView = CAMERA_POSITION - mPos.xyz;\n  return proj * view * mPos;\n}`;\n\n// These equations are borrowed with love from this docs from Epic because I\n// just don't have anything novel to bring to the PBR scene.\n// http://blog.selfshadow.com/publications/s2013-shading-course/karis/s2013_pbs_epic_notes_v2.pdf\nconst EPIC_PBR_FUNCTIONS = `\nvec3 lambertDiffuse(vec3 cDiff) {\n  return cDiff / M_PI;\n}\n\nfloat specD(float a, float nDotH) {\n  float aSqr = a * a;\n  float f = ((nDotH * nDotH) * (aSqr - 1.0) + 1.0);\n  return aSqr / (M_PI * f * f);\n}\n\nfloat specG(float roughness, float nDotL, float nDotV) {\n  float k = (roughness + 1.0) * (roughness + 1.0) / 8.0;\n  float gl = nDotL / (nDotL * (1.0 - k) + k);\n  float gv = nDotV / (nDotV * (1.0 - k) + k);\n  return gl * gv;\n}\n\nvec3 specF(float vDotH, vec3 F0) {\n  float exponent = (-5.55473 * vDotH - 6.98316) * vDotH;\n  float base = 2.0;\n  return F0 + (1.0 - F0) * pow(base, exponent);\n}`;\n\nconst FRAGMENT_SOURCE = `\n#define M_PI 3.14159265\n\nuniform vec4 baseColorFactor;\n#ifdef USE_BASE_COLOR_MAP\nuniform sampler2D baseColorTex;\n#endif\n\nvarying vec3 vLight;\nvarying vec3 vView;\nvarying vec2 vTex;\n\n#ifdef USE_VERTEX_COLOR\nvarying vec4 vCol;\n#endif\n\n#ifdef USE_NORMAL_MAP\nuniform sampler2D normalTex;\nvarying mat3 vTBN;\n#else\nvarying vec3 vNorm;\n#endif\n\n#ifdef USE_METAL_ROUGH_MAP\nuniform sampler2D metallicRoughnessTex;\n#endif\nuniform vec2 metallicRoughnessFactor;\n\n#ifdef USE_OCCLUSION\nuniform sampler2D occlusionTex;\nuniform float occlusionStrength;\n#endif\n\n#ifdef USE_EMISSIVE\nuniform sampler2D emissiveTex;\nuniform vec3 emissiveFactor;\n#endif\n\nuniform vec3 LIGHT_COLOR;\n\nconst vec3 dielectricSpec = vec3(0.04);\nconst vec3 black = vec3(0.0);\n\n${EPIC_PBR_FUNCTIONS}\n\nvec4 fragment_main() {\n#ifdef USE_BASE_COLOR_MAP\n  vec4 baseColor = texture2D(baseColorTex, vTex) * baseColorFactor;\n#else\n  vec4 baseColor = baseColorFactor;\n#endif\n\n#ifdef USE_VERTEX_COLOR\n  baseColor *= vCol;\n#endif\n\n#ifdef USE_NORMAL_MAP\n  vec3 n = texture2D(normalTex, vTex).rgb;\n  n = normalize(vTBN * (2.0 * n - 1.0));\n#else\n  vec3 n = normalize(vNorm);\n#endif\n\n#ifdef FULLY_ROUGH\n  float metallic = 0.0;\n#else\n  float metallic = metallicRoughnessFactor.x;\n#endif\n\n  float roughness = metallicRoughnessFactor.y;\n\n#ifdef USE_METAL_ROUGH_MAP\n  vec4 metallicRoughness = texture2D(metallicRoughnessTex, vTex);\n  metallic *= metallicRoughness.b;\n  roughness *= metallicRoughness.g;\n#endif\n  \n  vec3 l = normalize(vLight);\n  vec3 v = normalize(vView);\n  vec3 h = normalize(l+v);\n\n  float nDotL = clamp(dot(n, l), 0.001, 1.0);\n  float nDotV = abs(dot(n, v)) + 0.001;\n  float nDotH = max(dot(n, h), 0.0);\n  float vDotH = max(dot(v, h), 0.0);\n\n  // From GLTF Spec\n  vec3 cDiff = mix(baseColor.rgb * (1.0 - dielectricSpec.r), black, metallic); // Diffuse color\n  vec3 F0 = mix(dielectricSpec, baseColor.rgb, metallic); // Specular color\n  float a = roughness * roughness;\n\n#ifdef FULLY_ROUGH\n  vec3 specular = F0 * 0.45;\n#else\n  vec3 F = specF(vDotH, F0);\n  float D = specD(a, nDotH);\n  float G = specG(roughness, nDotL, nDotV);\n  vec3 specular = (D * F * G) / (4.0 * nDotL * nDotV);\n#endif\n  float halfLambert = dot(n, l) * 0.5 + 0.5;\n  halfLambert *= halfLambert;\n\n  vec3 color = (halfLambert * LIGHT_COLOR * lambertDiffuse(cDiff)) + specular;\n\n#ifdef USE_OCCLUSION\n  float occlusion = texture2D(occlusionTex, vTex).r;\n  color = mix(color, color * occlusion, occlusionStrength);\n#endif\n\n#ifdef USE_EMISSIVE\n  color += texture2D(emissiveTex, vTex).rgb * emissiveFactor;\n#endif\n\n  // gamma correction\n  color = pow(color, vec3(1.0/2.2));\n\n  return vec4(color, baseColor.a);\n}`;\n\nexport class PbrMaterial extends Material {\n  constructor() {\n    super();\n\n    this.base_color = this.defineSampler(\"baseColorTex\");\n    this.metallic_roughness = this.defineSampler(\"metallicRoughnessTex\");\n    this.normal = this.defineSampler(\"normalTex\");\n    this.occlusion = this.defineSampler(\"occlusionTex\");\n    this.emissive = this.defineSampler(\"emissiveTex\");\n\n    this.base_color_factor = this.defineUniform(\"baseColorFactor\", [1.0, 1.0, 1.0, 1.0]);\n    this.metallic_roughness_factor = this.defineUniform(\"metallicRoughnessFactor\", [1.0, 1.0]);\n    this.occlusion_strength = this.defineUniform(\"occlusionStrength\", 1.0);\n    this.emissive_factor = this.defineUniform(\"emissiveFactor\", [0, 0, 0]);\n  }\n\n  get material_name() {\n    return 'PBR';\n  }\n\n  get vertex_source() {\n    return VERTEX_SOURCE;\n  }\n\n  get fragment_source() {\n    return FRAGMENT_SOURCE;\n  }\n\n  getProgramDefines(render_primitive) {\n    let program_defines = {};\n\n    if (render_primitive._attribute_mask & ATTRIB_MASK.COLOR_0) {\n      program_defines['USE_VERTEX_COLOR'] = 1;\n    }\n\n    if (render_primitive._attribute_mask & ATTRIB_MASK.TEXCOORD_0) {\n      if(this.base_color.texture) {\n        program_defines['USE_BASE_COLOR_MAP'] = 1;\n      }\n\n      if(this.normal.texture && (render_primitive._attribute_mask & ATTRIB_MASK.TANGENT)) {\n        program_defines['USE_NORMAL_MAP'] = 1;\n      }\n\n      if(this.metallic_roughness.texture) {\n        program_defines['USE_METAL_ROUGH_MAP'] = 1;\n      }\n\n      if(this.occlusion.texture) {\n        program_defines['USE_OCCLUSION'] = 1;\n      }\n\n      if(this.emissive.texture) {\n        program_defines['USE_EMISSIVE'] = 1;\n      }\n    }\n\n    if ((!this.metallic_roughness.texture ||\n         !(render_primitive._attribute_mask & ATTRIB_MASK.TEXCOORD_0)) &&\n        this.metallic_roughness_factor.value[1] == 1.0) {\n      program_defines['FULLY_ROUGH'] = 1;\n    }\n\n    return program_defines;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/materials/pbr.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { Renderer, RenderView } from '../core/renderer.js'\nimport { BoundsRenderer } from '../nodes/bounds-renderer.js'\nimport { InputRenderer } from '../nodes/input-renderer.js'\nimport { Skybox } from '../nodes/skybox.js'\nimport { StatsViewer } from '../nodes/stats-viewer.js'\nimport { Program } from '../core/program.js'\nimport { Node } from '../core/node.js'\nimport { GLTF2Loader } from '../loaders/gltf2.js'\n\nexport class WebXRView extends RenderView {\n  constructor(view, pose, layer) {\n    super(\n      view ? view.projectionMatrix : null,\n      (pose && view) ? pose.getViewMatrix(view) : null,\n      (layer && view) ? layer.getViewport(view) : null,\n      view ? view.eye : 'left'\n    );\n  }\n}\n\nexport class Scene extends Node {\n  constructor() {\n    super();\n\n    this._timestamp = -1;\n    this._frame_delta = 0;\n    this._stats_enabled = true;\n    this._stats_standing = false;\n    this._stats = null;\n    this._stage_bounds = null;\n    this._bounds_renderer = null;\n\n    this._renderer = null;\n\n    this._input_renderer = null;\n    this._reset_input_end_frame = true;\n\n    this._skybox = null;\n    this._gltf2_loader = null;\n  }\n\n  setRenderer(renderer) {\n    this._renderer = renderer;\n\n    // Set up a non-black clear color so that we can see if something renders\n    // wrong.\n    renderer.gl.clearColor(0.1, 0.2, 0.3, 1.0);\n\n    if (renderer) {\n      this._gltf2_loader = new GLTF2Loader(renderer);\n\n      if (this._skybox) {\n        this._skybox.setRenderer(renderer);\n      }\n\n      if (this._stats_enabled) {\n        this._stats = new StatsViewer(this._renderer);\n        this._stats.selectable = true;\n        this.addNode(this._stats);\n\n        if (this._stats_standing) {\n          this._stats.translation = [0, 1.4, -0.75];\n        } else {\n          this._stats.translation = [0, -0.3, -0.5];\n        }\n        this._stats.scale = [0.3, 0.3, 0.3];\n        quat.fromEuler(this._stats.rotation, -45.0, 0.0, 0.0);\n      }\n\n      if (this._stage_bounds) {\n        this._bounds_renderer = new BoundsRenderer(this._renderer);\n        this._bounds_renderer.stage_bounds = this._stage_bounds;\n      }\n\n      this._input_renderer = new InputRenderer(this._renderer);\n      this.addNode(this._input_renderer);\n\n      this.onLoadScene(this._renderer);\n    }\n  }\n\n  setSkybox(image_url) {\n    if (this._skybox) {\n      this.removeNode(this._skybox);\n      this._skybox = null;\n    }\n    if (image_url) {\n      this._skybox = new Skybox(image_url);\n      this.addNode(this._skybox);\n\n      if (this._renderer)\n        this._skybox.setRenderer(this._renderer);\n    }\n  }\n\n  loseRenderer() {\n    if (this._renderer) {\n      this._stats = null;\n      this.texture_loader = null;\n      this._renderer = null;\n      this._input_renderer = null;\n    }\n  }\n\n  get gltf2Loader() {\n    return this._gltf2_loader;\n  }\n\n  get inputRenderer() {\n    return this._input_renderer;\n  }\n\n  // Helper function that automatically adds the appropriate visual elements for\n  // all input sources.\n  updateInputSources(frame, frame_of_ref) {\n    // FIXME: Check for the existence of the API first. This check should be\n    // removed once the input API is part of the official spec.\n    if (!frame.session.getInputSources)\n      return;\n\n    let input_sources = frame.session.getInputSources();\n\n    for (let input_source of input_sources) {\n      let input_pose = frame.getInputPose(input_source, frame_of_ref);\n\n      if (!input_pose) {\n        continue;\n      }\n\n      // Any time that we have a grip matrix, we'll render a controller.\n      if (input_pose.gripMatrix) {\n        this._input_renderer.addController(input_pose.gripMatrix);\n      }\n\n      if (input_pose.pointerMatrix) {\n        if (input_source.pointerOrigin == \"hand\") {\n          // If we have a pointer matrix and the pointer origin is the users\n          // hand (as opposed to their head or the screen) use it to render\n          // a ray coming out of the input device to indicate the pointer\n          // direction.\n          this._input_renderer.addLaserPointer(input_pose.pointerMatrix);\n        }\n\n        // If we have a pointer matrix we can also use it to render a cursor\n        // for both handheld and gaze-based input sources.\n\n        // Check and see if the pointer is pointing at any selectable objects.\n        let hit_result = this.hitTest(input_pose.pointerMatrix);\n\n        if (hit_result) {\n          // Render a cursor at the intersection point.\n          this._input_renderer.addCursor(hit_result.intersection);\n        } else {\n          // Statically render the cursor 1 meters down the ray since we didn't\n          // hit anything selectable.\n          let cursor_pos = vec3.fromValues(0, 0, -1.0);\n          vec3.transformMat4(cursor_pos, cursor_pos, input_pose.pointerMatrix);\n          this._input_renderer.addCursor(cursor_pos);\n        }\n      }\n    }\n  }\n\n  enableStats(enable) {\n    if (enable == this._stats_enabled)\n      return;\n\n    this._stats_enabled = enable;\n\n    if (enable && this._renderer) {\n      this._stats = new StatsViewer(this._renderer);\n      this._stats.selectable = true;\n      this.addNode(this._stats);\n\n      if (this._stats_standing) {\n        this._stats.translation = [0, 1.4, -0.75];\n      } else {\n        this._stats.translation = [0, -0.3, -0.5];\n      }\n      this._stats.scale = [0.3, 0.3, 0.3];\n      quat.fromEuler(this._stats.rotation, -45.0, 0.0, 0.0);\n\n    } else if (!enable) {\n      if (this._stats) {\n        this.removeNode(this._stats);\n        this._stats = null;\n      }\n    }\n  }\n\n  standingStats(enable) {\n    this._stats_standing = enable;\n  }\n\n  setBounds(stage_bounds) {\n    this._stage_bounds = stage_bounds;\n    if (!this._bounds_renderer && this._renderer) {\n      this._bounds_renderer = new BoundsRenderer(this._renderer);\n    }\n    if (this._bounds_renderer) {\n      this._bounds_renderer.stage_bounds = stage_bounds;\n    }\n  }\n\n  draw(projection_mat, view_mat, eye) {\n    let view = new RenderView();\n    view.projection_matrix = projection_mat;\n    view.view_matrix = view_mat;\n    if (eye) {\n      view.eye = eye;\n    }\n\n    this.drawViewArray([view]);\n  }\n\n  /** Draws the scene into the base layer of the XRFrame's session */\n  drawXRFrame(xr_frame, pose) {\n    if (!this._renderer) {\n      return;\n    }\n\n    let gl = this._renderer.gl;\n    let session = xr_frame.session;\n    // Assumed to be a XRWebGLLayer for now.\n    let layer = session.baseLayer;\n\n    if(!gl) {\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, layer.framebuffer);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    if (!pose) {\n      return;\n    }\n\n    let views = [];\n    for (let view of xr_frame.views) {\n      views.push(new WebXRView(view, pose, layer));\n    }\n\n    this.drawViewArray(views);\n  }\n\n  drawViewArray(views) {\n    if (!this._renderer) {\n      // Don't draw when we don't have a valid context\n      return;\n    }\n\n    this.onDrawViews(this._renderer, this._timestamp, views);\n  }\n\n  startFrame() {\n    let prev_timestamp = this._timestamp;\n    this._timestamp = performance.now();\n    if (this._stats) {\n      this._stats.begin();\n    }\n\n    if (prev_timestamp >= 0) {\n      this._frame_delta = this._timestamp - prev_timestamp;\n    } else {\n      this._frame_delta = 0;\n    }\n\n    return this._frame_delta;\n  }\n\n  endFrame() {\n    if (this._input_renderer && this._reset_input_end_frame) {\n      this._input_renderer.reset();\n    }\n\n    if (this._stats) {\n      this._stats.end();\n    }\n  }\n\n  // Override to load scene resources on construction or context restore.\n  onLoadScene(renderer) {\n    return Promise.resolve();\n  }\n\n  // Override with custom scene rendering.\n  onDrawViews(renderer, timestamp, views) {\n    renderer.drawViews(views, this);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/scene.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/*\nThis file renders a passed in XRStageBounds object and attempts\nto render geometry on the floor to indicate where the bounds is.\nXRStageBounds' `geometry` is a series of XRStageBoundsPoints (in\nclockwise-order) with `x` and `z` properties for each.\n*/\n\nimport { Material } from '../core/material.js'\nimport { Node } from '../core/node.js'\nimport { Primitive, PrimitiveAttribute } from '../core/primitive.js'\n\nconst GL = WebGLRenderingContext; // For enums\n\nclass BoundsMaterial extends Material {\n  constructor() {\n    super();\n\n    this.state.blend = true;\n    this.state.blend_func_src = GL.SRC_ALPHA;\n    this.state.blend_func_dst = GL.ONE;\n    this.state.depth_test = false;\n  }\n\n  get material_name() {\n    return 'BOUNDS_RENDERER';\n  }\n\n  get vertex_source() {\n    return `\n    attribute vec2 POSITION;\n\n    vec4 vertex_main(mat4 proj, mat4 view, mat4 model) {\n      return proj * view * model * vec4(POSITION, 1.0);\n    }`;\n  }\n\n  get fragment_source() {\n    return `\n    precision mediump float;\n\n    vec4 fragment_main() {\n      return vec4(0.0, 1.0, 0.0, 0.3);\n    }`;\n  }\n}\n\nexport class BoundsRenderer extends Node {\n  constructor(renderer) {\n    super();\n\n    this._renderer = renderer;\n    this._stage_bounds = null;\n  }\n\n  get stage_bounds() {\n    return this._stage_bounds;\n  }\n\n  set stage_bounds(stage_bounds) {\n    if (this._stage_bounds) {\n      this.clearRenderPrimitives();\n    }\n    this._stage_bounds = stage_bounds;\n    if (!stage_bounds || stage_bounds.length === 0) {\n      return;\n    }\n\n    let verts = [];\n    let indices = [];\n\n    // Tessellate the bounding points from XRStageBounds and connect\n    // each point to a neighbor and 0,0,0.\n    const point_count = stage_bounds.geometry.length;\n    for (let i = 0; i < point_count; i++) {\n      const point = stage_bounds.geometry[i];\n      verts.push(point.x, 0, point.z);\n      indices.push(i, i === 0 ? point_count - 1 : i - 1, point_count);\n    }\n    // Center point\n    verts.push(0, 0, 0);\n\n    let vertex_buffer = this._renderer.createRenderBuffer(GL.ARRAY_BUFFER, new Float32Array(verts));\n    let index_buffer = this._renderer.createRenderBuffer(GL.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices));\n\n    let attribs = [\n      new PrimitiveAttribute(\"POSITION\", vertex_buffer, 3, gl.FLOAT, 12, 0),\n    ];\n  \n    let primitive = new Primitive(attribs, indices.length);\n    primitive.setIndexBuffer(index_buffer);\n\n    let render_primitive = this._renderer.createRenderPrimitive(primitive, new BoundsMaterial());\n    this.addRenderPrimitive(render_primitive);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/bounds-renderer.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { Material, RENDER_ORDER } from '../core/material.js'\nimport { Node } from '../core/node.js'\nimport { Primitive, PrimitiveAttribute } from '../core/primitive.js'\nimport { DataTexture } from '../core/texture.js'\n\nconst GL = WebGLRenderingContext; // For enums\n\n// Laser texture data, 48x1 RGBA (not premultiplied alpha). This represents a\n// \"cross section\" of the laser beam with a bright core and a feathered edge.\n// Borrowed from Chromium source code.\nconst LASER_TEXTURE_DATA = new Uint8Array([\n0xff,0xff,0xff,0x01,0xff,0xff,0xff,0x02,0xbf,0xbf,0xbf,0x04,0xcc,0xcc,0xcc,0x05,\n0xdb,0xdb,0xdb,0x07,0xcc,0xcc,0xcc,0x0a,0xd8,0xd8,0xd8,0x0d,0xd2,0xd2,0xd2,0x11,\n0xce,0xce,0xce,0x15,0xce,0xce,0xce,0x1a,0xce,0xce,0xce,0x1f,0xcd,0xcd,0xcd,0x24,\n0xc8,0xc8,0xc8,0x2a,0xc9,0xc9,0xc9,0x2f,0xc9,0xc9,0xc9,0x34,0xc9,0xc9,0xc9,0x39,\n0xc9,0xc9,0xc9,0x3d,0xc8,0xc8,0xc8,0x41,0xcb,0xcb,0xcb,0x44,0xee,0xee,0xee,0x87,\n0xfa,0xfa,0xfa,0xc8,0xf9,0xf9,0xf9,0xc9,0xf9,0xf9,0xf9,0xc9,0xfa,0xfa,0xfa,0xc9,\n0xfa,0xfa,0xfa,0xc9,0xf9,0xf9,0xf9,0xc9,0xf9,0xf9,0xf9,0xc9,0xfa,0xfa,0xfa,0xc8,\n0xee,0xee,0xee,0x87,0xcb,0xcb,0xcb,0x44,0xc8,0xc8,0xc8,0x41,0xc9,0xc9,0xc9,0x3d,\n0xc9,0xc9,0xc9,0x39,0xc9,0xc9,0xc9,0x34,0xc9,0xc9,0xc9,0x2f,0xc8,0xc8,0xc8,0x2a,\n0xcd,0xcd,0xcd,0x24,0xce,0xce,0xce,0x1f,0xce,0xce,0xce,0x1a,0xce,0xce,0xce,0x15,\n0xd2,0xd2,0xd2,0x11,0xd8,0xd8,0xd8,0x0d,0xcc,0xcc,0xcc,0x0a,0xdb,0xdb,0xdb,0x07,\n0xcc,0xcc,0xcc,0x05,0xbf,0xbf,0xbf,0x04,0xff,0xff,0xff,0x02,0xff,0xff,0xff,0x01,\n]);\n\nconst LASER_LENGTH = 1.0;\nconst LASER_DIAMETER = 0.01;\nconst LASER_FADE_END = 0.535;\nconst LASER_FADE_POINT = 0.5335;\nconst LASER_DEFAULT_COLOR = [1.0, 1.0, 1.0, 0.25];\n\nconst CURSOR_RADIUS = 0.004;\nconst CURSOR_SHADOW_RADIUS = 0.007;\nconst CURSOR_SHADOW_INNER_LUMINANCE = 0.5;\nconst CURSOR_SHADOW_OUTER_LUMINANCE = 0.0;\nconst CURSOR_SHADOW_INNER_OPACITY = 0.75;\nconst CURSOR_SHADOW_OUTER_OPACITY = 0.0;\nconst CURSOR_OPACITY = 0.9;\nconst CURSOR_SEGMENTS = 16;\nconst CURSOR_DEFAULT_COLOR = [1.0, 1.0, 1.0, 1.0];\nconst CURSOR_DEFAULT_HIDDEN_COLOR = [0.6, 0.6, 0.6, 0.4];\n\nconst DEFAULT_RESET_OPTIONS = {\n  controllers: true,\n  lasers: true,\n  cursors: true\n};\n\nclass LaserMaterial extends Material {\n  constructor() {\n    super();\n    this.render_order = RENDER_ORDER.ADDITIVE;\n    this.state.cull_face = false;\n    this.state.blend = true;\n    this.state.blend_func_src = GL.ONE;\n    this.state.blend_func_dst = GL.ONE;\n    this.state.depth_mask = false;\n\n    this.laser = this.defineSampler(\"diffuse\");\n    this.laser.texture = new DataTexture(LASER_TEXTURE_DATA, 48, 1);\n    this.laser_color = this.defineUniform(\"laserColor\", LASER_DEFAULT_COLOR);\n  }\n\n  get material_name() {\n    return 'INPUT_LASER';\n  }\n\n  get vertex_source() {\n    return `\n    attribute vec3 POSITION;\n    attribute vec2 TEXCOORD_0;\n\n    varying vec2 vTexCoord;\n\n    vec4 vertex_main(mat4 proj, mat4 view, mat4 model) {\n      vTexCoord = TEXCOORD_0;\n      return proj * view * model * vec4(POSITION, 1.0);\n    }`;\n  }\n\n  get fragment_source() {\n    return `\n    precision mediump float;\n\n    uniform vec4 laserColor;\n    uniform sampler2D diffuse;\n    varying vec2 vTexCoord;\n\n    const float fade_point = ${LASER_FADE_POINT};\n    const float fade_end = ${LASER_FADE_END};\n\n    vec4 fragment_main() {\n      vec2 uv = vTexCoord;\n      float front_fade_factor = 1.0 - clamp(1.0 - (uv.y - fade_point) / (1.0 - fade_point), 0.0, 1.0);\n      float back_fade_factor = clamp((uv.y - fade_point) / (fade_end - fade_point), 0.0, 1.0);\n      vec4 color = laserColor * texture2D(diffuse, vTexCoord);\n      float opacity = color.a * front_fade_factor * back_fade_factor;\n      return vec4(color.rgb * opacity, opacity);\n    }`;\n  }\n}\n\nconst CURSOR_VERTEX_SHADER = `\nattribute vec4 POSITION;\n\nvarying float vLuminance;\nvarying float vOpacity;\n\nvec4 vertex_main(mat4 proj, mat4 view, mat4 model) {\n  vLuminance = POSITION.z;\n  vOpacity = POSITION.w;\n\n  // Billboarded, constant size vertex transform.\n  vec4 screenPos = proj * view * model * vec4(0.0, 0.0, 0.0, 1.0);\n  screenPos /= screenPos.w;\n  screenPos.xy += POSITION.xy;\n  return screenPos;\n}`;\n\nconst CURSOR_FRAGMENT_SHADER = `\nprecision mediump float;\n\nuniform vec4 cursorColor;\nvarying float vLuminance;\nvarying float vOpacity;\n\nvec4 fragment_main() {\n  vec3 color = cursorColor.rgb * vLuminance;\n  float opacity = cursorColor.a * vOpacity;\n  return vec4(color * opacity, opacity);\n}`;\n\n// Cursors are drawn as billboards that always face the camera and are rendered\n// as a fixed size no matter how far away they are.\nclass CursorMaterial extends Material {\n  constructor() {\n    super();\n    this.render_order = RENDER_ORDER.ADDITIVE;\n    this.state.cull_face = false;\n    this.state.blend = true;\n    this.state.blend_func_src = GL.ONE;\n    this.state.depth_mask = false;\n\n    this.cursor_color = this.defineUniform(\"cursorColor\", CURSOR_DEFAULT_COLOR);\n  }\n\n  get material_name() {\n    return 'INPUT_CURSOR';\n  }\n\n  get vertex_source() {\n    return CURSOR_VERTEX_SHADER;\n  }\n\n  get fragment_source() {\n    return CURSOR_FRAGMENT_SHADER;\n  }\n}\n\nclass CursorHiddenMaterial extends Material {\n  constructor() {\n    super();\n    this.render_order = RENDER_ORDER.ADDITIVE;\n    this.state.cull_face = false;\n    this.state.blend = true;\n    this.state.blend_func_src = GL.ONE;\n    this.state.depth_func = GL.GEQUAL;\n    this.state.depth_mask = false;\n\n    this.cursor_color = this.defineUniform(\"cursorColor\", CURSOR_DEFAULT_HIDDEN_COLOR);\n  }\n\n  // TODO: Rename to \"program_name\"\n  get material_name() {\n    return 'INPUT_CURSOR_2';\n  }\n\n  get vertex_source() {\n    return CURSOR_VERTEX_SHADER;\n  }\n\n  get fragment_source() {\n    return CURSOR_FRAGMENT_SHADER;\n  }\n}\n\nexport class InputRenderer extends Node {\n  constructor(renderer) {\n    super();\n\n    this._renderer = renderer;\n\n    this._max_input_elements = 32;\n\n    this._controllers = [];\n    this._controller_node = null;\n    this._controller_node_handedness = null;\n    this._lasers = null;\n    this._cursors = null;\n\n    this._active_controllers = 0;\n    this._active_lasers = 0;\n    this._active_cursors = 0;\n  }\n\n  setControllerMesh(controller_node, handedness = 'right') {\n    this._controller_node = controller_node;\n    this._controller_node_handedness = handedness;\n  }\n\n  addController(grip_matrix) {\n    if (!this._controller_node) {\n        return;\n    }\n\n    let controller = null;\n    if (this._active_controllers < this._controllers.length) {\n      controller = this._controllers[this._active_controllers];\n    } else {\n      controller = this._controller_node.clone();\n      this.addNode(controller);\n      this._controllers.push(controller);\n    }\n    this._active_controllers = (this._active_controllers + 1) % this._max_input_elements;\n\n    controller.matrix = grip_matrix;\n    controller.visible = true;\n  }\n\n  addLaserPointer(pointer_matrix) {\n    // Create the laser pointer mesh if needed.\n    if (!this._lasers) {\n      this._lasers = [this._createLaserMesh()];\n      this.addNode(this._lasers[0]);\n    }\n\n    let laser = null;\n    if (this._active_lasers < this._lasers.length) {\n      laser = this._lasers[this._active_lasers];\n    } else {\n      laser = this._lasers[0].clone();\n      this.addNode(laser);\n      this._lasers.push(laser);\n    }\n    this._active_lasers = (this._active_lasers + 1) % this._max_input_elements;\n\n    laser.matrix = pointer_matrix;\n    laser.visible = true;\n  }\n\n  addCursor(cursor_pos) {\n    // Create the cursor mesh if needed.\n    if (!this._cursors) {\n      this._cursors = [this._createCursorMesh()];\n      this.addNode(this._cursors[0]);\n    }\n\n    let cursor = null;\n    if (this._active_cursors < this._cursors.length) {\n      cursor = this._cursors[this._active_cursors];\n    } else {\n      cursor = this._cursors[0].clone();\n      this.addNode(cursor);\n      this._cursors.push(cursor);\n    }\n    this._active_cursors = (this._active_cursors + 1) % this._max_input_elements;\n\n    cursor.translation = cursor_pos;\n    cursor.visible = true;\n  }\n\n  reset(options) {\n    if (!options) {\n      options = DEFAULT_RESET_OPTIONS;\n    }\n    if (this._controllers && options.controllers) {\n      for (let controller of this._controllers) {\n        controller.visible = false;\n      }\n      this._active_controllers = 0;\n    }\n    if (this._lasers && options.lasers) {\n      for (let laser of this._lasers) {\n        laser.visible = false;\n      }\n      this._active_lasers = 0;\n    }\n    if (this._cursors && options.cursors) {\n      for (let cursor of this._cursors) {\n        cursor.visible = false;\n      }\n      this._active_cursors = 0;\n    }\n  }\n\n  _createLaserMesh() {\n    let gl = this._renderer._gl;\n\n    let lr = LASER_DIAMETER * 0.5;\n    let ll = LASER_LENGTH;\n\n    // Laser is rendered as cross-shaped beam\n    let laser_verts = [\n    //X    Y     Z     U    V\n      0.0,  lr, 0.0,  0.0, 1.0,\n      0.0,  lr, -ll,  0.0, 0.0,\n      0.0, -lr, 0.0,  1.0, 1.0,\n      0.0, -lr, -ll,  1.0, 0.0,\n\n       lr, 0.0, 0.0,  0.0, 1.0,\n       lr, 0.0, -ll,  0.0, 0.0,\n      -lr, 0.0, 0.0,  1.0, 1.0,\n      -lr, 0.0, -ll,  1.0, 0.0,\n\n      0.0, -lr, 0.0,  0.0, 1.0,\n      0.0, -lr, -ll,  0.0, 0.0,\n      0.0,  lr, 0.0,  1.0, 1.0,\n      0.0,  lr, -ll,  1.0, 0.0,\n\n      -lr, 0.0, 0.0,  0.0, 1.0,\n      -lr, 0.0, -ll,  0.0, 0.0,\n       lr, 0.0, 0.0,  1.0, 1.0,\n       lr, 0.0, -ll,  1.0, 0.0,\n    ];\n    let laser_indices = [\n      0, 1, 2, 1, 3, 2,\n      4, 5, 6, 5, 7, 6,\n      8, 9, 10, 9, 11, 10,\n      12, 13, 14, 13, 15, 14,\n    ];\n  \n    let laser_vertex_buffer = this._renderer.createRenderBuffer(gl.ARRAY_BUFFER, new Float32Array(laser_verts));\n    let laser_index_buffer = this._renderer.createRenderBuffer(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(laser_indices));\n\n    let laser_index_count = laser_indices.length;\n\n    let laser_attribs = [\n      new PrimitiveAttribute(\"POSITION\", laser_vertex_buffer, 3, gl.FLOAT, 20, 0),\n      new PrimitiveAttribute(\"TEXCOORD_0\", laser_vertex_buffer, 2, gl.FLOAT, 20, 12),\n    ];\n  \n    let laser_primitive = new Primitive(laser_attribs, laser_index_count);\n    laser_primitive.setIndexBuffer(laser_index_buffer);\n\n    let laser_material = new LaserMaterial();\n\n    let laser_render_primitive = this._renderer.createRenderPrimitive(laser_primitive, laser_material);\n    let mesh_node = new Node();\n    mesh_node.addRenderPrimitive(laser_render_primitive);\n    return mesh_node;\n  }\n\n  _createCursorMesh() {\n    let gl = this._renderer._gl;\n\n    let cr = CURSOR_RADIUS;\n\n    // Cursor is a circular white dot with a dark \"shadow\" skirt around the edge\n    // that fades from black to transparent as it moves out from the center.\n    // Cursor verts are packed as [X, Y, Luminance, Opacity]\n    let cursor_verts = [];\n    let cursor_indices = [];\n\n    let seg_rad = (2.0 * Math.PI) / CURSOR_SEGMENTS;\n\n    // Cursor center\n    for (let i = 0; i < CURSOR_SEGMENTS; ++i) {\n      let rad = i * seg_rad;\n      let x = Math.cos(rad);\n      let y = Math.sin(rad);\n      cursor_verts.push(x * CURSOR_RADIUS, y * CURSOR_RADIUS, 1.0, CURSOR_OPACITY);\n\n      if (i > 1) {\n        cursor_indices.push(0, i-1, i);\n      }\n    }\n\n    let index_offset = CURSOR_SEGMENTS;\n\n    // Cursor Skirt\n    for (let i = 0; i < CURSOR_SEGMENTS; ++i) {\n      let rad = i * seg_rad;\n      let x = Math.cos(rad);\n      let y = Math.sin(rad);\n      cursor_verts.push(x * CURSOR_RADIUS, y * CURSOR_RADIUS,\n          CURSOR_SHADOW_INNER_LUMINANCE, CURSOR_SHADOW_INNER_OPACITY);\n      cursor_verts.push(x * CURSOR_SHADOW_RADIUS, y * CURSOR_SHADOW_RADIUS,\n          CURSOR_SHADOW_OUTER_LUMINANCE, CURSOR_SHADOW_OUTER_OPACITY);\n\n      if (i > 0) {\n        let idx = index_offset + (i * 2);\n        cursor_indices.push(idx-2, idx-1, idx);\n        cursor_indices.push(idx-1, idx+1, idx);\n      }\n    }\n\n    let idx = index_offset + (CURSOR_SEGMENTS * 2);\n    cursor_indices.push(idx-2, idx-1, index_offset);\n    cursor_indices.push(idx-1, index_offset+1, index_offset);\n\n    let cursor_vertex_buffer = this._renderer.createRenderBuffer(gl.ARRAY_BUFFER, new Float32Array(cursor_verts));\n    let cursor_index_buffer = this._renderer.createRenderBuffer(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(cursor_indices));\n\n    let cursor_index_count = cursor_indices.length;\n\n    let cursor_attribs = [\n      new PrimitiveAttribute(\"POSITION\", cursor_vertex_buffer, 4, gl.FLOAT, 16, 0),\n    ];\n  \n    let cursor_primitive = new Primitive(cursor_attribs, cursor_index_count);\n    cursor_primitive.setIndexBuffer(cursor_index_buffer);\n\n    let cursor_material = new CursorMaterial();\n    let cursor_hidden_material = new CursorHiddenMaterial();\n\n    // Cursor renders two parts: The bright opaque cursor for areas where it's\n    // not obscured and a more transparent, darker version for areas where it's\n    // behind another object.\n    let cursor_render_primitive = this._renderer.createRenderPrimitive(cursor_primitive, cursor_material);\n    let cursor_hidden_render_primitive = this._renderer.createRenderPrimitive(cursor_primitive, cursor_hidden_material);\n    let mesh_node = new Node();\n    mesh_node.addRenderPrimitive(cursor_render_primitive);\n    mesh_node.addRenderPrimitive(cursor_hidden_render_primitive);\n    return mesh_node;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/input-renderer.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/*\nNode for displaying 360 equirect images as a skybox.\n*/\n\nimport { Material, RENDER_ORDER } from '../core/material.js'\nimport { Primitive, PrimitiveAttribute } from '../core/primitive.js'\nimport { Node } from '../core/node.js'\nimport { UrlTexture } from '../core/texture.js'\n\nconst GL = WebGLRenderingContext; // For enums\n\nclass SkyboxMaterial extends Material {\n  constructor() {\n    super();\n    this.render_order = RENDER_ORDER.SKY;\n    this.state.depth_func = GL.LEQUAL;\n    this.state.depth_mask = false;\n\n    this.image = this.defineSampler(\"diffuse\");\n\n    this.tex_coord_scale_offset = this.defineUniform(\"texCoordScaleOffset\",\n                                                      [1.0, 1.0, 0.0, 0.0,\n                                                       1.0, 1.0, 0.0, 0.0], 4);\n  }\n\n  get material_name() {\n    return 'SKYBOX';\n  }\n\n  get vertex_source() {\n    return `\n    uniform int EYE_INDEX;\n    uniform vec4 texCoordScaleOffset[2];\n    attribute vec3 POSITION;\n    attribute vec2 TEXCOORD_0;\n    varying vec2 vTexCoord;\n\n    vec4 vertex_main(mat4 proj, mat4 view, mat4 model) {\n      vec4 scaleOffset = texCoordScaleOffset[EYE_INDEX];\n      vTexCoord = (TEXCOORD_0 * scaleOffset.xy) + scaleOffset.zw;\n      // Drop the translation portion of the view matrix\n      view[3].xyz = vec3(0.0, 0.0, 0.0);\n      vec4 out_vec = proj * view * model * vec4(POSITION, 1.0);\n\n      // Returning the W component for both Z and W forces the geometry depth to\n      // the far plane. When combined with a depth func of LEQUAL this makes the\n      // sky write to any depth fragment that has not been written to yet.\n      return out_vec.xyww;\n    }`;\n  }\n\n  get fragment_source() {\n    return `\n    uniform sampler2D diffuse;\n    varying vec2 vTexCoord;\n\n    vec4 fragment_main() {\n      return texture2D(diffuse, vTexCoord);\n    }`;\n  }\n}\n\nexport class Skybox extends Node {\n  constructor(options) {\n    super();\n\n    this._image_url = options.image_url;\n    this._display_mode = options.display_mode || \"mono\";\n  }\n\n  setRenderer(renderer) {\n    this.clearRenderPrimitives();\n\n    let vertices = [];\n    let indices = [];\n\n    let lat_segments = 40;\n    let lon_segments = 40;\n\n    // Create the vertices/indices\n    for (let i=0; i <= lat_segments; ++i) {\n      let theta = i * Math.PI / lat_segments;\n      let sin_theta = Math.sin(theta);\n      let cos_theta = Math.cos(theta);\n\n      let idx_offset_a = i * (lon_segments+1);\n      let idx_offset_b = (i+1) * (lon_segments+1);\n\n      for (let j=0; j <= lon_segments; ++j) {\n        let phi = j * 2 * Math.PI / lon_segments;\n        let x = Math.sin(phi) * sin_theta;\n        let y = cos_theta;\n        let z = -Math.cos(phi) * sin_theta;\n        let u = (j / lon_segments);\n        let v = (i / lat_segments);\n\n        // Vertex shader will force the geometry to the far plane, so the\n        // radius of the sphere is immaterial.\n        vertices.push(x, y, z, u, v);\n\n        if (i < lat_segments && j < lon_segments) {\n          let idx_a = idx_offset_a+j;\n          let idx_b = idx_offset_b+j;\n\n          indices.push(idx_a, idx_b, idx_a+1,\n                       idx_b, idx_b+1, idx_a+1);\n        }\n      }\n    }\n\n    let vertex_buffer = renderer.createRenderBuffer(GL.ARRAY_BUFFER, new Float32Array(vertices));\n    let index_buffer = renderer.createRenderBuffer(GL.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices));\n\n    let attribs = [\n      new PrimitiveAttribute(\"POSITION\", vertex_buffer, 3, GL.FLOAT, 20, 0),\n      new PrimitiveAttribute(\"TEXCOORD_0\", vertex_buffer, 2, GL.FLOAT, 20, 12),\n    ];\n  \n    let primitive = new Primitive(attribs, indices.length);\n    primitive.setIndexBuffer(index_buffer);\n\n    let material = new SkyboxMaterial();\n    material.image.texture = new UrlTexture(this._image_url);\n\n    switch(this._display_mode) {\n      case \"mono\":\n        material.tex_coord_scale_offset.value = [1.0, 1.0, 0.0, 0.0,\n                                                 1.0, 1.0, 0.0, 0.0];\n        break;\n      case \"stereoTopBottom\":\n        material.tex_coord_scale_offset.value = [1.0, 0.5, 0.0, 0.0,\n                                                 1.0, 0.5, 0.0, 0.5];\n        break;\n      case \"stereoLeftRight\":\n        material.tex_coord_scale_offset.value = [0.5, 1.0, 0.0, 0.0,\n                                                 0.5, 1.0, 0.5, 0.0];\n        break;\n    }\n\n    let render_primitive = renderer.createRenderPrimitive(primitive, material);\n    this.addRenderPrimitive(render_primitive);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/skybox.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/*\nHeavily inspired by Mr. Doobs stats.js, this FPS counter is rendered completely\nwith WebGL, allowing it to be shown in cases where overlaid HTML elements aren't\nusable (like WebXR), or if you want the FPS counter to be rendered as part of\nyour scene.\n*/\n\nimport { Material } from '../core/material.js'\nimport { Node } from '../core/node.js'\nimport { Primitive, PrimitiveAttribute } from '../core/primitive.js'\nimport { SevenSegmentText } from './seven-segment-text.js'\n\nconst SEGMENTS = 30;\nconst MAX_FPS = 90;\n\nclass StatsMaterial extends Material {\n  get material_name() {\n    return 'STATS_VIEWER';\n  }\n\n  get vertex_source() {\n    return `\n    attribute vec3 POSITION;\n    attribute vec3 COLOR_0;\n    varying vec4 vColor;\n\n    vec4 vertex_main(mat4 proj, mat4 view, mat4 model) {\n      vColor = vec4(COLOR_0, 1.0);\n      return proj * view * model * vec4(POSITION, 1.0);\n    }`;\n  }\n\n  get fragment_source() {\n    return `\n    precision mediump float;\n    varying vec4 vColor;\n\n    vec4 fragment_main() {\n      return vColor;\n    }`;\n  }\n}\n\nfunction segmentToX(i) {\n  return ((0.9/SEGMENTS) * i) - 0.45;\n}\n\nfunction fpsToY(value) {\n  return (Math.min(value, MAX_FPS) * (0.7 / MAX_FPS)) - 0.45;\n}\n\nfunction fpsToRGB(value) {\n  return {\n    r: Math.max(0.0, Math.min(1.0, 1.0 - (value/60))),\n    g: Math.max(0.0, Math.min(1.0, ((value-15)/(MAX_FPS-15)))),\n    b: Math.max(0.0, Math.min(1.0, ((value-15)/(MAX_FPS-15))))\n  };\n}\n\nlet now = (window.performance && performance.now) ? performance.now.bind(performance) : Date.now;\n\nexport class StatsViewer extends Node {\n  constructor(renderer) {\n    super();\n\n    this._performance_monitoring = false;\n\n    this._renderer = renderer;\n\n    this._start_time = now();\n    this._prev_frame_time = this._start_time;\n    this._prev_graph_update_time = this._start_time;\n    this._frames = 0;\n    this._fps_average = 0;\n    this._fps_min = 0;\n    this._fps_step = this._performance_monitoring ? 1000 : 250;\n    this._last_segment = 0;\n\n    this._fps_vertex_buffer = null;\n    this._fps_render_primitive = null;\n    this._fps_node = null;\n    this._seven_segment_node = null;\n\n    let gl = this._renderer.gl;\n\n    let fps_verts = [];\n    let fps_indices = [];\n\n    // Graph geometry\n    for (let i = 0; i < SEGMENTS; ++i) {\n      // Bar top\n      fps_verts.push(segmentToX(i), fpsToY(0), 0.02, 0.0, 1.0, 1.0);\n      fps_verts.push(segmentToX(i+1), fpsToY(0), 0.02, 0.0, 1.0, 1.0);\n\n      // Bar bottom\n      fps_verts.push(segmentToX(i), fpsToY(0), 0.02, 0.0, 1.0, 1.0);\n      fps_verts.push(segmentToX(i+1), fpsToY(0), 0.02, 0.0, 1.0, 1.0);\n\n      let idx = i * 4;\n      fps_indices.push(idx, idx+3, idx+1,\n                       idx+3, idx, idx+2);\n    }\n\n    function addBGSquare(left, bottom, right, top, z, r, g, b) {\n      let idx = fps_verts.length / 6;\n\n      fps_verts.push(left, bottom, z, r, g, b);\n      fps_verts.push(right, top, z, r, g, b);\n      fps_verts.push(left, top, z, r, g, b);\n      fps_verts.push(right, bottom, z, r, g, b);\n\n      fps_indices.push(idx, idx+1, idx+2,\n                       idx, idx+3, idx+1);\n    };\n\n    // Panel Background\n    addBGSquare(-0.5, -0.5, 0.5, 0.5, 0.0, 0.0, 0.0, 0.125);\n\n    // FPS Background\n    addBGSquare(-0.45, -0.45, 0.45, 0.25, 0.01, 0.0, 0.0, 0.4);\n\n    // 30 FPS line\n    addBGSquare(-0.45, fpsToY(30), 0.45, fpsToY(32), 0.015, 0.5, 0.0, 0.5);\n\n    // 60 FPS line\n    addBGSquare(-0.45, fpsToY(60), 0.45, fpsToY(62), 0.015, 0.2, 0.0, 0.75);\n\n    this._fps_vertex_buffer = this._renderer.createRenderBuffer(gl.ARRAY_BUFFER, new Float32Array(fps_verts), gl.DYNAMIC_DRAW);\n    let fps_index_buffer = this._renderer.createRenderBuffer(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(fps_indices));\n\n    let fps_attribs = [\n      new PrimitiveAttribute(\"POSITION\", this._fps_vertex_buffer, 3, gl.FLOAT, 24, 0),\n      new PrimitiveAttribute(\"COLOR_0\", this._fps_vertex_buffer, 3, gl.FLOAT, 24, 12),\n    ];\n  \n    let fps_primitive = new Primitive(fps_attribs, fps_indices.length);\n    fps_primitive.setIndexBuffer(fps_index_buffer);\n    fps_primitive.setBounds([-0.5, -0.5, 0.0], [0.5, 0.5, 0.015]);\n\n    this._fps_render_primitive = this._renderer.createRenderPrimitive(fps_primitive, new StatsMaterial());\n    this._fps_node = new Node();\n    this._fps_node.addRenderPrimitive(this._fps_render_primitive);\n    this.addNode(this._fps_node);\n\n    this._seven_segment_node = new SevenSegmentText(this._renderer);\n    // Hard coded because it doesn't change:\n    // Scale by 0.075 in X and Y\n    // Translate into upper left corner w/ z = 0.02\n    this._seven_segment_node.matrix = new Float32Array([\n      0.075, 0, 0, 0,\n      0, 0.075, 0, 0,\n      0, 0, 1, 0,\n      -0.3625, 0.3625, 0.02, 1\n    ]);\n    this.addNode(this._seven_segment_node);\n  }\n\n  get performance_monitoring() {\n    return this._performance_monitoring;\n  }\n\n  set performance_monitoring(value) {\n    this._performance_monitoring = value;\n    this._fps_step = value ? 1000 : 250;\n  }\n\n  begin() {\n    this._start_time = now();\n  }\n\n  end() {\n    let time = now();\n\n    let frame_fps = 1000 / (time - this._prev_frame_time);\n    this._prev_frame_time = time;\n    this._fps_min = this._frames ? Math.min(this._fps_min, frame_fps) : frame_fps;\n    this._frames++;\n\n    if (time > this._prev_graph_update_time + this._fps_step) {\n      let interval_time = time - this._prev_graph_update_time;\n      this._fps_average = Math.round(1000 / (interval_time / this._frames));\n\n      // Draw both average and minimum FPS for this period\n      // so that dropped frames are more clearly visible.\n      this._updateGraph(this._fps_min, this._fps_average);\n      if (this.enable_performance_monitoring) {\n        console.log(`Average FPS: ${this._fps_average} Min FPS: ${this._fps_min}`);\n      }\n\n      this._prev_graph_update_time = time;\n      this._frames = 0;\n      this._fps_min = 0;\n    }\n  }\n\n  _updateGraph(value_low, value_high) {\n    let color = fpsToRGB(value_low);\n    // Draw a range from the low to high value. Artificially widen the\n    // range a bit to ensure that near-equal values still remain\n    // visible - the logic here should match that used by the\n    // \"60 FPS line\" setup below. Hitting 60fps consistently will\n    // keep the top half of the 60fps background line visible.\n    let y0 = fpsToY(value_low - 1);\n    let y1 = fpsToY(value_high + 1);\n\n    // Update the current segment with the new FPS value\n    let updateVerts = [\n      segmentToX(this._last_segment), y1, 0.02, color.r, color.g, color.b,\n      segmentToX(this._last_segment+1), y1, 0.02, color.r, color.g, color.b,\n      segmentToX(this._last_segment), y0, 0.02, color.r, color.g, color.b,\n      segmentToX(this._last_segment+1), y0, 0.02, color.r, color.g, color.b,\n    ];\n\n    // Re-shape the next segment into the green \"progress\" line\n    color.r = 0.2;\n    color.g = 1.0;\n    color.b = 0.2;\n\n    if (this._last_segment == SEGMENTS - 1) {\n      // If we're updating the last segment we need to do two bufferSubDatas\n      // to update the segment and turn the first segment into the progress line.\n      this._renderer.updateRenderBuffer(this._fps_vertex_buffer, new Float32Array(updateVerts), this._last_segment * 24 * 4);\n      updateVerts = [\n        segmentToX(0), fpsToY(MAX_FPS), 0.02, color.r, color.g, color.b,\n        segmentToX(.25), fpsToY(MAX_FPS), 0.02, color.r, color.g, color.b,\n        segmentToX(0), fpsToY(0), 0.02, color.r, color.g, color.b,\n        segmentToX(.25), fpsToY(0), 0.02, color.r, color.g, color.b\n      ];\n      this._renderer.updateRenderBuffer(this._fps_vertex_buffer, new Float32Array(updateVerts), 0);\n    } else {\n      updateVerts.push(\n        segmentToX(this._last_segment+1), fpsToY(MAX_FPS), 0.02, color.r, color.g, color.b,\n        segmentToX(this._last_segment+1.25), fpsToY(MAX_FPS), 0.02, color.r, color.g, color.b,\n        segmentToX(this._last_segment+1), fpsToY(0), 0.02, color.r, color.g, color.b,\n        segmentToX(this._last_segment+1.25), fpsToY(0), 0.02, color.r, color.g, color.b\n      );\n      this._renderer.updateRenderBuffer(this._fps_vertex_buffer, new Float32Array(updateVerts), this._last_segment * 24 * 4);\n    }\n\n    this._last_segment = (this._last_segment+1) % SEGMENTS;\n\n    this._seven_segment_node.text = `${this._fps_average} FP5`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/stats-viewer.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/*\nRenders simple text using a seven-segment LED style pattern. Only really good\nfor numbers and a limited number of other characters.\n*/\n\nimport { Material } from '../core/material.js'\nimport { Node } from '../core/node.js'\nimport { Primitive, PrimitiveAttribute } from '../core/primitive.js'\n\nconst TEXT_KERNING = 2.0;\n\nclass SevenSegmentMaterial extends Material {\n  get material_name() {\n    return 'SEVEN_SEGMENT_TEXT';\n  }\n\n  get vertex_source() {\n    return `\n    attribute vec2 POSITION;\n\n    vec4 vertex_main(mat4 proj, mat4 view, mat4 model) {\n      return proj * view * model * vec4(POSITION, 0.0, 1.0);\n    }`;\n  }\n\n  get fragment_source() {\n    return `\n    precision mediump float;\n    const vec4 color = vec4(0.0, 1.0, 0.0, 1.0);\n\n    vec4 fragment_main() {\n      return color;\n    }`;\n  }\n}\n\nexport class SevenSegmentText extends Node {\n  constructor(renderer) {\n    super();\n\n    this._renderer = renderer;\n    this._text = \"\";\n    this._char_nodes = [];\n\n    let vertices = [];\n    let segmentIndices = {};\n    let indices = [];\n\n    const width = 0.5;\n    const thickness = 0.25;\n\n    function defineSegment(id, left, top, right, bottom) {\n      var idx = vertices.length / 2;\n      vertices.push(\n          left, top,\n          right, top,\n          right, bottom,\n          left, bottom);\n\n      segmentIndices[id] = [\n          idx, idx+2, idx+1,\n          idx, idx+3, idx+2];\n    }\n\n    let characters = {};\n    function defineCharacter(c, segments) {\n      var character = {\n        character: c,\n        offset: indices.length * 2,\n        count: 0\n      };\n\n      for (var i = 0; i < segments.length; ++i) {\n        var idx = segments[i];\n        var segment = segmentIndices[idx];\n        character.count += segment.length;\n        indices.push.apply(indices, segment);\n      }\n\n      characters[c] = character;\n    }\n\n    /* Segment layout is as follows:\n\n    |-0-|\n    3   4\n    |-1-|\n    5   6\n    |-2-|\n\n    */\n\n    defineSegment(0, -1, 1, width, 1-thickness);\n    defineSegment(1, -1, thickness*0.5, width, -thickness*0.5);\n    defineSegment(2, -1, -1+thickness, width, -1);\n    defineSegment(3, -1, 1, -1+thickness, -thickness*0.5);\n    defineSegment(4, width-thickness, 1, width, -thickness*0.5);\n    defineSegment(5, -1, thickness*0.5, -1+thickness, -1);\n    defineSegment(6, width-thickness, thickness*0.5, width, -1);\n\n\n    defineCharacter(\"0\", [0, 2, 3, 4, 5, 6]);\n    defineCharacter(\"1\", [4, 6]);\n    defineCharacter(\"2\", [0, 1, 2, 4, 5]);\n    defineCharacter(\"3\", [0, 1, 2, 4, 6]);\n    defineCharacter(\"4\", [1, 3, 4, 6]);\n    defineCharacter(\"5\", [0, 1, 2, 3, 6]);\n    defineCharacter(\"6\", [0, 1, 2, 3, 5, 6]);\n    defineCharacter(\"7\", [0, 4, 6]);\n    defineCharacter(\"8\", [0, 1, 2, 3, 4, 5, 6]);\n    defineCharacter(\"9\", [0, 1, 2, 3, 4, 6]);\n    defineCharacter(\"A\", [0, 1, 3, 4, 5, 6]);\n    defineCharacter(\"B\", [1, 2, 3, 5, 6]);\n    defineCharacter(\"C\", [0, 2, 3, 5]);\n    defineCharacter(\"D\", [1, 2, 4, 5, 6]);\n    defineCharacter(\"E\", [0, 1, 2, 4, 6]);\n    defineCharacter(\"F\", [0, 1, 3, 5]);\n    defineCharacter(\"P\", [0, 1, 3, 4, 5]);\n    defineCharacter(\"-\", [1]);\n    defineCharacter(\" \", []);\n    defineCharacter(\"_\", [2]); // Used for undefined characters\n\n    let gl = this._renderer.gl;\n    let vertex_buffer = this._renderer.createRenderBuffer(gl.ARRAY_BUFFER, new Float32Array(vertices));\n    let index_buffer = this._renderer.createRenderBuffer(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices));\n\n    let vertex_attribs = [\n      new PrimitiveAttribute(\"POSITION\", vertex_buffer, 2, gl.FLOAT, 8, 0),\n    ];\n    \n    let primitive = new Primitive(vertex_attribs, indices.length);\n    primitive.setIndexBuffer(index_buffer);\n\n    let material = new SevenSegmentMaterial();\n\n    this._char_primitives = {};\n    for (let char in characters) {\n      let char_def = characters[char];\n      primitive.element_count = char_def.count;\n      primitive.index_byte_offset = char_def.offset;\n      this._char_primitives[char] = this._renderer.createRenderPrimitive(primitive, material);\n    }\n  }\n\n  get text() {\n    return this._text;\n  }\n\n  set text(value) {\n    this._text = value;\n\n    let i = 0;\n    let char_primitive = null;\n    for (; i < value.length; ++i) {\n      if (value[i] in this._char_primitives) {\n        char_primitive = this._char_primitives[value[i]];\n      } else {\n        char_primitive = this._char_primitives[\"_\"];\n      }\n\n      if (this._char_nodes.length <= i) {\n        let node = new Node();\n        node.addRenderPrimitive(char_primitive);\n        let offset = i * TEXT_KERNING;\n        node.translation = [offset, 0, 0];\n        this._char_nodes.push(node);\n        this.addNode(node);\n      } else {\n        // This is sort of an abuse of how these things are expected to work,\n        // but it's the cheapest thing I could think of that didn't break the\n        // world.\n        this._char_nodes[i].clearRenderPrimitives();\n        this._char_nodes[i].addRenderPrimitive(char_primitive);\n        this._char_nodes[i].visible = true;\n      }\n    }\n\n    // If there's any nodes left over make them invisible\n    for (; i < this._char_nodes.length; ++i) {\n      this._char_nodes[i].visible = false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodes/seven-segment-text.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { PbrMaterial } from '../materials/pbr.js'\nimport { Node } from '../core/node.js'\nimport { Primitive, PrimitiveAttribute } from '../core/primitive.js'\nimport { ImageTexture, ColorTexture } from '../core/texture.js'\n\nconst GL = WebGLRenderingContext; // For enums\n\nconst GLB_MAGIC = 0x46546C67;\nconst CHUNK_TYPE = {\n  JSON: 0x4E4F534A,\n  BIN: 0x004E4942\n};\n\nfunction isAbsoluteUri (uri) {\n  let absRegEx = new RegExp('^'+window.location.protocol, 'i');\n  return !!uri.match(absRegEx);\n}\n\nfunction isDataUri(uri) {\n  let dataRegEx = /^data:/;\n  return !!uri.match(dataRegEx);\n}\n\nfunction resolveUri(uri, baseUrl) {\n  if (isAbsoluteUri(uri) || isDataUri(uri)) {\n      return uri;\n  }\n  return baseUrl + uri;\n}\n\nfunction getComponentCount(type) {\n  switch (type) {\n    case 'SCALAR': return 1;\n    case 'VEC2': return 2;\n    case 'VEC3': return 3;\n    case 'VEC4': return 4;\n    default: return 0;\n  }\n}\n\n/**\n * GLTF2SceneLoader\n * Loads glTF 2.0 scenes into a renderable node tree.\n */\n\nexport class GLTF2Loader {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this._gl = renderer._gl;\n  }\n\n  loadFromUrl(url) {\n    return fetch(url)\n        .then((response) => {\n          let i = url.lastIndexOf('/');\n          let baseUrl = (i !== 0) ? url.substring(0, i + 1) : '';\n\n          if (url.endsWith('.gltf')) {\n            return response.json().then((json) => {\n              return this.loadFromJson(json, baseUrl);\n            });\n          } else if (url.endsWith('.glb')) {\n            return response.arrayBuffer().then((arrayBuffer) => {\n              return this.loadFromBinary(arrayBuffer, baseUrl);\n            });\n          } else {\n            throw new Error('Unrecognized file extension');\n          }\n        });\n  }\n\n  loadFromBinary(arrayBuffer, baseUrl) {\n    let headerView = new DataView(arrayBuffer, 0, 12);\n    let magic = headerView.getUint32(0, true);\n    let version = headerView.getUint32(4, true);\n    let length = headerView.getUint32(8, true);\n\n    if (magic != GLB_MAGIC) {\n      throw new Error('Invalid magic string in binary header.');\n    }\n\n    if (version != 2) {\n      throw new Error('Incompatible version in binary header.');\n    }\n\n    let chunks = {};\n    let chunkOffset = 12;\n    while (chunkOffset < length) {\n      let chunkHeaderView = new DataView(arrayBuffer, chunkOffset, 8);\n      let chunkLength = chunkHeaderView.getUint32(0, true);\n      let chunkType = chunkHeaderView.getUint32(4, true);\n      chunks[chunkType] = arrayBuffer.slice(chunkOffset + 8, chunkOffset + 8 + chunkLength);\n      chunkOffset += chunkLength + 8;\n    }\n\n    if (!chunks[CHUNK_TYPE.JSON]) {\n      throw new Error('File contained no json chunk.');\n    }\n\n    let decoder = new TextDecoder('utf-8');\n    let jsonString = decoder.decode(chunks[CHUNK_TYPE.JSON]);\n    let json = JSON.parse(jsonString);\n    return this.loadFromJson(json, baseUrl, chunks[CHUNK_TYPE.BIN]);\n  }\n\n  loadFromJson(json, baseUrl, binaryChunk) {\n    if (!json.asset) {\n      throw new Error(\"Missing asset description.\");\n    }\n\n    if (json.asset.minVersion != \"2.0\" && json.asset.version != \"2.0\") {\n      throw new Error(\"Incompatible asset version.\");\n    }\n\n    let buffers = [];\n    if (binaryChunk) {\n      buffers[0] = new GLTF2Resource({}, baseUrl, binaryChunk);\n    } else {\n      for (let buffer of json.buffers) {\n        buffers.push(new GLTF2Resource(buffer, baseUrl));\n      }\n    }\n\n    let bufferViews = [];\n    for (let bufferView of json.bufferViews) {\n      bufferViews.push(new GLTF2BufferView(bufferView, buffers));\n    }\n\n    let images = [];\n    if (json.images) {\n      for (let image of json.images) {\n        images.push(new GLTF2Resource(image, baseUrl));\n      }\n    }\n\n    let textures = [];\n    if (json.textures) {\n      let i = 0;\n      for (let texture of json.textures) {\n        let image = images[texture.source];\n        let glTexture = image.texture(bufferViews);\n        if(texture.sampler) {\n          let sampler = sampler[texture.sampler];\n          glTexture.sampler.min_filter = sampler.minFilter;\n          glTexture.sampler.mag_filter = sampler.magFilter;\n          glTexture.sampler.wrap_s = sampler.wrapS;\n          glTexture.sampler.wrap_t = sampler.wrapT;\n        }\n        textures.push(glTexture);\n      }\n    }\n\n    function getTexture(textureInfo) {\n      if (!textureInfo) {\n        return null;\n      }\n      return textures[textureInfo.index];\n    }\n\n    let materials = [];\n    if (json.materials) {\n      for (let material of json.materials) {\n        let glMaterial = new PbrMaterial();\n        let pbr = material.pbrMetallicRoughness || {};\n\n        glMaterial.base_color_factor.value = pbr.baseColorFactor || [1, 1, 1, 1];\n        glMaterial.base_color.texture = getTexture(pbr.baseColorTexture);\n        glMaterial.metallic_roughness_factor.value = [\n            pbr.metallicFactor || 1.0,\n            pbr.roughnessFactor || 1.0\n        ];\n        glMaterial.metallic_roughness.texture = getTexture(pbr.metallicRoughnessTexture);\n        glMaterial.normal.texture = getTexture(json.normalTexture);\n        glMaterial.occlusion.texture = getTexture(json.occlusionTexture);\n        glMaterial.occlusion_strength.value = (json.occlusionTexture && json.occlusionTexture.strength) ? json.occlusionTexture.strength : 1.0;\n        glMaterial.emissive_factor.value = material.emissiveFactor || [0, 0, 0];\n        glMaterial.emissive.texture = getTexture(json.emissiveTexture);\n        if (!glMaterial.emissive.texture && json.emissiveFactor) {\n          glMaterial.emissive.texture = new ColorTexture(1.0, 1.0, 1.0, 1.0);\n        }\n\n        switch(material.alphaMode) {\n          case \"BLEND\":\n            glMaterial.state.blend = true;\n            break;\n          case \"MASK\":\n            // Not really supported.\n            glMaterial.state.blend = true;\n            break;\n          default: // Includes \"OPAQUE\"\n            glMaterial.state.blend = false;\n        }\n\n        //glMaterial.alpha_mode = material.alphaMode;\n        //glMaterial.alpha_cutoff = material.alphaCutoff;\n        glMaterial.state.cull_face = !(material.doubleSided);\n\n        materials.push(glMaterial);\n      }\n    }\n\n    let accessors = json.accessors;\n\n    let meshes = [];\n    for (let mesh of json.meshes) {\n      let glMesh = new GLTF2Mesh();\n      meshes.push(glMesh);\n\n      for (let primitive of mesh.primitives) {\n        let material = null;\n        if ('material' in primitive) {\n          material = materials[primitive.material];\n        } else {\n          // Create a \"default\" material if the primitive has none.\n          material = new Material();\n        }\n\n        let attributes = [];\n        let element_count = 0;\n        /*let glPrimitive = new GLTF2Primitive(primitive, material);\n        glMesh.primitives.push(glPrimitive);*/\n\n        let min = null;\n        let max = null;\n\n        for (let name in primitive.attributes) {\n          let accessor = accessors[primitive.attributes[name]];\n          let bufferView = bufferViews[accessor.bufferView];\n          element_count = accessor.count;\n\n          let glAttribute = new PrimitiveAttribute(\n            name,\n            bufferView.renderBuffer(this.renderer, GL.ARRAY_BUFFER),\n            getComponentCount(accessor.type),\n            accessor.componentType,\n            bufferView.byteStride || 0,\n            accessor.byteOffset || 0\n          );\n          glAttribute.normalized = accessor.normalized || false;\n\n          if (name == \"POSITION\") {\n            min = accessor.min;\n            max = accessor.max;\n          }\n          \n          attributes.push(glAttribute);\n        }\n\n        let glPrimitive = new Primitive(attributes, element_count, primitive.mode);\n\n        if ('indices' in primitive) {\n          let accessor = accessors[primitive.indices];\n          let bufferView = bufferViews[accessor.bufferView];\n\n          glPrimitive.setIndexBuffer(\n            bufferView.renderBuffer(this.renderer, GL.ELEMENT_ARRAY_BUFFER),\n            accessor.byteOffset || 0,\n            accessor.componentType\n          );\n          glPrimitive.indexType = accessor.componentType;\n          glPrimitive.indexByteOffset = accessor.byteOffset || 0;\n          glPrimitive.element_count = accessor.count;\n        }\n\n        if (min && max) {\n          glPrimitive.setBounds(min, max);\n        }\n\n        // After all the attributes have been processed, get a program that is\n        // appropriate for both the material and the primitive attributes.\n        glMesh.primitives.push(\n            this.renderer.createRenderPrimitive(glPrimitive, material));\n      }\n    }\n\n    let scene_node = new Node();\n    let scene = json.scenes[json.scene];\n    for (let nodeId of scene.nodes) {\n      let node = json.nodes[nodeId];\n      scene_node.addNode(\n          this.processNodes(node, json.nodes, meshes));\n    }\n\n    return scene_node;\n  }\n\n  processNodes(node, nodes, meshes) {\n    let glNode = new Node();\n    glNode.name = node.name;\n\n    if ('mesh' in node) {\n      let mesh = meshes[node.mesh];\n      for (let primitive of mesh.primitives) {\n        glNode.addRenderPrimitive(primitive);\n      }\n    }\n\n    if (node.matrix) {\n      glNode.matrix = new Float32Array(node.matrix);\n    } else if (node.translation || node.rotation || node.scale) {\n      if (node.translation)\n        glNode.translation = new Float32Array(node.translation);\n\n      if (node.rotation)\n        glNode.rotation = new Float32Array(node.rotation);\n\n      if (node.scale)\n        glNode.scale = new Float32Array(node.scale);\n    }\n\n    if (node.children) {\n      for (let nodeId of node.children) {\n        let node = nodes[nodeId];\n        glNode.addNode(this.processNodes(node, nodes, meshes));\n      }\n    }\n\n    return glNode;\n  }\n}\n\nclass GLTF2Mesh {\n  constructor() {\n    this.primitives = [];\n  }\n}\n\nclass GLTF2BufferView {\n  constructor(json, buffers) {\n    this.buffer = buffers[json.buffer];\n    this.byteOffset = json.byteOffset || 0;\n    this.byteLength = json.byteLength || null;\n    this.byteStride = json.byteStride;\n\n    this._viewPromise = null;\n    this._renderBuffer = null;\n  }\n\n  dataView() {\n    if (!this._viewPromise) {\n      this._viewPromise = this.buffer.arrayBuffer().then((arrayBuffer) => {\n        return new DataView(arrayBuffer, this.byteOffset, this.byteLength);\n      });\n    }\n    return this._viewPromise;\n  }\n\n  renderBuffer(renderer, target) {\n    if (!this._renderBuffer) {\n      this._renderBuffer = renderer.createRenderBuffer(target, this.dataView());\n    }\n    return this._renderBuffer;\n  }\n}\n\nclass GLTF2Resource {\n  constructor(json, baseUrl, arrayBuffer) {\n    this.json = json;\n    this.baseUrl = baseUrl;\n\n    this._dataPromise = null;\n    this._texture = null;\n    if (arrayBuffer) {\n      this._dataPromise = Promise.resolve(arrayBuffer);\n    }\n  }\n\n  arrayBuffer() {\n    if (!this._dataPromise) {\n      if (isDataUri(this.json.uri)) {\n        let base64String = this.json.uri.replace('data:application/octet-stream;base64,', '');\n        let binaryArray = Uint8Array.from(atob(base64String), c => c.charCodeAt(0));\n        this._dataPromise = Promise.resolve(binaryArray.buffer);\n        return this._dataPromise;\n      }\n\n      this._dataPromise = fetch(resolveUri(this.json.uri, this.baseUrl))\n          .then((response) => response.arrayBuffer());\n    }\n    return this._dataPromise;\n  }\n\n  texture(bufferViews) {\n    if (!this._texture) {\n      let img = new Image();\n      this._texture = new ImageTexture(img);\n\n      if (this.json.uri) {\n        if (isDataUri(this.json.uri)) {\n          img.src = this.json.uri;\n        } else {\n          img.src = `${this.baseUrl}${this.json.uri}`;\n        }\n      } else {\n        let view = bufferViews[this.json.bufferView];\n        view.dataView().then((dataView) => {\n          let blob = new Blob([dataView], { type: this.json.mimeType } );\n          img.src = window.URL.createObjectURL(blob);\n        });\n      }\n    }\n    return this._texture;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/loaders/gltf2.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { Scene } from './scene.js'\nimport { Material } from '../core/material.js'\nimport { Primitive, PrimitiveAttribute } from '../core/primitive.js'\nimport { Node } from '../core/node.js'\nimport { UrlTexture } from '../core/texture.js'\nimport { BoxBuilder } from '../geometry/box-builder.js'\n\nclass CubeSeaMaterial extends Material {\n  constructor() {\n    super();\n\n    this.base_color = this.defineSampler(\"baseColor\");\n  }\n\n  get material_name() {\n    return 'CUBE_SEA';\n  }\n\n  get vertex_source() {\n    return `\n    attribute vec3 POSITION;\n    attribute vec2 TEXCOORD_0;\n    attribute vec3 NORMAL;\n\n    varying vec2 vTexCoord;\n    varying vec3 vLight;\n\n    const vec3 lightDir = vec3(0.75, 0.5, 1.0);\n    const vec3 ambientColor = vec3(0.5, 0.5, 0.5);\n    const vec3 lightColor = vec3(0.75, 0.75, 0.75);\n\n    vec4 vertex_main(mat4 proj, mat4 view, mat4 model) {\n      vec3 normalRotated = vec3(model * vec4(NORMAL, 0.0));\n      float lightFactor = max(dot(normalize(lightDir), normalRotated), 0.0);\n      vLight = ambientColor + (lightColor * lightFactor);\n      vTexCoord = TEXCOORD_0;\n      return proj * view * model * vec4(POSITION, 1.0);\n    }`;\n  }\n\n  get fragment_source() {\n    return `\n    precision mediump float;\n    uniform sampler2D baseColor;\n    varying vec2 vTexCoord;\n    varying vec3 vLight;\n\n    vec4 fragment_main() {\n      return vec4(vLight, 1.0) * texture2D(baseColor, vTexCoord);\n    }`;\n  }\n}\n\nexport class CubeSeaScene extends Scene {\n  constructor(options = {}) {\n    super();\n\n    this._grid_size = options.grid_size ? options.grid_size : 10;\n    this._image_url = options.image_url ? options.image_url : 'media/textures/cube-sea.png';\n  }\n\n  onLoadScene(renderer) {\n    let box_builder = new BoxBuilder();\n\n    // Build the cube sea\n    let half_grid = this._grid_size * 0.5;\n    for (let x = 0; x < this._grid_size; ++x) {\n      for (let y = 0; y < this._grid_size; ++y) {\n        for (let z = 0; z < this._grid_size; ++z) {\n          let pos = [x - half_grid, y - half_grid, z - half_grid];\n          // Don't place a cube in the center of the grid.\n          if (pos[0] != 0 || pos[1] != 0 || pos[2] != 0) {\n            box_builder.pushCube(pos, 0.4);\n          }\n        }\n      }\n    }\n\n    let cube_sea_primitive = box_builder.primitive_stream.finishPrimitive(renderer);\n\n    box_builder.primitive_stream.clear();\n\n    // Build the spinning \"hero\" cubes\n    box_builder.pushCube([0, 0.25, -0.8], 0.1);\n    box_builder.pushCube([0.8, 0.25, 0], 0.1);\n    box_builder.pushCube([0, 0.25, 0.8], 0.1);\n    box_builder.pushCube([-0.8, 0.25, 0], 0.1);\n\n    let hero_primitive = box_builder.primitive_stream.finishPrimitive(renderer);\n\n    let material = new CubeSeaMaterial();\n    material.base_color.texture = new UrlTexture(this._image_url);\n\n    this.cube_sea_node = renderer.createMesh(cube_sea_primitive, material);\n    this.hero_node = renderer.createMesh(hero_primitive, material);\n\n    this.addNode(this.cube_sea_node);\n    this.addNode(this.hero_node);\n\n    return this.waitForComplete();\n  }\n\n  onDrawViews(renderer, timestamp, views) {\n    mat4.fromRotation(this.hero_node.matrix, timestamp / 2000, [0, 1, 0]);\n    renderer.drawViews(views, this);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/cube-sea.js","// Copyright 2018 The Immersive Web Community Group\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { Scene } from './scene.js'\nimport { GLTF2Loader } from '../loaders/gltf2.js'\n\nexport class GLTF2Scene extends Scene {\n  constructor(url) {\n    super();\n\n    this.url = url;\n    this.gltf_node = null;\n  }\n\n  onLoadScene(renderer) {\n    return this.gltf2Loader.loadFromUrl(this.url).then((scene_node) => {\n      this.gltf_node = scene_node;\n      this.addNode(this.gltf_node);\n      return this.waitForComplete();\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scenes/gltf2.js"],"sourceRoot":""}